C:\Users\Administrator\AppData\Local\Programs\Python\Python36 - 32\Scripts\python.exe
C: / Users / Administrator / PycharmProjects / untitled / 123
test / lianxi02.py

< !DOCTYPE
html >
< html
lang = "en" >
< head >
< meta
http - equiv = "content-type"
content = "text/html; charset=utf-8" >
< meta
name = "robots"
content = "NONE,NOARCHIVE" >
< title > OperationalError
at / api / user / add_stu < / title >
< style
type = "text/css" >
html * {padding: 0;
margin: 0;}
body * {padding: 10px 20px;}
body * * {padding: 0;}
body
{font: small sans - serif;}
body > div
{border - bottom: 1px solid  # ddd; }
 h1 {font - weight: normal;}
h2
{margin - bottom: .8em;}
h2
span
{font - size: 80 %;
color:  # 666; font-weight:normal; }
h3
{margin: 1em 0 .5em 0;}
h4
{margin: 0 0 .5em 0;
font - weight: normal;}
code, pre
{font - size: 100 %;
white - space: pre - wrap;}
table
{border: 1px solid  # ccc; border-collapse: collapse; width:100%; background:white; }
 tbody td, tbody th {vertical - align: top;
padding: 2
px
3
px;}
thead
th
{
    padding: 1px 6px 1px 3px;
background:  # fefefe; text-align:left;
font - weight:normal;
font - size: 11
px;
border: 1
px
solid  # ddd;
}
tbody
th
{width: 12em;
text - align: right;
color:  # 666; padding-right:.5em; }
table.vars
{margin: 5px 0 2px 40px;}
table.vars
td, table.req
td
{font - family: monospace;}
table
td.code
{width: 100 %;}
table
td.code
pre
{overflow: hidden;}
table.source
th
{color:  # 666; }
     table.source td {font - family: monospace;
white - space: pre;
border - bottom: 1
px
solid  # eee; }
ul.traceback
{list - style - type: none;
color:  # 222; }
ul.traceback
li.frame
{padding - bottom: 1em;
color:  # 666; }
ul.traceback
li.user
{background - color:  # e0e0e0; color:#000 }
     div.context {padding: 10px 0;
overflow: hidden;}
div.context
ol
{padding - left: 30px;
margin: 0
10
px;
list - style - position: inside;}
div.context
ol
li
{font - family: monospace;
white - space: pre;
color:  # 777; cursor:pointer; padding-left: 2px; }
div.context
ol
li
pre
{display: inline;}
div.context
ol.context - line
li
{color:  # 505050; background-color:#dfdfdf; padding: 3px 2px; }
     div.context ol.context - line li span {position: absolute;
right: 32
px;}
.user
div.context
ol.context - line
li
{background - color:  # bbb; color:#000; }
    .user
div.context
ol
li
{color:  # 666; }
     div.commands {margin - left: 40px;}
div.commands
a
{color:  # 555; text-decoration:none; }
    .user
div.commands
a
{color: black;}
# summary { background: #ffc; }
# summary h2 { font-weight: normal; color: #666; }
# explanation { background:#eee; }
# template, #template-not-exist { background:#f6f6f6; }
# template-not-exist ul { margin: 0 0 10px 20px; }
# template-not-exist .postmortem-section { margin-bottom: 3px; }
# unicode-hint { background:#eee; }
# traceback { background:#eee; }
# requestinfo { background:#f6f6f6; padding-left:120px; }
# summary table { border:none; background:transparent; }
# requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
# requestinfo h3 { margin-bottom:-1em; }
.error
{background:  # ffc; }
    .specific
{color:  # cc3300; font-weight:bold; }
     h2 span.commands {font - size: .7em;}
span.commands
a: link
{color:  # 5E5694;}
     pre.exception_value {font - family: sans - serif;
color:  # 666; font-size: 1.5em; margin: 10px 0 10px 0; }
.append - bottom
{margin - bottom: 10px;}
< / style >

    < script
type = "text/javascript" >
// < !--
function
getElementsByClassName(oElm, strTagName, strClassName)
{
// Written
by
Jonathan
Snook, http: // www.snook.ca / jon;
Add - ons
by
Robert
Nyman, http: // www.robertnyman.com
var
arrElements = (strTagName == "*" & & document.all)? document.all: \
    oElm.getElementsByTagName(strTagName);
var
arrReturnElements = new
Array();
strClassName = strClassName.replace( /\- / g, "\-");
var
oRegExp = new
RegExp("(^|\s)" + strClassName + "(\s|$)");
var
oElement;
for (var i=0; i < arrElements.length; i++)
{
    oElement = arrElements[i];
if (oRegExp.test(oElement.className))
{
    arrReturnElements.push(oElement);
}
}
return (arrReturnElements)
}
function
hideAll(elems)
{
for (var e = 0; e < elems.length; e++) {
    elems[e].style.display = 'none';
}
}
window.onload = function()
{
hideAll(getElementsByClassName(document, 'table', 'vars'));
hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
hideAll(getElementsByClassName(document, 'ol', 'post-context'));
hideAll(getElementsByClassName(document, 'div', 'pastebin'));
}
function
toggle()
{
for (var i = 0; i < arguments.length; i++) {
    var e = document.getElementById(arguments[i]);
if (e) {
e.style.display = e.style.display == 'none' ? 'block': 'none';
}
}
return false;
}
function
varToggle(link, id)
{
toggle('v' + id);
var
s = link.getElementsByTagName('span')[0];
var
uarr = String.fromCharCode(0x25b6);
var
darr = String.fromCharCode(0x25bc);
s.textContent = s.textContent == uarr ? darr: uarr;
return false;
}
function
switchPastebinFriendly(link)
{
s1 = "Switch to copy-and-paste view";
s2 = "Switch back to interactive view";
link.textContent = link.textContent.trim() == s1 ? s2: s1;
toggle('browserTraceback', 'pastebinTraceback');
return false;
}
// -->
< / script >

    < / head >
        < body >
        < div
id = "summary" >
     < h1 > OperationalError
at / api / user / add_stu < / h1 >
                              < pre


class ="exception_value" > (2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre>
< table


class ="meta" >

< tr >
< th > Request
Method: < / th >
< td > POST < / td >
< / tr >
< tr >
< th > Request
URL: < / th >
< td > http: // api.nnzhp.cn: 80 / api / user / add_stu < / td >
< / tr >

< tr >
< th > Django
Version: < / th >
< td > 1.10 < / td >
< / tr >

< tr >
< th > Exception
Type: < / th >
< td > OperationalError < / td >
< / tr >

< tr >
< th > Exception
Value: < / th >
< td > < pre > (2003,
                & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                < / tr >

                < tr >
                < th > Exception Location: < / th >
                < td > / usr / local / anaconda3 / lib / python3.6 / site-packages / pymysql / connections.py in connect, line 630 < / td >
                < / tr >

                < tr >
                < th > Python Executable: < / th >
                < td > / usr / local / anaconda3 / bin / python < / td >
                < / tr >
                < tr >
                < th > Python Version: < / th >
                < td > 3.6.4 < / td >
                < / tr >
                < tr >
                < th > Python Path: < / th >
                < td > < pre >[&  # 39;/usr/local/choujiang&#39;,
                &  # 39;/usr/local/anaconda3/lib/python36.zip&#39;,
                &  # 39;/usr/local/anaconda3/lib/python3.6&#39;,
                &  # 39;/usr/local/anaconda3/lib/python3.6/lib-dynload&#39;,
                &  # 39;/usr/local/anaconda3/lib/python3.6/site-packages&#39;]</pre></td>
                < / tr >
                < tr >
                < th > Server time: < / th >
                < td > ææå­, 11 äºæ 2019 21:41:34 +0800 < / td >
                < / tr >
                < / table >
                < / div >

                < div id="traceback" >
                < h2 > Traceback < span


class ="commands" > < a href="#" onclick="return switchPastebinFriendly(this);" >


Switch
to
copy - and -paste
view < / a > < / span >
< / h2 >

< div
id = "browserTraceback" >
< ul


class ="traceback" >

< li


class ="frame user" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / pymysql / connections.py < / code > in < code > connect < / code >

< div


class ="context" id="c140655233622152" >

< ol
start = "576"


class ="pre-context" id="pre140655233622152" >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre > kwargs = {} < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
if self.bind_address is not None: < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
          kwargs[ &  # 39;source_address&#39;] = (self.bind_address, 0)</pre></li>

          < li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
while True: < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
try: < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre > sock = socket.create_connection( < / pre > < / li >

                                                                                                                         < li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre > (
self.host, self.port), self.connect_timeout, < / pre > < / li >

                                                           < / ol >

                                                               < ol
start = "583"


class ="context-line" >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
** kwargs) < / pre > < span > ... < / span > < / li > < / ol >

                                                          < ol
start = '584'


class ="post-context" id="post140655233622152" >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
break < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >                        except (
OSError, IOError) as e: < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
if e.errno == errno.EINTR: < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
continue < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
raise < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre > self.host_info = & quot;
socket % s: % d & quot; % (self.host, self.port) < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233622152')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233622152" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > exc < / td >
< td


class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
< / tr >

< tr >
< td > kwargs < / td >
< td


class ="code" > < pre > {} < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;pymysql.connections.Connection object at 0x7fecd8586828 & gt; < / pre > < / td >

< / tr >

< tr >
< td > sock < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame user" >

< code > / usr / local / anaconda3 / lib / python3
.6 / socket.py < / code > in < code > create_connection < / code >

< div


class ="context" id="c140655233625992" >

< ol
start = "717"


class ="pre-context" id="pre140655233625992" >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >        except error as _: < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > err = _ < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >
if sock is not None: < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > sock.close() < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >
if err is not None: < / pre > < / li >

< / ol >

< ol
start = "724"


class ="context-line" >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >
raise err < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '725'


class ="post-context" id="post140655233625992" >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > else: < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >
raise error( & quot;
getaddrinfo
returns
an
empty
list & quot;) < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >


def getaddrinfo(host, port, family=0, type=0, proto=0, flags=0): <

    / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > & quot; & quot; & quot;
Resolve
host and port
into
list
of
address
info
entries. < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233625992')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233625992" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > address < / td >
< td


class ="code" > < pre > ( &  # 39;127.0.0.1&#39;, 3306)</pre></td>
< / tr >

< tr >
< td > af < / td >
< td


class ="code" > < pre > & lt;AddressFamily.AF_INET: 2 & gt; <

    / pre > < / td >
< / tr >

< tr >
< td > canonname < / td >
< td


class ="code" > < pre > &  # 39;&#39;</pre></td>

< / tr >

< tr >
< td > err < / td >
< td


class ="code" > < pre > ConnectionRefusedError(111, &  # 39;Connection refused&#39;)</pre></td>
< / tr >

< tr >
< td > host < / td >
< td


class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

< / tr >

< tr >
< td > port < / td >
< td


class ="code" > < pre > 3306 < / pre > < / td >

< / tr >

< tr >
< td > proto < / td >
< td


class ="code" > < pre > 6 < / pre > < / td >

< / tr >

< tr >
< td > res < / td >
< td


class ="code" > < pre > ( & lt;AddressFamily.AF_INET: 2 & gt;,

& lt;
SocketKind.SOCK_STREAM: 1 & gt;,
6,
&  # 39;&#39;,
(&  # 39;127.0.0.1&#39;, 3306))</pre></td>
< / tr >

< tr >
< td > sa < / td >
< td


class ="code" > < pre > ( &  # 39;127.0.0.1&#39;, 3306)</pre></td>
< / tr >

< tr >
< td > sock < / td >
< td


class ="code" > < pre > & lt;socket.socket[closed] fd=-1, family=AddressFamily.AF_INET, type=2049, proto=6 & gt; < / pre > < / td >

< / tr >

< tr >
< td > socktype < / td >
< td


class ="code" > < pre > & lt;SocketKind.SOCK_STREAM: 1 & gt; <

    / pre > < / td >
< / tr >

< tr >
< td > source_address < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > timeout < / td >
< td


class ="code" > < pre > 10 < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame user" >

< code > / usr / local / anaconda3 / lib / python3
.6 / socket.py < / code > in < code > create_connection < / code >

< div


class ="context" id="c140655233623624" >

< ol
start = "706"


class ="pre-context" id="pre140655233623624" >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > sock = None < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >
try: < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > sock = socket(af, socktype,
                                                                                        proto) < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >
if timeout is not _GLOBAL_DEFAULT_TIMEOUT: < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > sock.settimeout(timeout) < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >
if source_address: < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > sock.bind(source_address) < / pre > < / li >

< / ol >

< ol
start = "713"


class ="context-line" >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >
sock.connect(sa) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '714'


class ="post-context" id="post140655233623624" >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >  # Break explicitly a reference cycle</pre></li>

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > err = None < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >
return sock < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >        except error as _: < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > err = _ < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233623624')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233623624" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > address < / td >
< td


class ="code" > < pre > ( &  # 39;127.0.0.1&#39;, 3306)</pre></td>
< / tr >

< tr >
< td > af < / td >
< td


class ="code" > < pre > & lt;AddressFamily.AF_INET: 2 & gt; <

    / pre > < / td >
< / tr >

< tr >
< td > canonname < / td >
< td


class ="code" > < pre > &  # 39;&#39;</pre></td>

< / tr >

< tr >
< td > err < / td >
< td


class ="code" > < pre > ConnectionRefusedError(111, &  # 39;Connection refused&#39;)</pre></td>
< / tr >

< tr >
< td > host < / td >
< td


class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

< / tr >

< tr >
< td > port < / td >
< td


class ="code" > < pre > 3306 < / pre > < / td >

< / tr >

< tr >
< td > proto < / td >
< td


class ="code" > < pre > 6 < / pre > < / td >

< / tr >

< tr >
< td > res < / td >
< td


class ="code" > < pre > ( & lt;AddressFamily.AF_INET: 2 & gt;,

& lt;
SocketKind.SOCK_STREAM: 1 & gt;,
6,
&  # 39;&#39;,
(&  # 39;127.0.0.1&#39;, 3306))</pre></td>
< / tr >

< tr >
< td > sa < / td >
< td


class ="code" > < pre > ( &  # 39;127.0.0.1&#39;, 3306)</pre></td>
< / tr >

< tr >
< td > sock < / td >
< td


class ="code" > < pre > & lt;socket.socket[closed] fd=-1, family=AddressFamily.AF_INET, type=2049, proto=6 & gt; < / pre > < / td >

< / tr >

< tr >
< td > socktype < / td >
< td


class ="code" > < pre > & lt;SocketKind.SOCK_STREAM: 1 & gt; <

    / pre > < / td >
< / tr >

< tr >
< td > source_address < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > timeout < / td >
< td


class ="code" > < pre > 10 < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li > < h3 >

During
handling
of
the
above
exception([Errno 111]
Connection
refused), another
exception
occurred:

< / h3 > < / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / base / base.py < / code > in < code > ensure_connection < / code >

< div


class ="context" id="c140655233626056" >

< ol
start = "192"


class ="pre-context" id="pre140655233626056" >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >


def ensure_connection(self): <

    / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > Guarantees
that
a
connection
to
the
database is established. < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
if self.connection is None: < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
with self.wrap_database_errors: < / pre > < / li >

< / ol >

< ol
start = "199"


class ="context-line" >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
self.connect() < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '200'


class ="post-context" id="post140655233626056" >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >  # ##### Backend-specific wrappers for PEP-249 connection methods #####</pre></li>

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >


def _cursor(self): <

    / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > self.ensure_connection() < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
with self.wrap_database_errors: < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233626056')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233626056" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / base / base.py < / code > in < code > connect < / code >

< div


class ="context" id="c140655233624904" >

< ol
start = "164"


class ="pre-context" id="pre140655233624904" >

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >  # Reset parameters defining when to close the connection</pre></li>

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > max_age =
self.settings_dict[ &  # 39;CONN_MAX_AGE&#39;]</pre></li>

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.close_at = None if max_age is None else time.time() + max_age < / pre > < / li >

                                                                                                                                                           < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.closed_in_transaction = False < / pre > < / li >

                                                                                                                           < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.errors_occurred = False < / pre > < / li >

                                                                                                                     < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >  # Establish the connection</pre></li>

          < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > conn_params = self.get_connection_params() < / pre > < / li >

                                                                                                                                   < / ol >

                                                                                                                                       < ol
start = "171"


class ="context-line" >

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >
self.connection = self.get_new_connection(conn_params) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '172'


class ="post-context" id="post140655233624904" >

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.set_autocommit(
    self.settings_dict[ &  # 39;AUTOCOMMIT&#39;])</pre></li>

    < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.init_connection_state() < / pre > < / li >

                                                                                                                     < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > connection_created.send(sender=self.__class__,
                                                                                                  connection=self) < / pre > < / li >

                                                                                                                                 < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > < / pre > < / li >

                                                                                        < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.run_on_commit = [] < / pre > < / li >

                                                                                                                < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > < / pre > < / li >

                                                                                        < / ol >

                                                                                            < / div >

                                                                                                < div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233624904')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233624904" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > conn_params < / td >
< td


class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
&  # 39;client_flag&#39;: 2,
&  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
1: &


    lt;


class &  # 39;int&#39;&gt;,
    2: & lt;

    class &  # 39;int&#39;&gt;,
        3: & lt;

        class &  # 39;int&#39;&gt;,

            4: & lt;

        class &  # 39;float&#39;&gt;,

            5: & lt;

        class &  # 39;float&#39;&gt;,

            7: & lt;
        function
        convert_mysql_timestamp
        at
        0x7fecdb3d7bf8 & gt;,
        8: & lt;

        class &  # 39;int&#39;&gt;,
            9: & lt;

            class &  # 39;int&#39;&gt;,

                10: & lt;
            function
            convert_date
            at
            0x7fecdb3d7b70 & gt;,
            11: & lt;
            function
            typecast_time
            at
            0x7fecdd779bf8 & gt;,
            12: & lt;
            function
            convert_datetime
            at
            0x7fecdb3d79d8 & gt;,
            13: & lt;

            class &  # 39;int&#39;&gt;,
                15: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                16: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                246: & lt;
                function
                typecast_decimal
                at
                0x7fecdd779d08 & gt;,
                248: & lt;
                function
                convert_set
                at
                0x7fecdb3d7c80 & gt;,
                249: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                250: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                251: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                252: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                253: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                254: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                & lt;

                class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                    & lt;

                    class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                        & lt;

                    class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                        & lt;

                    class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                        & lt;

                    class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                        & lt;

                    class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                        & lt;

                    class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                        & lt;

                    class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                        & lt;

                    class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                        & lt;

                    class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                        & lt;

                    class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                        & lt;

                    class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                        & lt;

                    class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

            &  # 39;db&#39;: &#39;main&#39;,
            &  # 39;host&#39;: &#39;127.0.0.1&#39;,
            &  # 39;passwd&#39;: &#39;123456&#39;,
            &  # 39;port&#39;: 3306,
            &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
            < / tr >

            < tr >
            < td > max_age < / td >
            < td

            class ="code" > < pre > 0 < / pre > < / td >

            < / tr >

            < tr >
            < td > self < / td >
            < td

            class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

            < / tr >

            < / tbody >
            < / table >

            < / li >

            < li

            class ="frame django" >

            < code > / usr / local / anaconda3 / lib / python3
            .6 / site - packages / django / db / backends / mysql / base.py < / code > in < code > get_new_connection < / code >

            < div

            class ="context" id="c140655233624776" >

            < ol
            start = "258"

            class ="pre-context" id="pre140655233624776" >

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >  # We need the number of potentially affected rows after an</pre></li>

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >  # &quot;UPDATE&quot;, not the number of changed rows.</pre></li>

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
                      kwargs[ &  # 39;client_flag&#39;] = CLIENT.FOUND_ROWS</pre></li>

                      < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > kwargs.update(
                settings_dict[ &  # 39;OPTIONS&#39;])</pre></li>

                < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
            return kwargs < / pre > < / li >

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > < / pre > < / li >

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >

            def get_new_connection(self, conn_params):
                <

                / pre > < / li >

            < / ol >

            < ol
            start = "265"

            class ="context-line" >

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
            conn = Database.connect(**conn_params) < / pre > < span > ... < / span > < / li > < / ol >

            < ol
            start = '266'

            class ="post-context" id="post140655233624776" >

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > conn.encoders[SafeText] =
            conn.encoders[six.text_type] < / pre > < / li >

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > conn.encoders[SafeBytes] =
            conn.encoders[bytes] < / pre > < / li >

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
            return conn < / pre > < / li >

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > < / pre > < / li >

            < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >

            def init_connection_state(self):
                <

                / pre > < / li >

            < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
        if self.features.is_sql_auto_is_null_enabled: < / pre > < / li >

        < / ol >

        < / div >

        < div

        class ="commands" >

            < a
        href = "#"
            onclick = "return varToggle(this, '140655233624776')" > < span > &  # x25b6;</span> Local vars</a>

            < / div >
        < table

            class ="vars" id="v140655233624776" >

            < thead >
            < tr >
            < th > Variable < / th >
            < th > Value < / th >
            < / tr >
            < / thead >
            < tbody >

        < tr >
        < td > conn_params < / td >
            < td

            class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
            &  # 39;client_flag&#39;: 2,
            &  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
            1: &

                lt;

            class &  # 39;int&#39;&gt;,
                2: & lt;

                class &  # 39;int&#39;&gt;,
                    3: & lt;

                    class &  # 39;int&#39;&gt;,

                        4: & lt;

                    class &  # 39;float&#39;&gt;,

                        5: & lt;

                    class &  # 39;float&#39;&gt;,

                        7: & lt;

                    function
                    convert_mysql_timestamp
                    at
                    0x7fecdb3d7bf8 & gt;,
                    8: & lt;

                    class &  # 39;int&#39;&gt;,
                        9: & lt;

                        class &  # 39;int&#39;&gt;,

                            10: & lt;

                        function
                        convert_date
                        at
                        0x7fecdb3d7b70 & gt;,
                        11: & lt;
                        function
                        typecast_time
                        at
                        0x7fecdd779bf8 & gt;,
                        12: & lt;
                        function
                        convert_datetime
                        at
                        0x7fecdb3d79d8 & gt;,
                        13: & lt;

                        class &  # 39;int&#39;&gt;,
                            15: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            16: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            246: & lt;
                            function
                            typecast_decimal
                            at
                            0x7fecdd779d08 & gt;,
                            248: & lt;
                            function
                            convert_set
                            at
                            0x7fecdb3d7c80 & gt;,
                            249: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            250: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            251: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            252: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            253: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            254: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            & lt;

                            class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                                & lt;

                                class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                                    & lt;

                                class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                                    & lt;

                                class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                                    & lt;

                                class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                                    & lt;

                                class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                                    & lt;

                                class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                                    & lt;

                                class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                                    & lt;

                                class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                                    & lt;

                                class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                                    & lt;

                                class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                                    & lt;

                                class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                                    & lt;

                                class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

                        &  # 39;db&#39;: &#39;main&#39;,
                        &  # 39;host&#39;: &#39;127.0.0.1&#39;,
                        &  # 39;passwd&#39;: &#39;123456&#39;,
                        &  # 39;port&#39;: 3306,
                        &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
                        < / tr >

                        < tr >
                        < td > self < / td >
                        < td

                        class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                        < / tr >

                        < / tbody >
                        < / table >

                        < / li >

                        < li

                        class ="frame user" >

                        < code > / usr / local / anaconda3 / lib / python3
                        .6 / site - packages / pymysql / __init__.py < / code > in < code > Connect < / code >

                        < div

                        class ="context" id="c140655233622600" >

                        < ol
                        start = "87"

                        class ="pre-context" id="pre140655233622600" >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >

                        def Connect(*args, **kwargs):
                            <

                            / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > Connect
                        to
                        the
                        database;
                        see
                        connections.Connection.__init__()
                        for < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > more
                        information. < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
                        from .connections import Connection < / pre > < / li >

                        < / ol >

                        < ol
                        start = "94"

                        class ="context-line" >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
                        return Connection(*args, **kwargs) < / pre > < span > ... < / span > < / li > < / ol >

                        < ol
                        start = '95'

                        class ="post-context" id="post140655233622600" >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
                        from . import connections as _orig_conn < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
                        if _orig_conn.Connection.__init__.__doc__ is not None: < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > Connect.__doc__ = _orig_conn.Connection.__init__.__doc__ < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
                        del _orig_conn < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

                        < / ol >

                        < / div >

                        < div

                        class ="commands" >

                        < a
                        href = "#"
                        onclick = "return varToggle(this, '140655233622600')" > < span > &  # x25b6;</span> Local vars</a>

                        < / div >
                        < table

                        class ="vars" id="v140655233622600" >

                        < thead >
                        < tr >
                        < th > Variable < / th >
                        < th > Value < / th >
                        < / tr >
                        < / thead >
                        < tbody >

                        < tr >
                        < td > Connection < / td >
                        < td

                        class ="code" > < pre > & lt; class &  # 39;pymysql.connections.Connection&#39;&gt;</pre></td>

                        < / tr >

                        < tr >
                        < td > args < / td >
                        < td

                        class ="code" > < pre > () < / pre > < / td >

                        < / tr >

                        < tr >
                        < td > kwargs < / td >
                        < td

                        class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
                        &  # 39;client_flag&#39;: 2,
                        &  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
                        1: &

                            lt;

                        class &  # 39;int&#39;&gt;,
                            2: & lt;

                            class &  # 39;int&#39;&gt;,
                                3: & lt;

                                class &  # 39;int&#39;&gt;,

                                    4: & lt;

                                class &  # 39;float&#39;&gt;,

                                    5: & lt;

                                class &  # 39;float&#39;&gt;,

                                    7: & lt;

                                function
                                convert_mysql_timestamp
                                at
                                0x7fecdb3d7bf8 & gt;,
                                8: & lt;

                                class &  # 39;int&#39;&gt;,
                                    9: & lt;

                                    class &  # 39;int&#39;&gt;,

                                        10: & lt;

                                    function
                                    convert_date
                                    at
                                    0x7fecdb3d7b70 & gt;,
                                    11: & lt;
                                    function
                                    typecast_time
                                    at
                                    0x7fecdd779bf8 & gt;,
                                    12: & lt;
                                    function
                                    convert_datetime
                                    at
                                    0x7fecdb3d79d8 & gt;,
                                    13: & lt;

                                    class &  # 39;int&#39;&gt;,
                                        15: & lt;
                                        function
                                        through
                                        at
                                        0x7fecdb3d7d08 & gt;,
                                        16: & lt;
                                        function
                                        through
                                        at
                                        0x7fecdb3d7d08 & gt;,
                                        246: & lt;
                                        function
                                        typecast_decimal
                                        at
                                        0x7fecdd779d08 & gt;,
                                        248: & lt;
                                        function
                                        convert_set
                                        at
                                        0x7fecdb3d7c80 & gt;,
                                        249: & lt;
                                        function
                                        through
                                        at
                                        0x7fecdb3d7d08 & gt;,
                                        250: & lt;
                                        function
                                        through
                                        at
                                        0x7fecdb3d7d08 & gt;,
                                        251: & lt;
                                        function
                                        through
                                        at
                                        0x7fecdb3d7d08 & gt;,
                                        252: & lt;
                                        function
                                        through
                                        at
                                        0x7fecdb3d7d08 & gt;,
                                        253: & lt;
                                        function
                                        through
                                        at
                                        0x7fecdb3d7d08 & gt;,
                                        254: & lt;
                                        function
                                        through
                                        at
                                        0x7fecdb3d7d08 & gt;,
                                        & lt;

                                        class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                                            & lt;

                                            class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                                                & lt;

                                            class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                                                & lt;

                                            class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                                                & lt;

                                            class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                                                & lt;

                                            class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                                                & lt;

                                            class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                & lt;

                                            class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                & lt;

                                            class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                & lt;

                                            class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                                                & lt;

                                            class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                                                & lt;

                                            class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                                                & lt;

                                            class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                & lt;

                                            class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                                                & lt;

                                            class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                                                & lt;

                                            class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                                                & lt;

                                            class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

                                    &  # 39;db&#39;: &#39;main&#39;,
                                    &  # 39;host&#39;: &#39;127.0.0.1&#39;,
                                    &  # 39;passwd&#39;: &#39;123456&#39;,
                                    &  # 39;port&#39;: 3306,
                                    &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame user" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / pymysql / connections.py < / code > in < code > __init__ < / code >

                                    < div

                                    class ="context" id="c140655233624456" >

                                    < ol
                                    start = "318"

                                    class ="pre-context" id="pre140655233624456" >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                    if program_name: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                              self._connect_attrs[ & quot;
                                    program_name & quot;] = program_name < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                    if defer_connect: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > self._sock = None < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > else: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "325"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                    self.connect() < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '326'

                                    class ="post-context" id="post140655233624456" >

                                < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                                    < li
                                onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >

                                def _create_ssl_ctx(self, sslp):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                if isinstance(sslp, ssl.SSLContext): < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                    return sslp < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > ca = sslp.get( &  # 39;ca&#39;)</pre></li>

                                                                                                                   < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > capath = sslp.get( &  # 39;capath&#39;)</pre></li>

                                                                                                                       < / ol >

                                                                                                                           < / div >

                                                                                                                               < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655233624456')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                class ="vars" id="v140655233624456" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                < tr >
                                < td > auth_plugin_map < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > autocommit < / td >
                                    < td

                                    class ="code" > < pre > False < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > binary_prefix < / td >
                                    < td

                                    class ="code" > < pre > False < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > bind_address < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > charset < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;utf8&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > client_flag < / td >
                                    < td

                                    class ="code" > < pre > 3842575 < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > compress < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > connect_timeout < / td >
                                    < td

                                    class ="code" > < pre > 10 < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > conv < / td >
                                    < td

                                    class ="code" > < pre > {0: &

                                        lt;
                                    function
                                typecast_decimal
                                    at
                                    0x7fecdd779d08 & gt;,
                                    1: & lt;

                                    class &  # 39;int&#39;&gt;,
                                        2: & lt;

                                        class &  # 39;int&#39;&gt;,

                                    3: & lt;

                                    class &  # 39;int&#39;&gt;,

                                        4: & lt;

                                class &  # 39;float&#39;&gt;,

                                    5: & lt;

                                class &  # 39;float&#39;&gt;,

                                        7: & lt;
                                    function
                                    convert_mysql_timestamp
                                    at
                                    0x7fecdb3d7bf8 & gt;,
                                    8: & lt;

                                    class &  # 39;int&#39;&gt;,

                                        9: & lt;

                                    class &  # 39;int&#39;&gt;,

                                        10: & lt;
                                    function
                                    convert_date
                                    at
                                    0x7fecdb3d7b70 & gt;,
                                    11: & lt;
                                    function
                                    typecast_time
                                    at
                                    0x7fecdd779bf8 & gt;,
                                    12: & lt;
                                    function
                                    convert_datetime
                                    at
                                    0x7fecdb3d79d8 & gt;,
                                    13: & lt;

                                    class &  # 39;int&#39;&gt;,

                                        15: & lt;
                                    function
                                    through
                                    at
                                    0x7fecdb3d7d08 & gt;,
                                    16: & lt;
                                    function
                                    through
                                    at
                                    0x7fecdb3d7d08 & gt;,
                                    246: & lt;
                                    function
                                    typecast_decimal
                                    at
                                    0x7fecdd779d08 & gt;,
                                    248: & lt;
                                    function
                                    convert_set
                                    at
                                    0x7fecdb3d7c80 & gt;,
                                    249: & lt;
                                    function
                                    through
                                    at
                                    0x7fecdb3d7d08 & gt;,
                                    250: & lt;
                                    function
                                    through
                                    at
                                    0x7fecdb3d7d08 & gt;,
                                    251: & lt;
                                function
                                through
                                    at
                                    0x7fecdb3d7d08 & gt;,
                                    252: & lt;
                                    function
                                    through
                                    at
                                    0x7fecdb3d7d08 & gt;,
                                    253: & lt;
                                    function
                                through
                                at
                                    0x7fecdb3d7d08 & gt;,
                                254: & lt;
                                function
                                    through
                                    at
                                    0x7fecdb3d7d08 & gt;,
                                    & lt;

                                    class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,

                                        & lt;

                                    class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                                        & lt;

                                    class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                                        & lt;

                                    class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                                        & lt;

                                    class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                                        & lt;

                                    class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                                        & lt;

                                    class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                        & lt;

                                    class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                        & lt;

                                    class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                        & lt;

                                    class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                                        & lt;

                                    class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                                        & lt;

                                    class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                                        & lt;

                                    class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                        & lt;

                                    class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                                        & lt;

                                    class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                                        & lt;

                                    class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                                        & lt;

                                    class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;}</pre></td>

                                        < / tr >

                                < tr >
                                < td > cursorclass < / td >
                                < td

                                class ="code" > < pre > & lt; class &  # 39;pymysql.cursors.Cursor&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > database < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;main&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > db < / td >
                                    < td

                                class ="code" > < pre > &  # 39;main&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > defer_connect < / td >
                                    < td

                                    class ="code" > < pre > False < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > host < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > init_command < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > local_infile < / td >
                                    < td

                                    class ="code" > < pre > False < / pre > < / td >

                                    < / tr >

                                < tr >
                                < td > max_allowed_packet < / td >
                                < td

                                    class ="code" > < pre > 16777216 < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > named_pipe < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > passwd < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;123456&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > password < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;123456&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > port < / td >
                                < td

                                class ="code" > < pre > 3306 < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > program_name < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > read_default_file < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > read_default_group < / td >
                                    < td

                                class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > read_timeout < / td >
                                    < td

                                class ="code" > < pre > None < / pre > < / td >

                                < / tr >

                                < tr >
                                < td > self < / td >
                                < td

                                    class ="code" > < pre > & lt;pymysql.connections.Connection object at 0x7fecd8586828 & gt; < / pre > < / td >

                                < / tr >

                                < tr >
                                < td > server_public_key < / td >
                                < td

                                class ="code" > < pre > None < / pre > < / td >

                                < / tr >

                                < tr >
                                < td > sql_mode < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > ssl < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > unix_socket < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > use_unicode < / td >
                                    < td

                                    class ="code" > < pre > True < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > user < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;besttest&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > write_timeout < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame user" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / pymysql / connections.py < / code > in < code > connect < / code >

                                < div

                                class ="context" id="c140655233623432" >

                                    < ol
                                    start = "623"

                                    class ="pre-context" id="pre140655233623432" >

                                < li
                                onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > 2003, < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > & quot;
                                    Can &  # 39;t connect to MySQL server on %r (%s)&quot; % (</pre></li>

                                    < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > self.host, e)) < / pre > < / li >

                                                                                                                                           < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # Keep original exception and traceback to investigate error.</pre></li>

                                              < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > exc.original_exception = e < / pre > < / li >

                                                                                                                                                       < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > exc.traceback = traceback.format_exc() < / pre > < / li >

                                                                                                                                                                   < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
                                    if DEBUG: print(exc.traceback) < / pre > < / li >

                                                                                 < / ol >

                                                                                     < ol
                                    start = "630"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
                                    raise exc < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '631'

                                class ="post-context" id="post140655233623432" >

                                < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # If e is neither DatabaseError or IOError, It&#39;s a bug.</pre></li>

                                    < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # But raising AssertionError hides original error.</pre></li>

                                    < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # So just reraise it.</pre></li>

                                    < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
                                    raise < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655233623432')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655233623432" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                < / thead >
                                    < tbody >

                                    < tr >
                                    < td > exc < / td >
                                    < td

                                class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                    < / tr >

                                    < tr >
                                    < td > kwargs < / td >
                                    < td

                                    class ="code" > < pre > {} < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;pymysql.connections.Connection object at 0x7fecd8586828 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > sock < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                < / table >

                                < / li >

                                < li > < h3 >

                                    The
                                    above
                                    exception((2003,
                                               "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)"))
                                    was
                                    the
                                    direct
                                    cause
                                    of
                                the
                                following
                                exception:

                                    < / h3 > < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / core / handlers / exception.py < / code > in < code > inner < / code >

                                    < div

                                    class ="context" id="c140655221039496" >

                                    < ol
                                    start = "32"

                                    class ="pre-context" id="pre140655221039496" >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > This
                                    decorator is automatically
                                    applied
                                    to
                                    all
                                    middleware
                                    to
                                    ensure
                                    that < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > no
                                    middleware
                                    leaks
                                    an
                                    exception and that
                                    the
                                    next
                                    middleware in the
                                    stack < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > can
                                    rely
                                    on
                                    getting
                                    a
                                    response
                                    instead
                                    of
                                    an
                                    exception. < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >

                                    @wraps(get_response, assigned=available_attrs(get_response))

                                    < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >

                                    def inner(request):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >
                                    try: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "39"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >
                                    response = get_response(request) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '40'

                                    class ="post-context" id="post140655221039496" >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >        except Exception as exc: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > response = response_for_exception(
                                        request, exc) < / pre > < / li >

                                < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >
                                return response < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >
                                    return inner < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221039496')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221039496" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > exc < / td >
                                    < td

                                    class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                    < / tr >

                                    < tr >
                                    < td > get_response < / td >
                                    < td

                                class ="code" > < pre > & lt;bound method BaseHandler._legacy_get_response of & lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fecdb570f98 & gt; & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > request < / td >
                                    < td

                                    class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / core / handlers / base.py < / code > in < code > _legacy_get_response < / code >

                                    < div

                                    class ="context" id="c140655221039944" >

                                    < ol
                                    start = "242"

                                    class ="pre-context" id="pre140655221039944" >

                                    < li
                                    onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >  # Apply request middleware</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
                                    for middleware_method in self._request_middleware: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre > response = middleware_method(
                                        request) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
                                    if response: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
                                    break < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
                                if response is None: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "249"

                                class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
                                    response = self._get_response(
                                        request) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '250'

                                    class ="post-context" id="post140655221039944" >

                                    < li
                                    onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
                                    return response < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                onclick = "return varToggle(this, '140655221039944')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221039944" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > middleware_method < / td >
                                    < td

                                    class ="code" > < pre > & lt;bound method MessageMiddleware.process_request of & lt;django.contrib.messages.middleware.MessageMiddleware object at 0x7fecd972bdd8 & gt; & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > request < / td >
                                    < td

                                    class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > response < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fecdb570f98 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / core / handlers / base.py < / code > in < code > _get_response < / code >

                                    < div

                                    class ="context" id="c140655221039304" >

                                    < ol
                                    start = "180"

                                    class ="pre-context" id="pre140655221039304" >

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
                                    break < / pre > < / li >

                                < li
                                onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
                                    if response is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > wrapped_callback = self.make_view_atomic(
                                        callback) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
                                    try: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > response = wrapped_callback(
                                        request, *callback_args, **callback_kwargs) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >            except Exception as e: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "187"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
                                    response = self.process_exception_by_middleware(e,
                                                                                    request) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '188'

                                    class ="post-context" id="post140655221039304" >

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >  # Complain if the view returned None (a common error).</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
                                    if response is None: < / pre > < / li >

                                < li
                                onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
                                    if isinstance(callback, types.FunctionType):  # FBV</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > view_name = callback.__name__ < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > else:  # CBV</pre></li>

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221039304')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221039304" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > callback < / td >
                                    < td

                                class ="code" > < pre > & lt;function method_check.& lt;locals & gt;.decorator.& lt;locals & gt;.war at 0x7fecd9819268 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > callback_args < / td >
                                    < td

                                    class ="code" > < pre > () < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > callback_kwargs < / td >
                                    < td

                                    class ="code" > < pre > {} < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > request < / td >
                                    < td

                                    class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > resolver < / td >
                                    < td

                                    class ="code" > < pre > & lt;RegexURLResolver &  # 39;choujiang.urls&#39; (None:None) ^/&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > resolver_match < / td >
                                    < td

                                    class ="code" > < pre > ResolverMatch(func=app.tools.war, args=(), kwargs={}, url_name=None, app_names=[], namespaces=[]) < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > response < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fecdb570f98 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > wrapped_callback < / td >
                                    < td

                                    class ="code" > < pre > & lt;function method_check.& lt;locals & gt;.decorator.& lt;locals & gt;.war at 0x7fecd9819268 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / core / handlers / base.py < / code > in < code > _get_response < / code >

                                    < div

                                    class ="context" id="c140655221039368" >

                                    < ol
                                    start = "178"

                                    class ="pre-context" id="pre140655221039368" >

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre > response = middleware_method(
                                        request, callback, callback_args, callback_kwargs) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
                                    if response: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
                                    break < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
                                    if response is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre > wrapped_callback = self.make_view_atomic(
                                        callback) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
                                    try: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "185"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
                                    response = wrapped_callback(request, *callback_args,
                                                                **callback_kwargs) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '186'

                                    class ="post-context" id="post140655221039368" >

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >            except Exception as e: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre > response = self.process_exception_by_middleware(
                                        e, request) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >  # Complain if the view returned None (a common error).</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
                                    if response is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
                                    if isinstance(callback, types.FunctionType):  # FBV</pre></li>

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221039368')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221039368" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > callback < / td >
                                    < td

                                    class ="code" > < pre > & lt;function method_check.& lt;locals & gt;.decorator.& lt;locals & gt;.war at 0x7fecd9819268 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > callback_args < / td >
                                    < td

                                    class ="code" > < pre > () < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > callback_kwargs < / td >
                                    < td

                                    class ="code" > < pre > {} < / pre > < / td >

                                    < / tr >

                                < tr >
                                < td > request < / td >
                                    < td

                                    class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

                                < / tr >

                                    < tr >
                                    < td > resolver < / td >
                                    < td

                                    class ="code" > < pre > & lt;RegexURLResolver &  # 39;choujiang.urls&#39; (None:None) ^/&gt;</pre></td>

                                < / tr >

                                < tr >
                                    < td > resolver_match < / td >
                                < td

                                class ="code" > < pre > ResolverMatch(func=app.tools.war, args=(), kwargs={}, url_name=None, app_names=[], namespaces=[]) < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > response < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fecdb570f98 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > wrapped_callback < / td >
                                    < td

                                    class ="code" > < pre > & lt;function method_check.& lt;locals & gt;.decorator.& lt;locals & gt;.war at 0x7fecd9819268 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame user" >

                                    < code > / usr / local / choujiang / app / tools.py < / code > in < code > war < / code >

                                    < div

                                    class ="context" id="c140655221040200" >

                                    < ol
                                    start = "40"

                                    class ="pre-context" id="pre140655221040200" >

                                    < li
                                    onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >

                                    def method_check(method):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >

                                    def decorator(func):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >

                                def war(*args, **kwargs):
                                    <

                                    / pre > < / li >

                                < li
                                onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre > req =
                                args[0] < / pre > < / li >

                                < li
                                onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >
                                if req.method == method: < / pre > < / li >

                                < / ol >

                                < ol
                                start = "47"

                                class ="context-line" >

                                < li
                                onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >
                                return func(*args, **kwargs) < / pre > < span > ... < / span > < / li > < / ol >

                                < ol
                                start = '48'

                                class ="post-context" id="post140655221040200" >

                                < li
                                onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre > else: < / pre > < / li >

                                < li
                                onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >
                                return my_res(msg.METHOD_ERR) < / pre > < / li >

                                < li
                                onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >
                                    return war < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >
                                    return decorator < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre > < / pre > < / li >

                                    < li
                                onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >

                                    def replace_img_url(host, img_list):
                                        <

                                        / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221040200')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221040200" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > args < / td >
                                    < td

                                    class ="code" > < pre > ( & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;,)</pre></td>
                                                                                <

                                    / tr >

                                      < tr >
                                      < td > func < / td >
                                                      < td

                                    class ="code" > < pre > & lt;function add_stu at 0x7fecd98191e0 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > kwargs < / td >
                                    < td

                                    class ="code" > < pre > {} < / pre > < / td >

                                < / tr >

                                    < tr >
                                    < td > method < / td >
                                    < td

                                class ="code" > < pre > &  # 39;POST&#39;</pre></td>

                                < / tr >

                                    < tr >
                                    < td > req < / td >
                                    < td

                                    class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame user" >

                                    < code > / usr / local / choujiang / app / views.py < / code > in < code > add_stu < / code >

                                    < div

                                class ="context" id="c140655221042632" >

                                    < ol
                                start = "141"

                                class ="pre-context" id="pre140655221042632" >

                                    < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > age = str(
                                        body.get( &  # 39;age&#39;,18)).strip()</pre></li>

                                        < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > addr = body.get( &  # 39;addr&#39;,&#39;&#39;).strip()</pre></li>

                                                                                                                     < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre >
                                    if name and grade and phone: < / pre > < / li >

                                                                               < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre >
                                    if len(phone) != 11: < / pre > < / li >

                                                                       < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > res = { &  # 39;error_code&#39;:5,&#39;msg&#39;:&quot;ææºå·é¿åº¦ä¸æ­£ç¡®&quot;}</pre></li>

                                                                                                                    < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre >
                                    return my_res(res) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > obj = models.Student.objects.filter(
                                        phone=phone) < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "148"

                                    class ="context-line" >

                                < li
                                onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre >
                                if obj: < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '149'

                                    class ="post-context" id="post140655221042632" >

                                    < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > res = { &  # 39;error_code&#39;: 5, &#39;msg&#39;: &quot;ææºå·å·²ç»å­å¨&quot;}</pre></li>

                                                                                                                    < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre >
                                    return my_res(res) < / pre > < / li >

                                < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > models.Student.objects.create(
                                        **body) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > res = msg.SUCCESS < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > else: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > res = msg.NOT_NULL < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221042632')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221042632" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > addr < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > age < / td >
                                    < td

                                class ="code" > < pre > &  # 39;18&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > body < / td >
                                < td

                                class ="code" > < pre > {&  # 39;grade&#39;: &#39;äºç­&#39;, &#39;name&#39;: &#39;æå&#39;, &#39;phone&#39;: &#39;13516659123&#39;}</pre></td>
                                    < / tr >

                                    < tr >
                                    < td > grade < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;äºç­&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > name < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;æå&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > obj < / td >
                                < td

                                    class ="code" > < pre > Error in formatting: OperationalError: (2003,
                                                                                                    & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                                                                                    < / tr >

                                                                                                    < tr >
                                                                                                    < td > phone < / td >
                                                                                                    < td

                                    class ="code" > < pre > &  # 39;13516659123&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > req < / td >
                                    < td

                                    class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > sex < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;&#39;</pre></td>

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / models / query.py < / code > in < code > __bool__ < / code >

                                    < div

                                    class ="context" id="c140655221040840" >

                                    < ol
                                    start = "253"

                                    class ="pre-context" id="pre140655221040840" >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > 3.
                                    self.iterator() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > - Responsible
                                    for turning the rows into model objects.< / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > self._fetch_all() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >
                                    return iter(self._result_cache) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >

                                    def __bool__(self):
                                        <

                                        / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "260"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >
                                    self._fetch_all() < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '261'

                                    class ="post-context" id="post140655221040840" >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >
                                    return bool(self._result_cache) < / pre > < / li >

                                < li
                                onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > < / pre > < / li >

                                    < li
                                onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >

                                    def __nonzero__(self):  # Python 2 compatibility</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >
                                    return type(self).__bool__(self) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >

                                    def __getitem__(self, k):
                                        <

                                        / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221040840')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221040840" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                < / tr >
                                < / thead >
                                    < tbody >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > Error in formatting: OperationalError: (2003,
                                                                                                    & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                                                                                    < / tr >

                                                                                                    < / tbody >
                                                                                                    < / table >

                                                                                                    < / li >

                                                                                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                .6 / site - packages / django / db / models / query.py < / code > in < code > _fetch_all < / code >

                                    < div

                                    class ="context" id="c140655286580232" >

                                    < ol
                                    start = "1078"

                                    class ="pre-context" id="pre140655286580232" >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > clone._fields = self._fields < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > < / pre > < / li >

                                < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > clone.__dict__.update(
                                        kwargs) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >
                                    return clone < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >

                                    def _fetch_all(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >
                                    if self._result_cache is None: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "1085"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >
                                    self._result_cache = list(
                                        self.iterator()) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '1086'

                                    class ="post-context" id="post140655286580232" >

                                < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >
                                    if self._prefetch_related_lookups and not self._prefetch_done: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > self._prefetch_related_objects() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >

                                    def _next_is_sticky(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > Indicates
                                    that
                                    the
                                    next
                                    filter
                                    call and the
                                    one
                                    following
                                    that
                                    should < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655286580232')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655286580232" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > Error in formatting: OperationalError: (2003,
                                                                                                    & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                                                                                    < / tr >

                                                                                                    < / tbody >
                                                                                                    < / table >

                                                                                                    < / li >

                                                                                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / models / query.py < / code > in < code > __iter__ < / code >

                                    < div

                                    class ="context" id="c140655221127816" >

                                    < ol
                                    start = "47"

                                    class ="pre-context" id="pre140655221127816" >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >

                                    def __iter__(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > queryset = self.queryset < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > db = queryset.db < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > compiler = queryset.query.get_compiler(
                                        using=db) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >  # Execute the query. This will also fill compiler.select, klass_info,</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >  # and annotations.</pre></li>

                                < / ol >

                                < ol
                                    start = "54"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >
                                    results = compiler.execute_sql() < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '55'

                                    class ="post-context" id="post140655221127816" >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > select, klass_info, annotation_col_map = (
                                                                                                                                                       compiler.select,
                                                                                                                                                       compiler.klass_info,
                                                                                                                                                       < / pre > < / li >

                                                                                                                                                       < li onclick="toggle('pre140655221127816', 'post140655221127816')" > < pre > compiler.annotation_col_map) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >
                                    if klass_info is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >
                                    return < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > model_cls =
                                    klass_info[ &  # 39;model&#39;]</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > select_fields =
                                    klass_info[ &  # 39;select_fields&#39;]</pre></li>

                                    < / ol >

                                        < / div >

                                            < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221127816')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221127816" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > compiler < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > db < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;default&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > queryset < / td >
                                    < td

                                    class ="code" > < pre > Error in formatting: OperationalError: (2003,
                                                                                                    & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                                                                                    < / tr >

                                                                                                    < tr >
                                                                                                    < td > self < / td >
                                                                                                    < td

                                    class ="code" > < pre > & lt;django.db.models.query.ModelIterable object at 0x7fecd8586518 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                .6 / site - packages / django / db / models / sql / compiler.py < / code > in < code > execute_sql < / code >

                                    < div

                                    class ="context" id="c140655221127432" >

                                    < ol
                                    start = "817"

                                    class ="pre-context" id="pre140655221127432" >

                                    < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > subclasses
                                    such as InsertQuery).It &  # 39;s possible, however, that no query</pre></li>

                                                         < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > is needed, as the
                                    filters
                                    describe
                                    an
                                    empty
                                    set.In
                                    that
                                    case, None is < / pre > < / li >

                                                                < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > returned, to
                                    avoid
                                    any
                                    unnecessary
                                    database
                                    interaction. < / pre > < / li >

                                                               < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                                                                                                                                    < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
                                    if not result_type: < / pre > < / li >

                                                                      < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > result_type = NO_RESULTS < / pre > < / li >

                                                                                                                                                     < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
                                    try: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "824"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
                                    sql, params = self.as_sql() < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '825'

                                    class ="post-context" id="post140655221127432" >

                                    < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
                                    if not sql: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
                                    raise EmptyResultSet < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >        except EmptyResultSet: < / pre > < / li >

                                    < li
                                onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
                                    if result_type == MULTI: < / pre > < / li >

                                    < li
                                onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
                                return iter([]) < / pre > < / li >

                                < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > else: < / pre > < / li >

                                < / ol >

                                    < / div >

                                < div

                                class ="commands" >

                                < a
                                href = "#"
                                onclick = "return varToggle(this, '140655221127432')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221127432" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > result_type < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;multi&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / models / sql / compiler.py < / code > in < code > as_sql < / code >

                                    < div

                                    class ="context" id="c140655221125192" >

                                    < ol
                                    start = "369"

                                    class ="pre-context" id="pre140655221125192" >

                                    < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > extra_select, order_by, group_by = self.pre_sql_setup() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > distinct_fields = self.get_distinct() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > < / pre > < / li >

                                < li
                                onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre >  # This must come after &#39;select&#39;, &#39;ordering&#39;, and &#39;distinct&#39; -- see</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre >  # docstring of get_from_clause() for details.</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > from_, f_params = self.get_from_clause() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "376"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre >
                                    where, w_params = self.compile(self.where) if self.where is not None else (
                                                                                                                  & quot; & quot;, []) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '377'

                                    class ="post-context" id="post140655221125192" >

                                    < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > having, h_params = self.compile(
                                        self.having) if self.having is not None else (
                                                                                         & quot; & quot;, []) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > params = [] < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > result = [ &  # 39;SELECT&#39;]</pre></li>

                                                                                                                       < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > < / pre > < / li >

                                                                                                                            < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre >
                                    if self.query.distinct: < / pre > < / li >

                                                                          < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > result.append(
                                        self.connection.ops.distinct_sql(distinct_fields)) < / pre > < / li >

                                                                                                         < / ol >

                                                                                                             < / div >

                                                                                                                 < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221125192')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221125192" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > distinct_fields < / td >
                                    < td

                                    class ="code" > < pre >[] < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > extra_select < / td >
                                    < td

                                    class ="code" > < pre >[] < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > f_params < / td >
                                    < td

                                    class ="code" > < pre >[] < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > from_ < / td >
                                    < td

                                    class ="code" > < pre >[&  # 39;`app_student`&#39;]</pre></td>
                                    < / tr >

                                    < tr >
                                    < td > group_by < / td >
                                    < td

                                    class ="code" > < pre >[] < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > order_by < / td >
                                    < td

                                    class ="code" > < pre >[] < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > refcounts_before < / td >
                                    < td

                                    class ="code" > < pre > {&  # 39;app_student&#39;: 1}</pre></td>
                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > subquery < / td >
                                    < td

                                    class ="code" > < pre > False < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > with_col_aliases < / td >
                                < td

                                    class ="code" > < pre > False < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > with_limits < / td >
                                    < td

                                    class ="code" > < pre > True < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / models / sql / compiler.py < / code > in < code > compile < / code >

                                    < div

                                    class ="context" id="c140655221127304" >

                                    < ol
                                    start = "346"

                                    class ="pre-context" id="pre140655221127304" >

                                    < li
                                    onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
                                    return r < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >

                                    def compile(self, node, select_format=False):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > vendor_impl = getattr(
                                        node, &  # 39;as_&#39; + self.connection.vendor, None)</pre></li>

                                                                                                                            < li
                                    onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
                                    if vendor_impl: < / pre > < / li >

                                                                  < li
                                    onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > sql, params = vendor_impl(
                                        self, self.connection) < / pre > < / li >

                                                                             < li
                                    onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > else: < / pre > < / li >

                                                                                                                                  < / ol >

                                                                                                                                      < ol
                                    start = "353"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
                                    sql, params = node.as_sql(self,
                                                              self.connection) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '354'

                                    class ="post-context" id="post140655221127304" >

                                    < li
                                    onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
                                    if select_format and not self.subquery: < / pre > < / li >

                                    < li
                                onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
                                    return node.output_field.select_format(self, sql, params) < / pre > < / li >

                                < li
                                onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
                                return sql, params < / pre > < / li >

                                < li
                                onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > < / pre > < / li >

                                < li
                                onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >

                                    def as_sql(self, with_limits=True, with_col_aliases=False, subquery=False):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                onclick = "return varToggle(this, '140655221127304')" > < span > &  # x25b6;</span> Local vars</a>

                                < / div >
                                < table

                                class ="vars" id="v140655221127304" >

                                < thead >
                                < tr >
                                < th > Variable < / th >
                                < th > Value < / th >
                                < / tr >
                                < / thead >
                                < tbody >

                                < tr >
                                < td > node < / td >
                                < td

                                class ="code" > < pre > & lt;WhereNode: (AND
                                                                         : & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt;) & gt; <

                                / pre > < / td >

                            < / tr >

                            < tr >
                            < td > select_format < / td >
                            < td

                            class ="code" > < pre > False < / pre > < / td >

                            < / tr >

                            < tr >
                            < td > self < / td >
                            < td

                            class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

                            < / tr >

                            < tr >
                                    < td > vendor_impl < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / models / sql / where.py < / code > in < code > as_sql < / code >

                                    < div

                                    class ="context" id="c140655221126664" >

                            < ol
                            start = "72"

                                    class ="pre-context" id="pre140655221126664" >

                            < li
                            onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >
                                    if self.connector == AND: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > full_needed, empty_needed = len(
                                        self.children), 1 < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > else: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > full_needed, empty_needed = 1, len(
                                        self.children) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >
                                    for child in self.children: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >
                                    try: < / pre > < / li >

                            < / ol >

                            < ol
                                    start = "79"

                                    class ="context-line" >

                            < li
                            onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >
                            sql, params = compiler.compile(
                                child) < / pre > < span > ... < / span > < / li > < / ol >

                            < ol
                            start = '80'

                                    class ="post-context" id="post140655221126664" >

                            < li
                                    onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >            except EmptyResultSet: < / pre > < / li >

                            < li
                                    onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > empty_needed -= 1 < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > else: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >
                                    if sql: < / pre > < / li >

                            < li
                            onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > result.append(
                                sql) < / pre > < / li >

                            < li
                            onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > result_params.extend(
                                params) < / pre > < / li >

                            < / ol >

                            < / div >

                            < div

                            class ="commands" >

                            < a
                            href = "#"
                            onclick = "return varToggle(this, '140655221126664')" > < span > &  # x25b6;</span> Local vars</a>

                            < / div >
                            < table

                            class ="vars" id="v140655221126664" >

                            < thead >
                            < tr >
                            < th > Variable < / th >
                            < th > Value < / th >
                            < / tr >
                            < / thead >
                            < tbody >

                            < tr >
                            < td > child < / td >
                            < td

                            class ="code" > < pre > & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt; < / pre > < / td >

                            < / tr >

                            < tr >
                            < td > compiler < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > connection < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > empty_needed < / td >
                                    < td

                                    class ="code" > < pre > 1 < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > full_needed < / td >
                                    < td

                                    class ="code" > < pre > 1 < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > result < / td >
                                    < td

                                    class ="code" > < pre >[] < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > result_params < / td >
                                    < td

                                    class ="code" > < pre >[] < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;WhereNode: (AND
                                                                             : & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt;) & gt; <

                                        / pre > < / td >

                        < / tr >

                        < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                        class ="frame django" >

                        < code > / usr / local / anaconda3 / lib / python3
                        .6 / site - packages / django / db / models / sql / compiler.py < / code > in < code > compile < / code >

                        < div

                        class ="context" id="c140655221126344" >

                        < ol
                        start = "346"

                        class ="pre-context" id="pre140655221126344" >

                        < li
                        onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
                                    return r < / pre > < / li >

                                    < li
                        onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >

                                    def compile(self, node, select_format=False):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > vendor_impl = getattr(
                                        node, &  # 39;as_&#39; + self.connection.vendor, None)</pre></li>

                                                                                                                            < li
                        onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
                        if vendor_impl: < / pre > < / li >

                                                      < li
                        onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > sql, params = vendor_impl(
                            self, self.connection) < / pre > < / li >

                                                                 < li
                        onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > else: < / pre > < / li >

                                                                                                                      < / ol >

                                                                                                                          < ol
                        start = "353"

                        class ="context-line" >

                        < li
                        onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
                        sql, params = node.as_sql(self,
                                                  self.connection) < / pre > < span > ... < / span > < / li > < / ol >

                        < ol
                        start = '354'

                                    class ="post-context" id="post140655221126344" >

                                    < li
                                    onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
                                    if select_format and not self.subquery: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
                                    return node.output_field.select_format(self, sql, params) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
                                    return sql, params < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >

                                    def as_sql(self, with_limits=True, with_col_aliases=False, subquery=False):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                        < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221126344')" > < span > &  # x25b6;</span> Local vars</a>

                        < / div >
                                    < table

                                    class ="vars" id="v140655221126344" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > node < / td >
                                    < td

                        class ="code" > < pre > & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > select_format < / td >
                                    < td

                                    class ="code" > < pre > False < / pre > < / td >

                                    < / tr >

                        < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

                                    < / tr >

                        < tr >
                        < td > vendor_impl < / td >
                        < td

                        class ="code" > < pre > None < / pre > < / td >

                        < / tr >

                        < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                        class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / models / lookups.py < / code > in < code > as_sql < / code >

                                    < div

                                    class ="context" id="c140655221126920" >

                                    < ol
                                    start = "148"

                                    class ="pre-context" id="pre140655221126920" >

                        < li
                        onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > db_type = self.lhs.output_field.db_type(
                            connection=connection) < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > lhs_sql = connection.ops.field_cast_sql( < / pre > < / li >

                                                                                                                                                         < li
                        onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > db_type, field_internal_type) % lhs_sql < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > lhs_sql = connection.ops.lookup_cast(
                            self.lookup_name, field_internal_type) % lhs_sql < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre >
                        return lhs_sql, list(params) < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre >

                        def as_sql(self, compiler, connection):
                                        <

                                        / pre > < / li >

                        < / ol >

                                    < ol
                                    start = "155"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre >
                        lhs_sql, params = self.process_lhs(compiler,
                                                           connection) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '156'

                                    class ="post-context" id="post140655221126920" >

                                    < li
                                    onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > rhs_sql, rhs_params = self.process_rhs(
                                        compiler, connection) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > params.extend(
                                        rhs_params) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > rhs_sql = self.get_rhs_op(
                                        connection, rhs_sql) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre >
                                    return &  # 39;%s %s&#39; % (lhs_sql, rhs_sql), params</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre >

                                    def get_rhs_op(self, connection, rhs):
                                        <

                                        / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221126920')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221126920" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > compiler < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > connection < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / models / lookups.py < / code > in < code > process_lhs < / code >

                                    < div

                                    class ="context" id="c140655221129096" >

                                    < ol
                                    start = "141"

                                    class ="pre-context" id="pre140655221129096" >

                                    < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre >

                                    class BuiltinLookup(Lookup):
                                        <

                                        / pre > < / li >

                        < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre >

                                    def process_lhs(self, compiler, connection, lhs=None):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > lhs_sql, params = super(
                                        BuiltinLookup, self).process_lhs( < / pre > < / li >

                                                                                        < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > compiler, connection, lhs) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > field_internal_type = self.lhs.output_field.get_internal_type() < / pre > < / li >

                                    < / ol >

                                    < ol
                        start = "148"

                        class ="context-line" >

                        < li
                        onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre >
                        db_type = self.lhs.output_field.db_type(
                            connection=connection) < / pre > < span > ... < / span > < / li > < / ol >

                        < ol
                        start = '149'

                        class ="post-context" id="post140655221129096" >

                        < li
                        onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > lhs_sql = connection.ops.field_cast_sql( < / pre > < / li >

                                                                                                                                                         < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > db_type, field_internal_type) % lhs_sql < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > lhs_sql = connection.ops.lookup_cast(
                                        self.lookup_name, field_internal_type) % lhs_sql < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre >
                                    return lhs_sql, list(params) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre >

                                    def as_sql(self, compiler, connection):
                                        <

                                        / pre > < / li >

                        < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221129096')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221129096" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > __class__ < / td >
                                    < td

                                    class ="code" > < pre > & lt; class &  # 39;django.db.models.lookups.BuiltinLookup&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > compiler < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > connection < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > field_internal_type < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;CharField&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > lhs < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > lhs_sql < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;`app_student`.`phone`&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > params < / td >
                                    < td

                                    class ="code" > < pre >[] < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / models / fields / __init__.py < / code > in < code > db_type < / code >

                                    < div

                                    class ="context" id="c140655221129160" >

                                    < ol
                                    start = "622"

                                    class ="pre-context" id="pre140655221129160" >

                                    < li
                                    onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >  # But the limitation of the get_internal_type() / data_types approach</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >  # is that it cannot handle database column types that aren&#39;t already</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >  # mapped to one of the built-in Django field types. In this case, you</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >  # can implement db_type() instead of get_internal_type() to specify</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >  # exactly which wacky database column type you want to use.</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre > data = DictWrapper(
                                        self.__dict__, connection.ops.quote_name, & quot;
                                    qn_ & quot;) < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >
                                    try: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "629"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >
                                    return connection.data_types[
                                               self.get_internal_type()] % data < / pre > < span > ... < / span > < / li > < / ol >

                        < ol
                                    start = '630'

                        class ="post-context" id="post140655221129160" >

                        < li
                        onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >        except KeyError: < / pre > < / li >

                        < li
                                    onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >
                        return None < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre > < / pre > < / li >

                                    < li
                        onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >

                        def rel_db_type(self, connection):
                            <

                            / pre > < / li >

                        < li
                                    onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre > Return
                        the
                        data
                        type
                        that
                        a
                        related
                        field
                        pointing
                        to
                        this
                        field
                        should < / pre > < / li >

                        < / ol >

                        < / div >

                        < div

                        class ="commands" >

                        < a
                        href = "#"
                        onclick = "return varToggle(this, '140655221129160')" > < span > &  # x25b6;</span> Local vars</a>

                        < / div >
                        < table

                        class ="vars" id="v140655221129160" >

                        < thead >
                        < tr >
                        < th > Variable < / th >
                        < th > Value < / th >
                        < / tr >
                        < / thead >
                        < tbody >

                        < tr >
                        < td > connection < / td >
                        < td

                        class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                        < / tr >

                        < tr >
                        < td > data < / td >
                        < td

                        class ="code" > < pre > {&  # 39;_error_messages&#39;: None,
                        &  # 39;_unique&#39;: False,
                        &  # 39;_validators&#39;: [],
                        &  # 39;_verbose_name&#39;: &#39;çµè¯&#39;,
                        &  # 39;attname&#39;: &#39;phone&#39;,
                                    &  # 39;auto_created&#39;: False,
                        &  # 39;blank&#39;: False,
                        &  # 39;cached_col&#39;: Col(app_student, app.Student.phone),
                        &  # 39;choices&#39;: [],
                        &  # 39;column&#39;: &#39;phone&#39;,
                        &  # 39;concrete&#39;: True,
                        &  # 39;creation_counter&#39;: 50,
                                    &  # 39;db_column&#39;: None,
                        &  # 39;db_index&#39;: False,
                        &  # 39;db_tablespace&#39;: &#39;&#39;,
                        &  # 39;default&#39;: &lt;class &#39;django.db.models.fields.NOT_PROVIDED&#39;&gt;,
                                    &  # 39;editable&#39;: True,
                                    &  # 39;error_messages&#39;: {&#39;blank&#39;: &lt;django.utils.functional.lazy.&lt;locals&gt;.__proxy__ object at 0x7fecdd721cf8&gt;,
                        &  # 39;invalid_choice&#39;: &lt;django.utils.functional.lazy.&lt;locals&gt;.__proxy__ object at 0x7fecdd721be0&gt;,
                        &  # 39;null&#39;: &lt;django.utils.functional.lazy.&lt;locals&gt;.__proxy__ object at 0x7fecdd721c18&gt;,
                        &  # 39;unique&#39;: &lt;django.utils.functional.lazy.&lt;locals&gt;.__proxy__ object at 0x7fecdd6e37f0&gt;,
                        &  # 39;unique_for_date&#39;: &lt;django.utils.functional.lazy.&lt;locals&gt;.__proxy__ object at 0x7fecdc4fa358&gt;},
                        &  # 39;help_text&#39;: &#39;&#39;,
                                    &  # 39;is_relation&#39;: False,
                        &  # 39;max_length&#39;: 11,
                        &  # 39;model&#39;: &lt;class &#39;app.models.Student&#39;&gt;,
                                    &  # 39;name&#39;: &#39;phone&#39;,
                        &  # 39;null&#39;: False,
                                    &  # 39;primary_key&#39;: False,
                        &  # 39;remote_field&#39;: None,
                        &  # 39;serialize&#39;: True,
                        &  # 39;unique_for_date&#39;: None,
                        &  # 39;unique_for_month&#39;: None,
                        &  # 39;unique_for_year&#39;: None,
                        &  # 39;validators&#39;: [&lt;django.core.validators.MaxLengthValidator object at 0x7fecdb2fea90&gt;],
                        &  # 39;verbose_name&#39;: &#39;çµè¯&#39;}</pre></td>
                        < / tr >

                        < tr >
                        < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.models.fields.CharField: phone & gt; <

                                        / pre > < / td >
                                    < / tr >

                                    < / tbody >
                    < / table >

                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / utils / functional.py < / code > in < code > __get__ < / code >

                                    < div

                                    class ="context" id="c140655221125640" >

                    < ol
                                    start = "28"

                                    class ="pre-context" id="pre140655221125640" >

                    < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > self.func = func < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > self.__doc__ = getattr(
                        func, &  # 39;__doc__&#39;)</pre></li>

                                                                                                             < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > self.name = name or func.__name__ < / pre > < / li >

                                                                                                                                              < li
                                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > < / pre > < / li >

                                                                                                                            < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >

                                    def __get__(self, instance, cls=None):
                                        <

                                        / pre > < / li >

                    < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >
                                    if instance is None: < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >
                    return self < / pre > < / li >

                    < / ol >

                    < ol
                    start = "35"

                    class ="context-line" >

                    < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >
                                    res = instance.__dict__[self.name] = self.func(
                                        instance) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                    start = '36'

                    class ="post-context" id="post140655221125640" >

                    < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >
                    return res < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > < / pre > < / li >

                    < li
                                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >

                    class Promise(object):
                                        <

                                        / pre > < / li >

                                    < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > This is just
                    a
                    base

                                    class for the proxy class created in < / pre > < / li >

                    < / ol >

                    < / div >

                    < div

                                    class ="commands" >

                    < a
                                    href = "#"
                    onclick = "return varToggle(this, '140655221125640')" > < span > &  # x25b6;</span> Local vars</a>

                    < / div >
                    < table

                                    class ="vars" id="v140655221125640" >

                    < thead >
                    < tr >
                    < th > Variable < / th >
                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                    < td > cls < / td >
                                    < td

                    class ="code" > < pre > & lt; class &  # 39;django.db.backends.mysql.base.DatabaseWrapper&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > instance < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                    < / tr >

                    < tr >
                    < td > self < / td >
                    < td

                    class ="code" > < pre > & lt;django.utils.functional.cached_property object at 0x7fecdb3b14a8 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / backends / mysql / base.py < / code > in < code > data_types < / code >

                                    < div

                    class ="context" id="c140655221126216" >

                    < ol
                    start = "178"

                    class ="pre-context" id="pre140655221126216" >

                    < li
                                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > &  # 39;TextField&#39;: &#39;longtext&#39;,</pre></li>

                    < li
                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > &  # 39;TimeField&#39;: &#39;time&#39;,</pre></li>

                    < li
                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > &  # 39;UUIDField&#39;: &#39;char(32)&#39;,</pre></li>

                    < li
                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >} < / pre > < / li >

                                                                                                             < li
                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > < / pre > < / li >

                                                                                                            < li
                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >

                    @cached_property

                    < / pre > < / li >

                                  < li
                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >

                    def data_types(self):
                        <

                        / pre > < / li >

                    < / ol >

                    < ol
                    start = "185"

                    class ="context-line" >

                    < li
                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >
                    if self.features.supports_microsecond_precision: < / pre > < span > ... < / span > < / li > < / ol >

                    < ol
                    start = '186'

                    class ="post-context" id="post140655221126216" >

                    < li
                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >
                    return dict(self._data_types,
                                DateTimeField= &  # 39;datetime(6)&#39;, TimeField=&#39;time(6)&#39;)</pre></li>

                           < li
                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > else: < / pre > < / li >

                                                                                                                  < li
                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >
                    return self._data_types < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > operators = { < / pre > < / li >

                                                                                                                          < li
                                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > &  # 39;exact&#39;: &#39;= %s&#39;,</pre></li>

                                    < / ol >

                                        < / div >

                                            < div

                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221126216')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                    < table

                    class ="vars" id="v140655221126216" >

                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                    < / tr >
                    < / thead >
                    < tbody >

                    < tr >
                                    < td > self < / td >
                    < td

                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                    < / tr >

                    < / tbody >
                    < / table >

                    < / li >

                    < li

                    class ="frame django" >

                    < code > / usr / local / anaconda3 / lib / python3
                    .6 / site - packages / django / utils / functional.py < / code > in < code > __get__ < / code >

                                    < div

                    class ="context" id="c140655221125256" >

                                    < ol
                                    start = "28"

                    class ="pre-context" id="pre140655221125256" >

                                    < li
                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > self.func = func < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > self.__doc__ = getattr(
                                        func, &  # 39;__doc__&#39;)</pre></li>

                                                                                                             < li
                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > self.name = name or func.__name__ < / pre > < / li >

                                                                                                                                              < li
                                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > < / pre > < / li >

                                                                                                                            < li
                                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >

                                    def __get__(self, instance, cls=None):
                                        <

                                        / pre > < / li >

                    < li
                                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >
                                    if instance is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >
                                    return self < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "35"

                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >
                                    res = instance.__dict__[self.name] = self.func(
                                        instance) < / pre > < span > ... < / span > < / li > < / ol >

                    < ol
                    start = '36'

                    class ="post-context" id="post140655221125256" >

                                    < li
                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >
                    return res < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >

                    class Promise(object):
                        <

                        / pre > < / li >

                                    < li
                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > This is just
                    a
                    base

                    class for the proxy class created in < / pre > < / li >

                    < / ol >

                    < / div >

                                    < div

                                    class ="commands" >

                    < a
                    href = "#"
                                    onclick = "return varToggle(this, '140655221125256')" > < span > &  # x25b6;</span> Local vars</a>

                    < / div >
                                    < table

                    class ="vars" id="v140655221125256" >

                                    < thead >
                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > cls < / td >
                                    < td

                                    class ="code" > < pre > & lt; class &  # 39;django.db.backends.mysql.features.DatabaseFeatures&#39;&gt;</pre></td>

                    < / tr >

                    < tr >
                                    < td > instance < / td >
                    < td

                    class ="code" > < pre > & lt;django.db.backends.mysql.features.DatabaseFeatures object at 0x7fecd94df550 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.utils.functional.cached_property object at 0x7fecdb3dc7f0 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / backends / mysql / features.py < / code > in < code > supports_microsecond_precision < / code >

                                    < div

                                    class ="context" id="c140655221128584" >

                                    < ol
                                    start = "47"

                                    class ="pre-context" id="pre140655221128584" >

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre > & quot;
                                    Confirm
                                    support
                                    for introspected foreign keys & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >
                                    return self._mysql_storage_engine != &  # 39;MyISAM&#39;</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >

                                    @cached_property

                                    < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >

                                    def supports_microsecond_precision(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >  # See https://github.com/farcepest/MySQLdb1/issues/24 for the reason</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >  # about requiring MySQLdb 1.2.5</pre></li>

                                    < / ol >

                                    < ol
                                    start = "54"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >
                                    return self.connection.mysql_version & gt;= (5, 6,
                                                                                 4) and Database.version_info & gt;= (1,
                                                                                                                      2,
                                                                                                                      5) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '55'

                                    class ="post-context" id="post140655221128584" >

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >

                                    @cached_property

                                    < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >

                                    def has_zoneinfo_database(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >  # MySQL accepts full time zones names (eg. Africa/Nairobi) but rejects</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >  # abbreviations (eg. EAT). When pytz isn&#39;t installed and the current</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >  # time zone is LocalTimezone (the only sensible value in this</pre></li>

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221128584')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221128584" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.features.DatabaseFeatures object at 0x7fecd94df550 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / utils / functional.py < / code > in < code > __get__ < / code >

                                    < div

                                    class ="context" id="c140655221128648" >

                                    < ol
                                    start = "28"

                                    class ="pre-context" id="pre140655221128648" >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > self.func = func < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > self.__doc__ = getattr(
                                        func, &  # 39;__doc__&#39;)</pre></li>

                                                                                                                             < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > self.name = name or func.__name__ < / pre > < / li >

                                                                                                                                                              < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > < / pre > < / li >

                                                                                                                            < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >

                                    def __get__(self, instance, cls=None):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >
                                    if instance is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >
                                    return self < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "35"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >
                                    res = instance.__dict__[self.name] = self.func(
                                        instance) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '36'

                                    class ="post-context" id="post140655221128648" >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >
                                    return res < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >

                                    class Promise(object):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > This is just
                                    a
                                    base

                                    class for the proxy class created in < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221128648')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221128648" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > cls < / td >
                                    < td

                                    class ="code" > < pre > & lt; class &  # 39;django.db.backends.mysql.base.DatabaseWrapper&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > instance < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.utils.functional.cached_property object at 0x7fecdb3b1358 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / backends / mysql / base.py < / code > in < code > mysql_version < / code >

                                    < div

                                    class ="context" id="c140655221126856" >

                                    < ol
                                    start = "362"

                                    class ="pre-context" id="pre140655221126856" >

                                    < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >        except Database.Error: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
                                    return False < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre > else: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
                                    return True < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >

                                    @cached_property

                                    < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >

                                    def mysql_version(self):
                                        <

                                        / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "369"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
                                    with self.temporary_connection() as cursor:
                                        < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '370'

                                    class ="post-context" id="post140655221126856" >

                                    < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre > cursor.execute( &  # 39;SELECT VERSION()&#39;)</pre></li>

                                              < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre > server_info =
                                    cursor.fetchone()[0] < / pre > < / li >

                                                                       < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre > match = server_version_re.match(
                                        server_info) < / pre > < / li >

                                                                   < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
                                    if not match: < / pre > < / li >

                                                                < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
                                    raise Exception( &  # 39;Unable to determine MySQL version from version string %r&#39; % server_info)</pre></li>

                                          < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
                                    return tuple(int(x) for x in match.groups()) < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221126856')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221126856" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame user" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / contextlib.py < / code > in < code > __enter__ < / code >

                                    < div

                                    class ="context" id="c140655221128520" >

                                    < ol
                                    start = "74"

                                    class ="pre-context" id="pre140655221128520" >

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >  # _GCM instances are one-shot context managers, so the</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >  # CM must be recreated each time a decorated function is</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >  # called</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
                                    return self.__class__(self.func, self.args, self.kwds) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >

                                    def __enter__(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
                                    try: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "81"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
                                    return next(self.gen) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '82'

                                    class ="post-context" id="post140655221128520" >

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >        except StopIteration: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
                                    raise RuntimeError( & quot;
                                    generator
                                    didn &  # 39;t yield&quot;) from None</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre > < / pre > < / li >

                                                                                                                            < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >

                                    def __exit__(self, type, value, traceback):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
                                    if type is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
                                    try: < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221128520')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221128520" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;contextlib._GeneratorContextManager object at 0x7fecd8586940 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / backends / base / base.py < / code > in < code > temporary_connection < / code >

                                    < div

                                    class ="context" id="c140655221126984" >

                                    < ol
                                    start = "557"

                                    class ="pre-context" id="pre140655221126984" >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > Context
                                    manager
                                    that
                                    ensures
                                    that
                                    a
                                    connection is established, and < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > if it
                                    opened
                                    one, closes
                                    it
                                    to
                                    avoid
                                    leaving
                                    a
                                    dangling
                                    connection. < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > This is useful
                                    for operations outside of the request-response cycle.< / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > Provides
                                    a
                                    cursor:
                                    with self.temporary_connection() as cursor:
                                        ... < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > must_close = self.connection is None < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "564"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre >
                                    cursor = self.cursor() < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '565'

                                    class ="post-context" id="post140655221126984" >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre >
                                    try: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre >
                                    yield cursor < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre >        finally: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > cursor.close() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre >
                                    if must_close: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > self.close() < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221126984')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221126984" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > must_close < / td >
                                    < td

                                    class ="code" > < pre > True < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / backends / base / base.py < / code > in < code > cursor < / code >

                                    < div

                                    class ="context" id="c140655233624264" >

                                    < ol
                                    start = "224"

                                    class ="pre-context" id="pre140655233624264" >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre >

                                    def cursor(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > Creates
                                    a
                                    cursor, opening
                                    a
                                    connection if necessary. < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > self.validate_thread_sharing() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre >
                                    if self.queries_logged: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "231"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre >
                                    cursor = self.make_debug_cursor(
                                        self._cursor()) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '232'

                                    class ="post-context" id="post140655233624264" >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > else: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > cursor = self.make_cursor(
                                        self._cursor()) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre >
                                    return cursor < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre >

                                    def commit(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655233624264')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655233624264" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / backends / base / base.py < / code > in < code > _cursor < / code >

                                    < div

                                    class ="context" id="c140655233625224" >

                                    < ol
                                    start = "197"

                                    class ="pre-context" id="pre140655233625224" >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
                                    if self.connection is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
                                    with self.wrap_database_errors:
                                        < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre > self.connect() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >  # ##### Backend-specific wrappers for PEP-249 connection methods #####</pre></li>

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >

                                    def _cursor(self):
                                        <

                                        / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "204"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
                                    self.ensure_connection() < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '205'

                                    class ="post-context" id="post140655233625224" >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
                                    with self.wrap_database_errors:
                                        < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
                                    return self.create_cursor() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >

                                    def _commit(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
                                    if self.connection is not None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
                                    with self.wrap_database_errors:
                                        < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655233625224')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655233625224" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / backends / base / base.py < / code > in < code > ensure_connection < / code >

                                    < div

                                    class ="context" id="c140655233624136" >

                                    < ol
                                    start = "192"

                                    class ="pre-context" id="pre140655233624136" >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >

                                    def ensure_connection(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > Guarantees
                                    that
                                    a
                                    connection
                                    to
                                    the
                                    database is established. < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >
                                    if self.connection is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >
                                    with self.wrap_database_errors:
                                        < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "199"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >
                                    self.connect() < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '200'

                                    class ="post-context" id="post140655233624136" >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >  # ##### Backend-specific wrappers for PEP-249 connection methods #####</pre></li>

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >

                                    def _cursor(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > self.ensure_connection() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >
                                    with self.wrap_database_errors:
                                        < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655233624136')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655233624136" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / utils.py < / code > in < code > __exit__ < / code >

                                    < div

                                    class ="context" id="c140655233623368" >

                                    < ol
                                    start = "87"

                                    class ="pre-context" id="pre140655233623368" >

                                    < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre > dj_exc_value.__cause__ = exc_value < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre > if not hasattr(
                                        exc_value, &  # 39;__traceback__&#39;):</pre></li>

                                                                                                                     < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre > exc_value.__traceback__ = traceback < / pre > < / li >

                                                                                                                                                                < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >  # Only set the &#39;errors_occurred&#39; flag for errors that may make</pre></li>

                                              < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >  # the connection unusable.</pre></li>

                                              < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >
                                    if dj_exc_type not in (DataError, IntegrityError): < / pre > < / li >

                                                                                                     < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre > self.wrapper.errors_occurred = True < / pre > < / li >

                                                                                                                                                                < / ol >

                                                                                                                                                                    < ol
                                    start = "94"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >
                                    six.reraise(dj_exc_type, dj_exc_value,
                                                traceback) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '95'

                                    class ="post-context" id="post140655233623368" >

                                    < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >

                                    def __call__(self, func):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >  # Note that we are intentionally not using @wraps here for performance</pre></li>

                                    < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >  # reasons. Refs #21109.</pre></li>

                                    < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >

                                    def inner(*args, **kwargs):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >
                                    with self:
                                        < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655233623368')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655233623368" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > db_exc_type < / td >
                                    < td

                                    class ="code" > < pre > & lt; class &  # 39;pymysql.err.OperationalError&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > dj_exc_type < / td >
                                    < td

                                    class ="code" > < pre > & lt; class &  # 39;django.db.utils.OperationalError&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > dj_exc_value < / td >
                                    < td

                                    class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                    < / tr >

                                    < tr >
                                    < td > exc_type < / td >
                                    < td

                                    class ="code" > < pre > & lt; class &  # 39;pymysql.err.OperationalError&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > exc_value < / td >
                                    < td

                                    class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.utils.DatabaseErrorWrapper object at 0x7fecd8586a90 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > traceback < / td >
                                    < td

                                    class ="code" > < pre > & lt;traceback object at 0x7fecd93c6fc8 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / utils / six.py < / code > in < code > reraise < / code >

                                    < div

                                    class ="context" id="c140655233625032" >

                                    < ol
                                    start = "678"

                                    class ="pre-context" id="pre140655233625032" >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
                                    if PY3: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > exec_ = getattr(
                                        moves.builtins, & quot;
                                    exec & quot;) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >

                                    def reraise(tp, value, tb=None):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
                                    if value is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > value = tp() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
                                    if value.__traceback__ is not tb: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "685"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
                                    raise value.with_traceback(tb) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '686'

                                    class ="post-context" id="post140655233625032" >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
                                    raise value < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > else: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >

                                    def exec_(_code_, _globs_=None, _locs_=None):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > & quot; & quot; & quot;
                                    Execute
                                    code in a
                                    namespace. & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
                                    if _globs_ is None: < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655233625032')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655233625032" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > tb < / td >
                                    < td

                                    class ="code" > < pre > & lt;traceback object at 0x7fecd93c6fc8 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > tp < / td >
                                    < td

                                    class ="code" > < pre > & lt; class &  # 39;django.db.utils.OperationalError&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > value < / td >
                                    < td

                                    class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / backends / base / base.py < / code > in < code > ensure_connection < / code >

                                    < div

                                    class ="context" id="c140655233626056" >

                                    < ol
                                    start = "192"

                                    class ="pre-context" id="pre140655233626056" >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >

                                    def ensure_connection(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > Guarantees
                                    that
                                    a
                                    connection
                                    to
                                    the
                                    database is established. < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
                                    if self.connection is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
                                    with self.wrap_database_errors:
                                        < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "199"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
                                    self.connect() < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '200'

                                    class ="post-context" id="post140655233626056" >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >  # ##### Backend-specific wrappers for PEP-249 connection methods #####</pre></li>

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >

                                    def _cursor(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > self.ensure_connection() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
                                    with self.wrap_database_errors:
                                        < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655233626056')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655233626056" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / backends / base / base.py < / code > in < code > connect < / code >

                                    < div

                                    class ="context" id="c140655233624904" >

                                    < ol
                                    start = "164"

                                    class ="pre-context" id="pre140655233624904" >

                                    < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >  # Reset parameters defining when to close the connection</pre></li>

                                    < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > max_age =
                                    self.settings_dict[ &  # 39;CONN_MAX_AGE&#39;]</pre></li>

                                    < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.close_at = None if max_age is None else time.time() + max_age < / pre > < / li >

                                                                                                                                                                                               < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.closed_in_transaction = False < / pre > < / li >

                                                                                                                                                               < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.errors_occurred = False < / pre > < / li >

                                                                                                                                                         < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >  # Establish the connection</pre></li>

                                              < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > conn_params = self.get_connection_params() < / pre > < / li >

                                                                                                                                                                       < / ol >

                                                                                                                                                                           < ol
                                    start = "171"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >
                                    self.connection = self.get_new_connection(
                                        conn_params) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '172'

                                    class ="post-context" id="post140655233624904" >

                                    < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.set_autocommit(
                                        self.settings_dict[ &  # 39;AUTOCOMMIT&#39;])</pre></li>

                                        < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.init_connection_state() < / pre > < / li >

                                                                                                                                                         < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > connection_created.send(
                                        sender=self.__class__, connection=self) < / pre > < / li >

                                                                                              < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > < / pre > < / li >

                                                                                                                            < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.run_on_commit = [] < / pre > < / li >

                                                                                                                                                    < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > < / pre > < / li >

                                                                                                                            < / ol >

                                                                                                                                < / div >

                                                                                                                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655233624904')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655233624904" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > conn_params < / td >
                                    < td

                                    class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
                                    &  # 39;client_flag&#39;: 2,
                                    &  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
                                    1: &

                                        lt;

                                    class &  # 39;int&#39;&gt;,
                                        2: & lt;

                                        class &  # 39;int&#39;&gt;,
                                            3: & lt;

                                            class &  # 39;int&#39;&gt;,

                                                4: & lt;

                                            class &  # 39;float&#39;&gt;,

                                                5: & lt;

                                            class &  # 39;float&#39;&gt;,

                                                7: & lt;
                                            function
                                            convert_mysql_timestamp
                                            at
                                            0x7fecdb3d7bf8 & gt;,
                                            8: & lt;

                                            class &  # 39;int&#39;&gt;,
                                                9: & lt;

                                                class &  # 39;int&#39;&gt;,

                                                    10: & lt;
                                                function
                                                convert_date
                                                at
                                                0x7fecdb3d7b70 & gt;,
                                                11: & lt;
                                                function
                                                typecast_time
                                                at
                                                0x7fecdd779bf8 & gt;,
                                                12: & lt;
                                                function
                                                convert_datetime
                                                at
                                                0x7fecdb3d79d8 & gt;,
                                                13: & lt;

                                                class &  # 39;int&#39;&gt;,
                                                    15: & lt;
                                                    function
                                                    through
                                                    at
                                                    0x7fecdb3d7d08 & gt;,
                                                    16: & lt;
                                                    function
                                                    through
                                                    at
                                                    0x7fecdb3d7d08 & gt;,
                                                    246: & lt;
                                                    function
                                                    typecast_decimal
                                                    at
                                                    0x7fecdd779d08 & gt;,
                                                    248: & lt;
                                                    function
                                                    convert_set
                                                    at
                                                    0x7fecdb3d7c80 & gt;,
                                                    249: & lt;
                                                    function
                                                    through
                                                    at
                                                    0x7fecdb3d7d08 & gt;,
                                                    250: & lt;
                                                    function
                                                    through
                                                    at
                                                    0x7fecdb3d7d08 & gt;,
                                                    251: & lt;
                                                    function
                                                    through
                                                    at
                                                    0x7fecdb3d7d08 & gt;,
                                                    252: & lt;
                                                    function
                                                    through
                                                    at
                                                    0x7fecdb3d7d08 & gt;,
                                                    253: & lt;
                                                    function
                                                    through
                                                    at
                                                    0x7fecdb3d7d08 & gt;,
                                                    254: & lt;
                                                    function
                                                    through
                                                    at
                                                    0x7fecdb3d7d08 & gt;,
                                                    & lt;

                                                    class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                                                        & lt;

                                                        class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                                                            & lt;

                                                        class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                                                            & lt;

                                                        class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                                                            & lt;

                                                        class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                                                            & lt;

                                                        class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                                                            & lt;

                                                        class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                            & lt;

                                                        class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                            & lt;

                                                        class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                            & lt;

                                                        class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                                                            & lt;

                                                        class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                                                            & lt;

                                                        class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                                                            & lt;

                                                        class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                            & lt;

                                                        class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                                                            & lt;

                                                        class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                                                            & lt;

                                                        class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                                                            & lt;

                                                        class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

                                                &  # 39;db&#39;: &#39;main&#39;,
                                                &  # 39;host&#39;: &#39;127.0.0.1&#39;,
                                                &  # 39;passwd&#39;: &#39;123456&#39;,
                                                &  # 39;port&#39;: 3306,
                                                &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
                                                < / tr >

                                                < tr >
                                                < td > max_age < / td >
                                                < td

                                                class ="code" > < pre > 0 < / pre > < / td >

                                                < / tr >

                                                < tr >
                                                < td > self < / td >
                                                < td

                                                class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                                < / tr >

                                                < / tbody >
                                                < / table >

                                                < / li >

                                                < li

                                                class ="frame django" >

                                                < code > / usr / local / anaconda3 / lib / python3
                                                .6 / site - packages / django / db / backends / mysql / base.py < / code > in < code > get_new_connection < / code >

                                                < div

                                                class ="context" id="c140655233624776" >

                                                < ol
                                                start = "258"

                                                class ="pre-context" id="pre140655233624776" >

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >  # We need the number of potentially affected rows after an</pre></li>

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >  # &quot;UPDATE&quot;, not the number of changed rows.</pre></li>

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
                                                          kwargs[ &  # 39;client_flag&#39;] = CLIENT.FOUND_ROWS</pre></li>

                                                          < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > kwargs.update(
                                                    settings_dict[ &  # 39;OPTIONS&#39;])</pre></li>

                                                    < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
                                                return kwargs < / pre > < / li >

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > < / pre > < / li >

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >

                                                def get_new_connection(self, conn_params):
                                                    <

                                                    / pre > < / li >

                                                < / ol >

                                                < ol
                                                start = "265"

                                                class ="context-line" >

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
                                                conn = Database.connect(
                                                    **conn_params) < / pre > < span > ... < / span > < / li > < / ol >

                                                < ol
                                                start = '266'

                                                class ="post-context" id="post140655233624776" >

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
                                                          conn.encoders[SafeText] = conn.encoders[
                                                                                        six.text_type] < / pre > < / li >

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
                                                          conn.encoders[SafeBytes] = conn.encoders[
                                                                                         bytes] < / pre > < / li >

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
                                                return conn < / pre > < / li >

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > < / pre > < / li >

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >

                                                def init_connection_state(self):
                                                    <

                                                    / pre > < / li >

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
                                                if self.features.is_sql_auto_is_null_enabled: < / pre > < / li >

                                                < / ol >

                                                < / div >

                                                < div

                                                class ="commands" >

                                                < a
                                                href = "#"
                                                onclick = "return varToggle(this, '140655233624776')" > < span > &  # x25b6;</span> Local vars</a>

                                                < / div >
                                                < table

                                                class ="vars" id="v140655233624776" >

                                                < thead >
                                                < tr >
                                                < th > Variable < / th >
                                                < th > Value < / th >
                                                < / tr >
                                                < / thead >
                                                < tbody >

                                                < tr >
                                                < td > conn_params < / td >
                                                < td

                                                class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
                                                &  # 39;client_flag&#39;: 2,
                                                &  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
                                                1: &

                                                    lt;

                                                class &  # 39;int&#39;&gt;,
                                                    2: & lt;

                                                    class &  # 39;int&#39;&gt;,
                                                        3: & lt;

                                                        class &  # 39;int&#39;&gt;,

                                                            4: & lt;

                                                        class &  # 39;float&#39;&gt;,

                                                            5: & lt;

                                                        class &  # 39;float&#39;&gt;,

                                                            7: & lt;
                                                        function
                                                        convert_mysql_timestamp
                                                        at
                                                        0x7fecdb3d7bf8 & gt;,
                                                        8: & lt;

                                                        class &  # 39;int&#39;&gt;,
                                                            9: & lt;

                                                            class &  # 39;int&#39;&gt;,

                                                                10: & lt;
                                                            function
                                                            convert_date
                                                            at
                                                            0x7fecdb3d7b70 & gt;,
                                                            11: & lt;
                                                            function
                                                            typecast_time
                                                            at
                                                            0x7fecdd779bf8 & gt;,
                                                            12: & lt;
                                                            function
                                                            convert_datetime
                                                            at
                                                            0x7fecdb3d79d8 & gt;,
                                                            13: & lt;

                                                            class &  # 39;int&#39;&gt;,
                                                                15: & lt;
                                                                function
                                                                through
                                                                at
                                                                0x7fecdb3d7d08 & gt;,
                                                                16: & lt;
                                                                function
                                                                through
                                                                at
                                                                0x7fecdb3d7d08 & gt;,
                                                                246: & lt;
                                                                function
                                                                typecast_decimal
                                                                at
                                                                0x7fecdd779d08 & gt;,
                                                                248: & lt;
                                                                function
                                                                convert_set
                                                                at
                                                                0x7fecdb3d7c80 & gt;,
                                                                249: & lt;
                                                                function
                                                                through
                                                                at
                                                                0x7fecdb3d7d08 & gt;,
                                                                250: & lt;
                                                                function
                                                                through
                                                                at
                                                                0x7fecdb3d7d08 & gt;,
                                                                251: & lt;
                                                                function
                                                                through
                                                                at
                                                                0x7fecdb3d7d08 & gt;,
                                                                252: & lt;
                                                                function
                                                                through
                                                                at
                                                                0x7fecdb3d7d08 & gt;,
                                                                253: & lt;
                                                                function
                                                                through
                                                                at
                                                                0x7fecdb3d7d08 & gt;,
                                                                254: & lt;
                                                                function
                                                                through
                                                                at
                                                                0x7fecdb3d7d08 & gt;,
                                                                & lt;

                                                                class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                                                                    & lt;

                                                                    class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                                                                        & lt;

                                                                    class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                                                                        & lt;

                                                                    class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                                                                        & lt;

                                                                    class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                                                                        & lt;

                                                                    class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                                                                        & lt;

                                                                    class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                        & lt;

                                                                    class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                        & lt;

                                                                    class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                        & lt;

                                                                    class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                                                                        & lt;

                                                                    class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                                                                        & lt;

                                                                    class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                                                                        & lt;

                                                                    class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                        & lt;

                                                                    class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                                                                        & lt;

                                                                    class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                                                                        & lt;

                                                                    class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                                                                        & lt;

                                                                    class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

                                                            &  # 39;db&#39;: &#39;main&#39;,
                                                            &  # 39;host&#39;: &#39;127.0.0.1&#39;,
                                                            &  # 39;passwd&#39;: &#39;123456&#39;,
                                                            &  # 39;port&#39;: 3306,
                                                            &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
                                                            < / tr >

                                                            < tr >
                                                            < td > self < / td >
                                                            < td

                                                            class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                                            < / tr >

                                                            < / tbody >
                                                            < / table >

                                                            < / li >

                                                            < li

                                                            class ="frame user" >

                                                            < code > / usr / local / anaconda3 / lib / python3
                                                            .6 / site - packages / pymysql / __init__.py < / code > in < code > Connect < / code >

                                                            < div

                                                            class ="context" id="c140655233622600" >

                                                            < ol
                                                            start = "87"

                                                            class ="pre-context" id="pre140655233622600" >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >

                                                            def Connect(*args, **kwargs):
                                                                <

                                                                / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > Connect
                                                            to
                                                            the
                                                            database;
                                                            see
                                                            connections.Connection.__init__()
                                                            for < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > more
                                                            information. < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
                                                            from .connections import Connection < / pre > < / li >

                                                            < / ol >

                                                            < ol
                                                            start = "94"

                                                            class ="context-line" >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
                                                            return Connection(*args,
                                                                              **kwargs) < / pre > < span > ... < / span > < / li > < / ol >

                                                            < ol
                                                            start = '95'

                                                            class ="post-context" id="post140655233622600" >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
                                                            from . import connections as _orig_conn < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
                                                            if _orig_conn.Connection.__init__.__doc__ is not None: < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > Connect.__doc__ = _orig_conn.Connection.__init__.__doc__ < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
                                                            del _orig_conn < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

                                                            < / ol >

                                                            < / div >

                                                            < div

                                                            class ="commands" >

                                                            < a
                                                            href = "#"
                                                            onclick = "return varToggle(this, '140655233622600')" > < span > &  # x25b6;</span> Local vars</a>

                                                            < / div >
                                                            < table

                                                            class ="vars" id="v140655233622600" >

                                                            < thead >
                                                            < tr >
                                                            < th > Variable < / th >
                                                            < th > Value < / th >
                                                            < / tr >
                                                            < / thead >
                                                            < tbody >

                                                            < tr >
                                                            < td > Connection < / td >
                                                            < td

                                                            class ="code" > < pre > & lt; class &  # 39;pymysql.connections.Connection&#39;&gt;</pre></td>

                                                            < / tr >

                                                            < tr >
                                                            < td > args < / td >
                                                            < td

                                                            class ="code" > < pre > () < / pre > < / td >

                                                            < / tr >

                                                            < tr >
                                                            < td > kwargs < / td >
                                                            < td

                                                            class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
                                                            &  # 39;client_flag&#39;: 2,
                                                            &  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
                                                            1: &

                                                                lt;

                                                            class &  # 39;int&#39;&gt;,
                                                                2: & lt;

                                                                class &  # 39;int&#39;&gt;,
                                                                    3: & lt;

                                                                    class &  # 39;int&#39;&gt;,

                                                                        4: & lt;

                                                                    class &  # 39;float&#39;&gt;,

                                                                        5: & lt;

                                                                    class &  # 39;float&#39;&gt;,

                                                                        7: & lt;
                                                                    function
                                                                    convert_mysql_timestamp
                                                                    at
                                                                    0x7fecdb3d7bf8 & gt;,
                                                                    8: & lt;

                                                                    class &  # 39;int&#39;&gt;,
                                                                        9: & lt;

                                                                        class &  # 39;int&#39;&gt;,

                                                                            10: & lt;
                                                                        function
                                                                        convert_date
                                                                        at
                                                                        0x7fecdb3d7b70 & gt;,
                                                                        11: & lt;
                                                                        function
                                                                        typecast_time
                                                                        at
                                                                        0x7fecdd779bf8 & gt;,
                                                                        12: & lt;
                                                                        function
                                                                        convert_datetime
                                                                        at
                                                                        0x7fecdb3d79d8 & gt;,
                                                                        13: & lt;

                                                                        class &  # 39;int&#39;&gt;,
                                                                            15: & lt;
                                                                            function
                                                                            through
                                                                            at
                                                                            0x7fecdb3d7d08 & gt;,
                                                                            16: & lt;
                                                                            function
                                                                            through
                                                                            at
                                                                            0x7fecdb3d7d08 & gt;,
                                                                            246: & lt;
                                                                            function
                                                                            typecast_decimal
                                                                            at
                                                                            0x7fecdd779d08 & gt;,
                                                                            248: & lt;
                                                                            function
                                                                            convert_set
                                                                            at
                                                                            0x7fecdb3d7c80 & gt;,
                                                                            249: & lt;
                                                                            function
                                                                            through
                                                                            at
                                                                            0x7fecdb3d7d08 & gt;,
                                                                            250: & lt;
                                                                            function
                                                                            through
                                                                            at
                                                                            0x7fecdb3d7d08 & gt;,
                                                                            251: & lt;
                                                                            function
                                                                            through
                                                                            at
                                                                            0x7fecdb3d7d08 & gt;,
                                                                            252: & lt;
                                                                            function
                                                                            through
                                                                            at
                                                                            0x7fecdb3d7d08 & gt;,
                                                                            253: & lt;
                                                                            function
                                                                            through
                                                                            at
                                                                            0x7fecdb3d7d08 & gt;,
                                                                            254: & lt;
                                                                            function
                                                                            through
                                                                            at
                                                                            0x7fecdb3d7d08 & gt;,
                                                                            & lt;

                                                                            class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                                                                                & lt;

                                                                                class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                                                                                    & lt;

                                                                                class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                                                                                    & lt;

                                                                                class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                                                                                    & lt;

                                                                                class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                                                                                    & lt;

                                                                                class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                                                                                    & lt;

                                                                                class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                                    & lt;

                                                                                class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                                    & lt;

                                                                                class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                                    & lt;

                                                                                class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                                                                                    & lt;

                                                                                class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                                                                                    & lt;

                                                                                class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                                                                                    & lt;

                                                                                class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                                    & lt;

                                                                                class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                                                                                    & lt;

                                                                                class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                                                                                    & lt;

                                                                                class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                                                                                    & lt;

                                                                                class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

                                                                        &  # 39;db&#39;: &#39;main&#39;,
                                                                        &  # 39;host&#39;: &#39;127.0.0.1&#39;,
                                                                        &  # 39;passwd&#39;: &#39;123456&#39;,
                                                                        &  # 39;port&#39;: 3306,
                                                                        &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
                                                                        < / tr >

                                                                        < / tbody >
                                                                        < / table >

                                                                        < / li >

                                                                        < li

                                                                        class ="frame user" >

                                                                        < code > / usr / local / anaconda3 / lib / python3
                                                                        .6 / site - packages / pymysql / connections.py < / code > in < code > __init__ < / code >

                                                                        < div

                                                                        class ="context" id="c140655233624456" >

                                                                        < ol
                                                                        start = "318"

                                                                        class ="pre-context" id="pre140655233624456" >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                                                        if program_name: < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                                                                  self._connect_attrs[ & quot;
                                                                        program_name & quot;] = program_name < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                                                        if defer_connect: < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > self._sock = None < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > else: < / pre > < / li >

                                                                        < / ol >

                                                                        < ol
                                                                        start = "325"

                                                                        class ="context-line" >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                                                        self.connect() < / pre > < span > ... < / span > < / li > < / ol >

                                                                        < ol
                                                                        start = '326'

                                                                        class ="post-context" id="post140655233624456" >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >

                                                                        def _create_ssl_ctx(self, sslp):
                                                                            <

                                                                            / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                                                        if isinstance(sslp,
                                                                                      ssl.SSLContext): < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                                                        return sslp < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > ca = sslp.get( &  # 39;ca&#39;)</pre></li>

                                                                                                                                                       < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > capath = sslp.get( &  # 39;capath&#39;)</pre></li>

                                                                                                                                                           < / ol >

                                                                                                                                                               < / div >

                                                                                                                                                                   < div

                                                                        class ="commands" >

                                                                        < a
                                                                        href = "#"
                                                                        onclick = "return varToggle(this, '140655233624456')" > < span > &  # x25b6;</span> Local vars</a>

                                                                        < / div >
                                                                        < table

                                                                        class ="vars" id="v140655233624456" >

                                                                        < thead >
                                                                        < tr >
                                                                        < th > Variable < / th >
                                                                        < th > Value < / th >
                                                                        < / tr >
                                                                        < / thead >
                                                                        < tbody >

                                                                        < tr >
                                                                        < td > auth_plugin_map < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > autocommit < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > binary_prefix < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > bind_address < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > charset < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;utf8&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > client_flag < / td >
                                                                        < td

                                                                        class ="code" > < pre > 3842575 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > compress < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > connect_timeout < / td >
                                                                        < td

                                                                        class ="code" > < pre > 10 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > conv < / td >
                                                                        < td

                                                                        class ="code" > < pre > {0: &

                                                                            lt;
                                                                        function
                                                                        typecast_decimal
                                                                        at
                                                                        0x7fecdd779d08 & gt;,
                                                                        1: & lt;

                                                                        class &  # 39;int&#39;&gt;,
                                                                            2: & lt;

                                                                            class &  # 39;int&#39;&gt;,

                                                                        3: & lt;

                                                                        class &  # 39;int&#39;&gt;,

                                                                            4: & lt;

                                                                        class &  # 39;float&#39;&gt;,

                                                                            5: & lt;

                                                                        class &  # 39;float&#39;&gt;,

                                                                            7: & lt;
                                                                        function
                                                                        convert_mysql_timestamp
                                                                        at
                                                                        0x7fecdb3d7bf8 & gt;,
                                                                        8: & lt;

                                                                        class &  # 39;int&#39;&gt;,

                                                                            9: & lt;

                                                                        class &  # 39;int&#39;&gt;,

                                                                            10: & lt;
                                                                        function
                                                                        convert_date
                                                                        at
                                                                        0x7fecdb3d7b70 & gt;,
                                                                        11: & lt;
                                                                        function
                                                                        typecast_time
                                                                        at
                                                                        0x7fecdd779bf8 & gt;,
                                                                        12: & lt;
                                                                        function
                                                                        convert_datetime
                                                                        at
                                                                        0x7fecdb3d79d8 & gt;,
                                                                        13: & lt;

                                                                        class &  # 39;int&#39;&gt;,

                                                                            15: & lt;
                                                                        function
                                                                        through
                                                                        at
                                                                        0x7fecdb3d7d08 & gt;,
                                                                        16: & lt;
                                                                        function
                                                                        through
                                                                        at
                                                                        0x7fecdb3d7d08 & gt;,
                                                                        246: & lt;
                                                                        function
                                                                        typecast_decimal
                                                                        at
                                                                        0x7fecdd779d08 & gt;,
                                                                        248: & lt;
                                                                        function
                                                                        convert_set
                                                                        at
                                                                        0x7fecdb3d7c80 & gt;,
                                                                        249: & lt;
                                                                        function
                                                                        through
                                                                        at
                                                                        0x7fecdb3d7d08 & gt;,
                                                                        250: & lt;
                                                                        function
                                                                        through
                                                                        at
                                                                        0x7fecdb3d7d08 & gt;,
                                                                        251: & lt;
                                                                        function
                                                                        through
                                                                        at
                                                                        0x7fecdb3d7d08 & gt;,
                                                                        252: & lt;
                                                                        function
                                                                        through
                                                                        at
                                                                        0x7fecdb3d7d08 & gt;,
                                                                        253: & lt;
                                                                        function
                                                                        through
                                                                        at
                                                                        0x7fecdb3d7d08 & gt;,
                                                                        254: & lt;
                                                                        function
                                                                        through
                                                                        at
                                                                        0x7fecdb3d7d08 & gt;,
                                                                        & lt;

                                                                        class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,

                                                                            & lt;

                                                                        class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                                                                            & lt;

                                                                        class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                                                                            & lt;

                                                                        class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                                                                            & lt;

                                                                        class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                                                                            & lt;

                                                                        class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                                                                            & lt;

                                                                        class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                            & lt;

                                                                        class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                            & lt;

                                                                        class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                            & lt;

                                                                        class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                                                                            & lt;

                                                                        class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                                                                            & lt;

                                                                        class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                                                                            & lt;

                                                                        class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                            & lt;

                                                                        class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                                                                            & lt;

                                                                        class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                                                                            & lt;

                                                                        class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                                                                            & lt;

                                                                        class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;}</pre></td>

                                                                            < / tr >

                                                                        < tr >
                                                                        < td > cursorclass < / td >
                                                                        < td

                                                                        class ="code" > < pre > & lt; class &  # 39;pymysql.cursors.Cursor&#39;&gt;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > database < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;main&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > db < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;main&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > defer_connect < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > host < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > init_command < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > local_infile < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > max_allowed_packet < / td >
                                                                        < td

                                                                        class ="code" > < pre > 16777216 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > named_pipe < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > passwd < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;123456&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > password < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;123456&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > port < / td >
                                                                        < td

                                                                        class ="code" > < pre > 3306 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > program_name < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > read_default_file < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > read_default_group < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > read_timeout < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > self < / td >
                                                                        < td

                                                                        class ="code" > < pre > & lt;pymysql.connections.Connection object at 0x7fecd8586828 & gt; < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > server_public_key < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > sql_mode < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > ssl < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > unix_socket < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > use_unicode < / td >
                                                                        < td

                                                                        class ="code" > < pre > True < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > user < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;besttest&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > write_timeout < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < / tbody >
                                                                        < / table >

                                                                        < / li >

                                                                        < li

                                                                        class ="frame user" >

                                                                        < code > / usr / local / anaconda3 / lib / python3
                                                                        .6 / site - packages / pymysql / connections.py < / code > in < code > connect < / code >

                                                                        < div

                                                                        class ="context" id="c140655233623432" >

                                                                        < ol
                                                                        start = "623"

                                                                        class ="pre-context" id="pre140655233623432" >

                                                                        < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > 2003, < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > & quot;
                                                                        Can &  # 39;t connect to MySQL server on %r (%s)&quot; % (</pre></li>

                                                                        < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > self.host, e)) < / pre > < / li >

                                                                                                                                                                               < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # Keep original exception and traceback to investigate error.</pre></li>

                                                                                  < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > exc.original_exception = e < / pre > < / li >

                                                                                                                                                                                           < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > exc.traceback = traceback.format_exc() < / pre > < / li >

                                                                                                                                                                                                       < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
                                                                        if DEBUG: print(
                                                                            exc.traceback) < / pre > < / li >

                                                                                                         < / ol >

                                                                                                             < ol
                                                                        start = "630"

                                                                        class ="context-line" >

                                                                        < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
                                                                        raise exc < / pre > < span > ... < / span > < / li > < / ol >

                                                                        < ol
                                                                        start = '631'

                                                                        class ="post-context" id="post140655233623432" >

                                                                        < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # If e is neither DatabaseError or IOError, It&#39;s a bug.</pre></li>

                                                                        < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # But raising AssertionError hides original error.</pre></li>

                                                                        < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # So just reraise it.</pre></li>

                                                                        < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
                                                                        raise < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > < / pre > < / li >

                                                                        < / ol >

                                                                        < / div >

                                                                        < div

                                                                        class ="commands" >

                                                                        < a
                                                                        href = "#"
                                                                        onclick = "return varToggle(this, '140655233623432')" > < span > &  # x25b6;</span> Local vars</a>

                                                                        < / div >
                                                                        < table

                                                                        class ="vars" id="v140655233623432" >

                                                                        < thead >
                                                                        < tr >
                                                                        < th > Variable < / th >
                                                                        < th > Value < / th >
                                                                        < / tr >
                                                                        < / thead >
                                                                        < tbody >

                                                                        < tr >
                                                                        < td > exc < / td >
                                                                        < td

                                                                        class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > kwargs < / td >
                                                                        < td

                                                                        class ="code" > < pre > {} < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > self < / td >
                                                                        < td

                                                                        class ="code" > < pre > & lt;pymysql.connections.Connection object at 0x7fecd8586828 & gt; < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > sock < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < / tbody >
                                                                        < / table >

                                                                        < / li >

                                                                        < / ul >
                                                                        < / div >

                                                                        < form
                                                                        action = "http://dpaste.com/"
                                                                        name = "pasteform"
                                                                        id = "pasteform"
                                                                        method = "post" >

                                                                        < div
                                                                        id = "pastebinTraceback"

                                                                        class ="pastebin" >

                                                                        < input
                                                                        type = "hidden"
                                                                        name = "language"
                                                                        value = "PythonConsole" >
                                                                        < input
                                                                        type = "hidden"
                                                                        name = "title"
                                                                        value = "OperationalError at /api/user/add_stu" >
                                                                        < input
                                                                        type = "hidden"
                                                                        name = "source"
                                                                        value = "Django Dpaste Agent" >
                                                                        < input
                                                                        type = "hidden"
                                                                        name = "poster"
                                                                        value = "Django" >
                                                                        < textarea
                                                                        name = "content"
                                                                        id = "traceback_area"
                                                                        cols = "140"
                                                                        rows = "25" >
                                                                        Environment:

                                                                        Request
                                                                        Method: POST
                                                                        Request
                                                                        URL: http: // api.nnzhp.cn: 80 / api / user / add_stu

                                                                        Django
                                                                        Version: 1.10
                                                                        Python
                                                                        Version: 3.6
                                                                        .4
                                                                        Installed
                                                                        Applications:
                                                                        [ &  # 39;django.contrib.admin&#39;,
                                                                        &  # 39;django.contrib.auth&#39;,
                                                                        &  # 39;django.contrib.contenttypes&#39;,
                                                                        &  # 39;django.contrib.sessions&#39;,
                                                                        &  # 39;django.contrib.messages&#39;,
                                                                        &  # 39;django.contrib.staticfiles&#39;,
                                                                        &  # 39;app.apps.AppConfig&#39;]
                                                                        Installed
                                                                        Middleware:
                                                                        [ &  # 39;django.middleware.security.SecurityMiddleware&#39;,
                                                                        &  # 39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
                                                                        &  # 39;django.middleware.common.CommonMiddleware&#39;,
                                                                        &  # 39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
                                                                        &  # 39;django.contrib.auth.middleware.SessionAuthenticationMiddleware&#39;,
                                                                        &  # 39;django.contrib.messages.middleware.MessageMiddleware&#39;,
                                                                        &  # 39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]

                                                                        Traceback:

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/connections.py" in connect
                                                                        583. ** kwargs)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/socket.py" in create_connection
                                                                        724.
                                                                        raise err

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/socket.py" in create_connection
                                                                        713.
                                                                        sock.connect(sa)

                                                                        During
                                                                        handling
                                                                        of
                                                                        the
                                                                        above
                                                                        exception([Errno 111]
                                                                        Connection
                                                                        refused), another
                                                                        exception
                                                                        occurred:

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in ensure_connection
                                                                        199.
                                                                        self.connect()

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in connect
                                                                        171.
                                                                        self.connection = self.get_new_connection(
                                                                            conn_params)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/mysql/base.py" in get_new_connection
                                                                        265.
                                                                        conn = Database.connect(**conn_params)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/__init__.py" in Connect
                                                                        94.
                                                                        return Connection(*args, **kwargs)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/connections.py" in __init__
                                                                        325.
                                                                        self.connect()

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/connections.py" in connect
                                                                        630.
                                                                        raise exc

                                                                        The
                                                                        above
                                                                        exception((2003,
                                                                                   & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)) was the direct cause of the following exception:

                                                                                   File "/usr/local/anaconda3/lib/python3.6/site-packages/django/core/handlers/exception.py" in inner
                                                                                   39.             response = get_response(request)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/core/handlers/base.py" in _legacy_get_response
                                                                        249.
                                                                        response = self._get_response(request)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
                                                                        187.
                                                                        response = self.process_exception_by_middleware(
                                                                            e, request)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
                                                                        185.
                                                                        response = wrapped_callback(request,
                                                                                                    *callback_args,
                                                                                                    **callback_kwargs)

                                                                        File
                                                                        "/usr/local/choujiang/app/tools.py" in war
                                                                        47.
                                                                        return func(*args, **kwargs)

                                                                        File
                                                                        "/usr/local/choujiang/app/views.py" in add_stu
                                                                        148.
                                                                        if obj:

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/query.py" in __bool__
                                                                        260.
                                                                        self._fetch_all()

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/query.py" in _fetch_all
                                                                        1085.
                                                                        self._result_cache = list(self.iterator())

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/query.py" in __iter__
                                                                        54.
                                                                        results = compiler.execute_sql()

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/sql/compiler.py" in execute_sql
                                                                        824.
                                                                        sql, params = self.as_sql()

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/sql/compiler.py" in as_sql
                                                                        376.
                                                                        where, w_params = self.compile(
                                                                            self.where) if self.where is not None else (
                                                                            & quot; & quot;, [])

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/sql/compiler.py" in compile
                                                                        353.
                                                                        sql, params = node.as_sql(self, self.connection)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/sql/where.py" in as_sql
                                                                        79.
                                                                        sql, params = compiler.compile(child)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/sql/compiler.py" in compile
                                                                        353.
                                                                        sql, params = node.as_sql(self, self.connection)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/lookups.py" in as_sql
                                                                        155.
                                                                        lhs_sql, params = self.process_lhs(compiler,
                                                                                                           connection)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/lookups.py" in process_lhs
                                                                        148.
                                                                        db_type = self.lhs.output_field.db_type(
                                                                            connection=connection)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/fields/__init__.py" in db_type
                                                                        629.
                                                                        return connection.data_types[
                                                                                   self.get_internal_type()] % data

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/utils/functional.py" in __get__
                                                                        35.
                                                                        res = instance.__dict__[self.name] = self.func(
                                                                            instance)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/mysql/base.py" in data_types
                                                                        185.
                                                                        if self.features.supports_microsecond_precision:

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/utils/functional.py" in __get__
                                                                        35.
                                                                        res = instance.__dict__[self.name] = self.func(
                                                                            instance)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/mysql/features.py" in supports_microsecond_precision
                                                                        54.
                                                                        return self.connection.mysql_version & gt;= (5,
                                                                                                                     6,
                                                                                                                     4) and Database.version_info & gt;= (
                                                                        1, 2, 5)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/utils/functional.py" in __get__
                                                                        35.
                                                                        res = instance.__dict__[self.name] = self.func(
                                                                            instance)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/mysql/base.py" in mysql_version
                                                                        369.
                                                                        with self.temporary_connection() as cursor:

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/contextlib.py" in __enter__
                                                                        81.
                                                                        return next(self.gen)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in temporary_connection
                                                                        564.
                                                                        cursor = self.cursor()

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in cursor
                                                                        231.
                                                                        cursor = self.make_debug_cursor(self._cursor())

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in _cursor
                                                                        204.
                                                                        self.ensure_connection()

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in ensure_connection
                                                                        199.
                                                                        self.connect()

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/utils.py" in __exit__
                                                                        94.
                                                                        six.reraise(dj_exc_type, dj_exc_value,
                                                                                    traceback)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/utils/six.py" in reraise
                                                                        685.
                                                                        raise value.with_traceback(tb)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in ensure_connection
                                                                        199.
                                                                        self.connect()

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in connect
                                                                        171.
                                                                        self.connection = self.get_new_connection(
                                                                            conn_params)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/mysql/base.py" in get_new_connection
                                                                        265.
                                                                        conn = Database.connect(**conn_params)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/__init__.py" in Connect
                                                                        94.
                                                                        return Connection(*args, **kwargs)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/connections.py" in __init__
                                                                        325.
                                                                        self.connect()

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/connections.py" in connect
                                                                        630.
                                                                        raise exc

                                                                        Exception
                                                                        Type: OperationalError
                                                                        at / api / user / add_stu
                                                                        Exception
                                                                        Value: (2003,
                                                                                & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)
                                                                                < / textarea >
                                                                                < br > < br >
                                                                                < input type="submit" value="Share this traceback on a public website" >
                                                                                < / div >
                                                                                < / form >
                                                                                < / div >

                                                                                < div id="requestinfo" >
                                                                                < h2 > Request information < / h2 >

                                                                                < h3 id="user-info" > USER < / h3 >
                                                                                < p > AnonymousUser < / p >

                                                                                < h3 id="get-info" > GET < / h3 >

                                                                                < p > No GET data < / p >

                                                                                < h3 id="post-info" > POST < / h3 >

                                                                                < p > No POST data < / p >

                                                                                < h3 id="files-info" > FILES < / h3 >

                                                                                < p > No FILES data < / p >

                                                                                < h3 id="cookie-info" > COOKIES < / h3 >

                                                                                < p > No cookie data < / p >

                                                                                < h3 id="meta-info" > META < / h3 >
                                                                                < table

                                                                        class ="req" >

                                                                        < thead >
                                                                        < tr >
                                                                        < th > Variable < / th >
                                                                        < th > Value < / th >
                                                                        < / tr >
                                                                        < / thead >
                                                                        < tbody >

                                                                        < tr >
                                                                        < td > CONTENT_LENGTH < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;73&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CONTENT_TYPE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;text/plain&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DJANGO_SETTINGS_MODULE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;choujiang.settings&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > GATEWAY_INTERFACE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;CGI/1.1&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > G_BROKEN_FILENAMES < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;1&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HISTCONTROL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;ignoredups&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HISTSIZE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;3000&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HISTTIMEFORMAT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;%F %T &#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HOME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/root&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HOSTNAME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;VM_152_28_centos&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HTTP_ACCEPT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;*/*&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HTTP_ACCEPT_ENCODING < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;gzip, deflate&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HTTP_CONNECTION < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;close&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HTTP_HOST < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;api.nnzhp.cn:80&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HTTP_USER_AGENT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;python-requests/2.21.0&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HTTP_VIA < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;nginx&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HTTP_X_FORWARDED_FOR < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;117.75.179.13&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HTTP_X_REAL_IP < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;117.75.179.13&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LANG < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;zh_CN.UTF-8&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LESSOPEN < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;||/usr/bin/lesspipe.sh %s&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LOGNAME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;root&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LS_COLORS < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lz=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.bz=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.rar=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > MAIL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/var/spool/mail/root&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > PATH < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/usr/local/anaconda3/bin:/usr/local/anaconda3/bin:/usr/local/anaconda3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/opt/lampp/bin:/usr/local/jdk1.8.0_131/bin:/root/bin:/opt/lampp/bin:/usr/local/jdk1.8.0_131/bin:/usr/local/node/bin&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > PATH_INFO < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/api/user/add_stu&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > PROMPT_COMMAND < / td >
                                                                        < td

                                                                        class ="code" > < pre > ( &  # 39;history -a; printf &quot;\\033]0;%s@%s:%s\\007&quot; &quot;${USER}&quot; &quot;${HOSTNAME%%.*}&quot; &#39;
                                                                        &  # 39;&quot;${PWD/#$HOME/~}&quot;&#39;)</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > PWD < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/usr/local/choujiang/bin&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > QUERY_STRING < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > REMOTE_ADDR < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > REMOTE_HOST < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > REQUEST_METHOD < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;POST&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > RUN_MAIN < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;true&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SCRIPT_NAME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SERVER_NAME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;localhost.localdomain&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SERVER_PORT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;8000&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SERVER_PROTOCOL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;HTTP/1.0&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SERVER_SOFTWARE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;WSGIServer/0.2&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SHELL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/bin/bash&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SHLVL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;2&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SSH_CLIENT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;111.199.93.183 64257 22333&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SSH_CONNECTION < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;111.199.93.183 64257 10.139.152.28 22333&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SSH_TTY < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/dev/pts/1&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > TERM < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;xterm-256color&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > TZ < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;Asia/Shanghai&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > USER < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;root&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > VIRTUALENVWRAPPER_HOOK_DIR < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/root/.virtualenvs&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > VIRTUALENVWRAPPER_PROJECT_FILENAME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;.project&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > VIRTUALENVWRAPPER_SCRIPT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/usr/local/anaconda3/bin/virtualenvwrapper.sh&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > VIRTUALENVWRAPPER_WORKON_CD < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;1&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > WORKON_HOME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/root/.virtualenvs&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > _ < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/usr/bin/nohup&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > wsgi.errors < / td >
                                                                        < td

                                                                        class ="code" > < pre > & lt;_io.TextIOWrapper name= &  # 39;&lt;stderr&gt;&#39; mode=&#39;w&#39; encoding=&#39;UTF-8&#39;&gt;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > wsgi.file_wrapper < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > wsgi.input < / td >
                                                                        < td

                                                                        class ="code" > < pre > & lt;_io.BufferedReader name=6 & gt; < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > wsgi.multiprocess < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > wsgi.multithread < / td >
                                                                        < td

                                                                        class ="code" > < pre > True < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > wsgi.run_once < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > wsgi.url_scheme < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;http&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > wsgi.version < / td >
                                                                        < td

                                                                        class ="code" > < pre > (1, 0) < / pre > < / td >

                                                                        < / tr >

                                                                        < / tbody >
                                                                        < / table >

                                                                        < h3
                                                                        id = "settings-info" > Settings < / h3 >
                                                                        < h4 > Using
                                                                        settings
                                                                        module < code > choujiang.settings < / code > < / h4 >
                                                                        < table

                                                                        class ="req" >

                                                                        < thead >
                                                                        < tr >
                                                                        < th > Setting < / th >
                                                                        < th > Value < / th >
                                                                        < / tr >
                                                                        < / thead >
                                                                        < tbody >

                                                                        < tr >
                                                                        < td > ABSOLUTE_URL_OVERRIDES < / td >
                                                                        < td

                                                                        class ="code" > < pre > {} < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > ADMINS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > ALLOWED_HOSTS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[&  # 39;*&#39;]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > APPEND_SLASH < / td >
                                                                        < td

                                                                        class ="code" > < pre > True < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > AUTHENTICATION_BACKENDS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[&  # 39;django.contrib.auth.backends.ModelBackend&#39;]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > AUTH_PASSWORD_VALIDATORS < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > AUTH_USER_MODEL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;auth.User&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > BASE_DIR < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/usr/local/choujiang&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CACHES < / td >
                                                                        < td

                                                                        class ="code" > < pre > {&  # 39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CACHE_MIDDLEWARE_ALIAS < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;default&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CACHE_MIDDLEWARE_KEY_PREFIX < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CACHE_MIDDLEWARE_SECONDS < / td >
                                                                        < td

                                                                        class ="code" > < pre > 600 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CSRF_COOKIE_AGE < / td >
                                                                        < td

                                                                        class ="code" > < pre > 31449600 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CSRF_COOKIE_DOMAIN < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CSRF_COOKIE_HTTPONLY < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CSRF_COOKIE_NAME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;csrftoken&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CSRF_COOKIE_PATH < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CSRF_COOKIE_SECURE < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CSRF_FAILURE_VIEW < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django.views.csrf.csrf_failure&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CSRF_HEADER_NAME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;HTTP_X_CSRFTOKEN&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CSRF_TRUSTED_ORIGINS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DATABASES < / td >
                                                                        < td

                                                                        class ="code" > < pre > {&  # 39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,
                                                                        &  # 39;AUTOCOMMIT&#39;: True,
                                                                        &  # 39;CONN_MAX_AGE&#39;: 0,
                                                                        &  # 39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;,
                                                                        &  # 39;HOST&#39;: &#39;127.0.0.1&#39;,
                                                                        &  # 39;NAME&#39;: &#39;main&#39;,
                                                                        &  # 39;OPTIONS&#39;: {},
                                                                        &  # 39;PASSWORD&#39;: &#39;********************&#39;,
                                                                        &  # 39;PORT&#39;: &#39;3306&#39;,
                                                                        &  # 39;TEST&#39;: {&#39;CHARSET&#39;: None,
                                                                        &  # 39;COLLATION&#39;: None,
                                                                        &  # 39;MIRROR&#39;: None,
                                                                        &  # 39;NAME&#39;: None},
                                                                        &  # 39;TIME_ZONE&#39;: None,
                                                                        &  # 39;USER&#39;: &#39;besttest&#39;}}</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DATABASE_ROUTERS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DATA_UPLOAD_MAX_MEMORY_SIZE < / td >
                                                                        < td

                                                                        class ="code" > < pre > 2621440 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DATA_UPLOAD_MAX_NUMBER_FIELDS < / td >
                                                                        < td

                                                                        class ="code" > < pre > 1000 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DATETIME_FORMAT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;N j, Y, P&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DATETIME_INPUT_FORMATS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[&  # 39;%Y-%m-%d %H:%M:%S&#39;,
                                                                        &  # 39;%Y-%m-%d %H:%M:%S.%f&#39;,
                                                                        &  # 39;%Y-%m-%d %H:%M&#39;,
                                                                        &  # 39;%Y-%m-%d&#39;,
                                                                        &  # 39;%m/%d/%Y %H:%M:%S&#39;,
                                                                        &  # 39;%m/%d/%Y %H:%M:%S.%f&#39;,
                                                                        &  # 39;%m/%d/%Y %H:%M&#39;,
                                                                        &  # 39;%m/%d/%Y&#39;,
                                                                        &  # 39;%m/%d/%y %H:%M:%S&#39;,
                                                                        &  # 39;%m/%d/%y %H:%M:%S.%f&#39;,
                                                                        &  # 39;%m/%d/%y %H:%M&#39;,
                                                                        &  # 39;%m/%d/%y&#39;]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DATE_FORMAT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;N j, Y&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DATE_INPUT_FORMATS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[&  # 39;%Y-%m-%d&#39;,
                                                                        &  # 39;%m/%d/%Y&#39;,
                                                                        &  # 39;%m/%d/%y&#39;,
                                                                        &  # 39;%b %d %Y&#39;,
                                                                        &  # 39;%b %d, %Y&#39;,
                                                                        &  # 39;%d %b %Y&#39;,
                                                                        &  # 39;%d %b, %Y&#39;,
                                                                        &  # 39;%B %d %Y&#39;,
                                                                        &  # 39;%B %d, %Y&#39;,
                                                                        &  # 39;%d %B %Y&#39;,
                                                                        &  # 39;%d %B, %Y&#39;]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DEBUG < / td >
                                                                        < td

                                                                        class ="code" > < pre > True < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DEBUG_PROPAGATE_EXCEPTIONS < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DECIMAL_SEPARATOR < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;.&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DEFAULT_CHARSET < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;utf-8&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DEFAULT_CONTENT_TYPE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;text/html&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DEFAULT_EXCEPTION_REPORTER_FILTER < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DEFAULT_FILE_STORAGE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django.core.files.storage.FileSystemStorage&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DEFAULT_FROM_EMAIL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;webmaster@localhost&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DEFAULT_INDEX_TABLESPACE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DEFAULT_TABLESPACE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DISALLOWED_USER_AGENTS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_BACKEND < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_HOST < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;localhost&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_HOST_PASSWORD < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_HOST_USER < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_PORT < / td >
                                                                        < td

                                                                        class ="code" > < pre > 25 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_SSL_CERTFILE < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_SSL_KEYFILE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_SUBJECT_PREFIX < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;[Django] &#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_TIMEOUT < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_USE_SSL < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_USE_TLS < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EX_TIME < / td >
                                                                        < td

                                                                        class ="code" > < pre > 60000 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > FILE_CHARSET < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;utf-8&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > FILE_UPLOAD_DIRECTORY_PERMISSIONS < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > FILE_UPLOAD_HANDLERS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[&  # 39;django.core.files.uploadhandler.MemoryFileUploadHandler&#39;,
                                                                        &  # 39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > FILE_UPLOAD_MAX_MEMORY_SIZE < / td >
                                                                        < td

                                                                        class ="code" > < pre > 2621440 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > FILE_UPLOAD_PERMISSIONS < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > FILE_UPLOAD_TEMP_DIR < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > FIRST_DAY_OF_WEEK < / td >
                                                                        < td

                                                                        class ="code" > < pre > 0 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > FIXTURE_DIRS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > FORCE_SCRIPT_NAME < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > FORMAT_MODULE_PATH < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > IGNORABLE_404_URLS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > INSTALLED_APPS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[&  # 39;django.contrib.admin&#39;,
                                                                        &  # 39;django.contrib.auth&#39;,
                                                                        &  # 39;django.contrib.contenttypes&#39;,
                                                                        &  # 39;django.contrib.sessions&#39;,
                                                                        &  # 39;django.contrib.messages&#39;,
                                                                        &  # 39;django.contrib.staticfiles&#39;,
                                                                        &  # 39;app.apps.AppConfig&#39;]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > INTERNAL_IPS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LANGUAGES < / td >
                                                                        < td

                                                                        class ="code" > < pre >[( &  # 39;af&#39;, &#39;Afrikaans&#39;),
                                                                        ( &  # 39;ar&#39;, &#39;Arabic&#39;),
                                                                        ( &  # 39;ast&#39;, &#39;Asturian&#39;),
                                                                        ( &  # 39;az&#39;, &#39;Azerbaijani&#39;),
                                                                        ( &  # 39;bg&#39;, &#39;Bulgarian&#39;),
                                                                        ( &  # 39;be&#39;, &#39;Belarusian&#39;),
                                                                        ( &  # 39;bn&#39;, &#39;Bengali&#39;),
                                                                        ( &  # 39;br&#39;, &#39;Breton&#39;),
                                                                        ( &  # 39;bs&#39;, &#39;Bosnian&#39;),
                                                                        ( &  # 39;ca&#39;, &#39;Catalan&#39;),
                                                                        ( &  # 39;cs&#39;, &#39;Czech&#39;),
                                                                        ( &  # 39;cy&#39;, &#39;Welsh&#39;),
                                                                        ( &  # 39;da&#39;, &#39;Danish&#39;),
                                                                        ( &  # 39;de&#39;, &#39;German&#39;),
                                                                        ( &  # 39;dsb&#39;, &#39;Lower Sorbian&#39;),
                                                                        ( &  # 39;el&#39;, &#39;Greek&#39;),
                                                                        ( &  # 39;en&#39;, &#39;English&#39;),
                                                                        ( &  # 39;en-au&#39;, &#39;Australian English&#39;),
                                                                        ( &  # 39;en-gb&#39;, &#39;British English&#39;),
                                                                        ( &  # 39;eo&#39;, &#39;Esperanto&#39;),
                                                                        ( &  # 39;es&#39;, &#39;Spanish&#39;),
                                                                        ( &  # 39;es-ar&#39;, &#39;Argentinian Spanish&#39;),
                                                                        ( &  # 39;es-co&#39;, &#39;Colombian Spanish&#39;),
                                                                        ( &  # 39;es-mx&#39;, &#39;Mexican Spanish&#39;),
                                                                        ( &  # 39;es-ni&#39;, &#39;Nicaraguan Spanish&#39;),
                                                                        ( &  # 39;es-ve&#39;, &#39;Venezuelan Spanish&#39;),
                                                                        ( &  # 39;et&#39;, &#39;Estonian&#39;),
                                                                        ( &  # 39;eu&#39;, &#39;Basque&#39;),
                                                                        ( &  # 39;fa&#39;, &#39;Persian&#39;),
                                                                        ( &  # 39;fi&#39;, &#39;Finnish&#39;),
                                                                        ( &  # 39;fr&#39;, &#39;French&#39;),
                                                                        ( &  # 39;fy&#39;, &#39;Frisian&#39;),
                                                                        ( &  # 39;ga&#39;, &#39;Irish&#39;),
                                                                        ( &  # 39;gd&#39;, &#39;Scottish Gaelic&#39;),
                                                                        ( &  # 39;gl&#39;, &#39;Galician&#39;),
                                                                        ( &  # 39;he&#39;, &#39;Hebrew&#39;),
                                                                        ( &  # 39;hi&#39;, &#39;Hindi&#39;),
                                                                        ( &  # 39;hr&#39;, &#39;Croatian&#39;),
                                                                        ( &  # 39;hsb&#39;, &#39;Upper Sorbian&#39;),
                                                                        ( &  # 39;hu&#39;, &#39;Hungarian&#39;),
                                                                        ( &  # 39;ia&#39;, &#39;Interlingua&#39;),
                                                                        ( &  # 39;id&#39;, &#39;Indonesian&#39;),
                                                                        ( &  # 39;io&#39;, &#39;Ido&#39;),
                                                                        ( &  # 39;is&#39;, &#39;Icelandic&#39;),
                                                                        ( &  # 39;it&#39;, &#39;Italian&#39;),
                                                                        ( &  # 39;ja&#39;, &#39;Japanese&#39;),
                                                                        ( &  # 39;ka&#39;, &#39;Georgian&#39;),
                                                                        ( &  # 39;kk&#39;, &#39;Kazakh&#39;),
                                                                        ( &  # 39;km&#39;, &#39;Khmer&#39;),
                                                                        ( &  # 39;kn&#39;, &#39;Kannada&#39;),
                                                                        ( &  # 39;ko&#39;, &#39;Korean&#39;),
                                                                        ( &  # 39;lb&#39;, &#39;Luxembourgish&#39;),
                                                                        ( &  # 39;lt&#39;, &#39;Lithuanian&#39;),
                                                                        ( &  # 39;lv&#39;, &#39;Latvian&#39;),
                                                                        ( &  # 39;mk&#39;, &#39;Macedonian&#39;),
                                                                        ( &  # 39;ml&#39;, &#39;Malayalam&#39;),
                                                                        ( &  # 39;mn&#39;, &#39;Mongolian&#39;),
                                                                        ( &  # 39;mr&#39;, &#39;Marathi&#39;),
                                                                        ( &  # 39;my&#39;, &#39;Burmese&#39;),
                                                                        ( &  # 39;nb&#39;, &#39;Norwegian BokmÃ¥l&#39;),
                                                                        ( &  # 39;ne&#39;, &#39;Nepali&#39;),
                                                                        ( &  # 39;nl&#39;, &#39;Dutch&#39;),
                                                                        ( &  # 39;nn&#39;, &#39;Norwegian Nynorsk&#39;),
                                                                        ( &  # 39;os&#39;, &#39;Ossetic&#39;),
                                                                        ( &  # 39;pa&#39;, &#39;Punjabi&#39;),
                                                                        ( &  # 39;pl&#39;, &#39;Polish&#39;),
                                                                        ( &  # 39;pt&#39;, &#39;Portuguese&#39;),
                                                                        ( &  # 39;pt-br&#39;, &#39;Brazilian Portuguese&#39;),
                                                                        ( &  # 39;ro&#39;, &#39;Romanian&#39;),
                                                                        ( &  # 39;ru&#39;, &#39;Russian&#39;),
                                                                        ( &  # 39;sk&#39;, &#39;Slovak&#39;),
                                                                        ( &  # 39;sl&#39;, &#39;Slovenian&#39;),
                                                                        ( &  # 39;sq&#39;, &#39;Albanian&#39;),
                                                                        ( &  # 39;sr&#39;, &#39;Serbian&#39;),
                                                                        ( &  # 39;sr-latn&#39;, &#39;Serbian Latin&#39;),
                                                                        ( &  # 39;sv&#39;, &#39;Swedish&#39;),
                                                                        ( &  # 39;sw&#39;, &#39;Swahili&#39;),
                                                                        ( &  # 39;ta&#39;, &#39;Tamil&#39;),
                                                                        ( &  # 39;te&#39;, &#39;Telugu&#39;),
                                                                        ( &  # 39;th&#39;, &#39;Thai&#39;),
                                                                        ( &  # 39;tr&#39;, &#39;Turkish&#39;),
                                                                        ( &  # 39;tt&#39;, &#39;Tatar&#39;),
                                                                        ( &  # 39;udm&#39;, &#39;Udmurt&#39;),
                                                                        ( &  # 39;uk&#39;, &#39;Ukrainian&#39;),
                                                                        ( &  # 39;ur&#39;, &#39;Urdu&#39;),
                                                                        ( &  # 39;vi&#39;, &#39;Vietnamese&#39;),
                                                                        ( &  # 39;zh-hans&#39;, &#39;Simplified Chinese&#39;),
                                                                        ( &  # 39;zh-hant&#39;, &#39;Traditional Chinese&#39;)]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LANGUAGES_BIDI < / td >
                                                                        < td

                                                                        class ="code" > < pre >[&  # 39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LANGUAGE_CODE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;zh-Hans&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LANGUAGE_COOKIE_AGE < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LANGUAGE_COOKIE_DOMAIN < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LANGUAGE_COOKIE_NAME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django_language&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LANGUAGE_COOKIE_PATH < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LOCALE_PATHS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LOGGING < / td >
                                                                        < td

                                                                        class ="code" > < pre > {} < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LOGGING_CONFIG < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;logging.config.dictConfig&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LOGIN_REDIRECT_URL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/accounts/profile/&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LOGIN_URL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/accounts/login/&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LOGOUT_REDIRECT_URL < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > MANAGERS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > MEDIA_ROOT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/usr/local/choujiang/static/img&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > MEDIA_URL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/static/img/&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > MESSAGE_STORAGE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > MIDDLEWARE < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > MIDDLEWARE_CLASSES < / td >
                                                                        < td

                                                                        class ="code" > < pre >[&  # 39;django.middleware.security.SecurityMiddleware&#39;,
                                                                        &  # 39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
                                                                        &  # 39;django.middleware.common.CommonMiddleware&#39;,
                                                                        &  # 39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
                                                                        &  # 39;django.contrib.auth.middleware.SessionAuthenticationMiddleware&#39;,
                                                                        &  # 39;django.contrib.messages.middleware.MessageMiddleware&#39;,
                                                                        &  # 39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > MIGRATION_MODULES < / td >
                                                                        < td

                                                                        class ="code" > < pre > {} < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > MONTH_DAY_FORMAT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;F j&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > NUMBER_GROUPING < / td >
                                                                        < td

                                                                        class ="code" > < pre > 0 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > PASSWORD_HASHERS < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > PASSWORD_RESET_TIMEOUT_DAYS < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > PREPEND_WWW < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > REDIS_HOST < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > REDIS_PASSWD < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > REDIS_PORT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;6379&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > ROOT_URLCONF < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;choujiang.urls&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SECRET_KEY < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SECURE_BROWSER_XSS_FILTER < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SECURE_CONTENT_TYPE_NOSNIFF < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SECURE_HSTS_INCLUDE_SUBDOMAINS < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SECURE_HSTS_SECONDS < / td >
                                                                        < td

                                                                        class ="code" > < pre > 0 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SECURE_PROXY_SSL_HEADER < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SECURE_REDIRECT_EXEMPT < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SECURE_SSL_HOST < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SECURE_SSL_REDIRECT < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SERVER_EMAIL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;root@localhost&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_CACHE_ALIAS < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;default&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_COOKIE_AGE < / td >
                                                                        < td

                                                                        class ="code" > < pre > 1209600 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_COOKIE_DOMAIN < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_COOKIE_HTTPONLY < / td >
                                                                        < td

                                                                        class ="code" > < pre > True < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_COOKIE_NAME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;sessionid&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_COOKIE_PATH < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_COOKIE_SECURE < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_ENGINE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django.contrib.sessions.backends.db&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_EXPIRE_AT_BROWSER_CLOSE < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_FILE_PATH < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_SAVE_EVERY_REQUEST < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_SERIALIZER < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django.contrib.sessions.serializers.JSONSerializer&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SETTINGS_MODULE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;choujiang.settings&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SHORT_DATETIME_FORMAT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;m/d/Y P&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SHORT_DATE_FORMAT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;m/d/Y&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SIGNING_BACKEND < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django.core.signing.TimestampSigner&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SILENCED_SYSTEM_CHECKS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > STATICFILES_DIRS < / td >
                                                                        < td

                                                                        class ="code" > < pre > ( &  # 39;/usr/local/choujiang/static&#39;,)</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > STATICFILES_FINDERS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[&  # 39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,
                                                                        &  # 39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > STATICFILES_STORAGE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > STATIC_ROOT < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > STATIC_URL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/static/&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > TEMPLATES < / td >
                                                                        < td

                                                                        class ="code" > < pre >[{&  # 39;APP_DIRS&#39;: True,
                                                                        &  # 39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,
                                                                        &  # 39;DIRS&#39;: [&#39;/usr/local/choujiang/templates&#39;],
                                                                        &  # 39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.template.context_processors.debug&#39;,
                                                                        &  # 39;django.template.context_processors.request&#39;,
                                                                        &  # 39;django.contrib.auth.context_processors.auth&#39;,
                                                                        &  # 39;django.contrib.messages.context_processors.messages&#39;]}}]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > TEST_NON_SERIALIZED_APPS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > TEST_RUNNER < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django.test.runner.DiscoverRunner&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > THOUSAND_SEPARATOR < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;,&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > TIME_FORMAT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;P&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > TIME_INPUT_FORMATS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[&  # 39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > TIME_ZONE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;Asia/Shanghai&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > USE_ETAGS < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > USE_I18N < / td >
                                                                        < td

                                                                        class ="code" > < pre > True < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > USE_L10N < / td >
                                                                        < td

                                                                        class ="code" > < pre > True < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > USE_THOUSAND_SEPARATOR < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > USE_TZ < / td >
                                                                        < td

                                                                        class ="code" > < pre > True < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > USE_X_FORWARDED_HOST < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > USE_X_FORWARDED_PORT < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > WSGI_APPLICATION < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;choujiang.wsgi.application&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > X_FRAME_OPTIONS < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;SAMEORIGIN&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > YEAR_MONTH_FORMAT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;F Y&#39;</pre></td>

                                                                        < / tr >

                                                                        < / tbody >
                                                                        < / table >

                                                                        < / div >

                                                                        < div
                                                                        id = "explanation" >
                                                                        < p >
                                                                        You
                                                                        're seeing this error because you have <code>DEBUG = True</code> in your
                                                                        Django
                                                                        settings
                                                                        file.Change
                                                                        that
                                                                        to < code > False < / code >, and Django
                                                                        will
                                                                        display
                                                                        a
                                                                        standard
                                                                        page
                                                                        generated
                                                                        by
                                                                        the
                                                                        handler

                                                                C:\Users\Administrator\AppData\Local\Programs\Python\Python36 - 32\Scripts\python.exe
                                                                C: / Users / Administrator / PycharmProjects / untitled / 123
                                                                test / lianxi02.py

                                                                < !DOCTYPE
                                                                html >
                                                                < html
                                                                lang = "en" >
                                                                < head >
                                                                < meta
                                                                http - equiv = "content-type"
                                                                content = "text/html; charset=utf-8" >
                                                                < meta
                                                                name = "robots"
                                                                content = "NONE,NOARCHIVE" >
                                                                < title > OperationalError
                                                            at / api / user / add_stu < / title >
                                                                < style
                                                                type = "text/css" >
                                                                html * {padding: 0;
                                                            margin: 0;}
                                                            body * {padding: 10px 20px;}
                                                                body * * {padding: 0;}
                                                                body
                                                                {font: small sans - serif;}
                                                                body > div
                                                            {border - bottom: 1px solid  # ddd; }
                                                             h1 {font - weight: normal;}
                                                                h2
                                                                {margin - bottom: .8em;}
                                                            h2
                                                            span
                                                                {font - size: 80 %;
                                                                color:  # 666; font-weight:normal; }
                                                                h3
                                                            {margin: 1em 0 .5em 0;}
                                                                h4
                                                                {margin: 0 0 .5em 0;
                                                                font - weight: normal;}
                                                                code, pre
                                                                {font - size: 100 %;
                                                                white - space: pre - wrap;}
                                                                table
                                                                {border: 1px solid
                                                                 # ccc; border-collapse: collapse; width:100%; background:white; }
                                                                 tbody td, tbody th {vertical - align: top;
                                                            padding: 2
                                                            px
                                                            3
                                                                px;}
                                                                thead
                                                                th
                                                                {
                                                                    padding: 1px 6px 1px 3px;
                                                            background:  # fefefe; text-align:left;
                                                                font - weight:normal;
                                                                font - size: 11
                                                            px;
                                                                border: 1
                                                                px
                                                                solid  # ddd;
                                                                }
                                                            tbody
                                                                th
                                                            {width: 12em;
                                                                text - align: right;
                                                                color:  # 666; padding-right:.5em; }
                                                                table.vars
                                                            {margin: 5px 0 2px 40px;}
                                                            table.vars
                                                            td, table.req
                                                            td
                                                            {font - family: monospace;}
                                                            table
                                                            td.code
                                                            {width: 100 %;}
                                                            table
                                                            td.code
                                                            pre
                                                            {overflow: hidden;}
                                                            table.source
                                                            th
                                                            {color:  # 666; }
                                                                 table.source td {font - family: monospace;
                                                            white - space: pre;
                                                            border - bottom: 1
                                                            px
                                                            solid  # eee; }
                                                                ul.traceback
                                                            {list - style - type: none;
                                                                color:  # 222; }
                                                                ul.traceback
                                                                li.frame
                                                                {padding - bottom: 1em;
                                                            color:  # 666; }
                                                                ul.traceback
                                                                li.user
                                                                {background - color:  # e0e0e0; color:#000 }
                                                                     div.context {padding: 10px 0;
                                                                overflow: hidden;}
                                                                div.context
                                                                ol
                                                                {padding - left: 30px;
                                                                margin: 0
                                                                10
                                                                px;
                                                                list - style - position: inside;}
                                                                div.context
                                                                ol
                                                                li
                                                                {font - family: monospace;
                                                                white - space: pre;
                                                                color:  # 777; cursor:pointer; padding-left: 2px; }
                                                                div.context
                                                                ol
                                                                li
                                                                pre
                                                                {display: inline;}
                                                                div.context
                                                                ol.context - line
                                                                li
                                                                {
                                                                    color:  # 505050; background-color:#dfdfdf; padding: 3px 2px; }
                                                                        div.context ol.context - line li
                                                                    span {position: absolute;
                                                                right: 32
                                                                px;}
                                                                .user
                                                                div.context
                                                                ol.context - line
                                                                li
                                                                {background - color:  # bbb; color:#000; }
                                                                    .user
                                                                div.context
                                                                ol
                                                                li
                                                                {color:  # 666; }
                                                                     div.commands {margin - left: 40px;}
                                                                div.commands
                                                                a
                                                                {color:  # 555; text-decoration:none; }
                                                                    .user
                                                                div.commands
                                                                a
                                                                {color: black;}
                                                                # summary { background: #ffc; }
                                                                # summary h2 { font-weight: normal; color: #666; }
                                                                # explanation { background:#eee; }
                                                                # template, #template-not-exist { background:#f6f6f6; }
                                                                # template-not-exist ul { margin: 0 0 10px 20px; }
                                                                # template-not-exist .postmortem-section { margin-bottom: 3px; }
                                                                # unicode-hint { background:#eee; }
                                                                # traceback { background:#eee; }
                                                                # requestinfo { background:#f6f6f6; padding-left:120px; }
                                                                # summary table { border:none; background:transparent; }
                                                                # requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
                                                                # requestinfo h3 { margin-bottom:-1em; }
                                                            .error
                                                            {background:  # ffc; }
                                                                    .specific
                                                                {color:  # cc3300; font-weight:bold; }
                                                                     h2 span.commands {font - size: .7em;}
                                                            span.commands
                                                            a: link
                                                                {color:  # 5E5694;}
                                                                     pre.exception_value {font - family: sans - serif;
                                                                color:  # 666; font-size: 1.5em; margin: 10px 0 10px 0; }
                                                            .append - bottom
                                                            {margin - bottom: 10px;}
                                                            < / style >

                                                                    < script
                                                                type = "text/javascript" >
                                                                // < !--
                                                                function
                                                                getElementsByClassName(oElm, strTagName, strClassName)
                                                                {
                                                                // Written
                                                                by
                                                                Jonathan
                                                                Snook, http: // www.snook.ca / jon;
                                                                Add - ons
                                                            by
                                                                Robert
                                                                Nyman, http: // www.robertnyman.com
                                                                var
                                                                arrElements = (
                                                                            strTagName == "*" & & document.all)? document.all: \
                                                                    oElm.getElementsByTagName(strTagName);
                                                                var
                                                                arrReturnElements = new
                                                                Array();
                                                                strClassName = strClassName.replace( /\- / g, "\-");
                                                                var
                                                                oRegExp = new
                                                                RegExp("(^|\s)" + strClassName + "(\s|$)");
                                                                var
                                                                oElement;
                                                                for (var i=0; i < arrElements.length; i++){
                                                                    oElement = arrElements[i];
                                                                if (oRegExp.test(oElement.className)){
                                                                arrReturnElements.push(oElement);
                                                                }
                                                                }
                                                                return (arrReturnElements)
                                                                }
                                                                function
                                                                hideAll(elems)
                                                                {
                                                                for (var e = 0; e < elems.length; e++) {
                                                                    elems[e].style.display = 'none';
                                                                }

                                                        }
                                                            window.onload = function()
                                                        {
                                                        hideAll(getElementsByClassName(document, 'table', 'vars'));
                                                            hideAll(
                                                                getElementsByClassName(document, 'ol', 'pre-context'));
                                                            hideAll(
                                                                getElementsByClassName(document, 'ol', 'post-context'));
                                                            hideAll(
                                                                getElementsByClassName(document, 'div', 'pastebin'));

                                                        }
                                                        function
                                                        toggle()
                                                        {
                                                        for (var i = 0; i < arguments.length; i++) {
                                                            var e = document.getElementById(arguments[i]);
                                                        if (e) {
                                                        e.style.display = e.style.display == 'none' ? 'block': 'none';
                                                        }
                                                        }
                                                        return false;

                                                    }
                                                    function
                                                    varToggle(link, id)
                                                    {
                                                    toggle('v' + id);
                                                    var
                                                    s = link.getElementsByTagName('span')[0];
                                                    var
                                                    uarr = String.fromCharCode(0x25b6);
                                                    var
                                                    darr = String.fromCharCode(0x25bc);
                                                    s.textContent = s.textContent == uarr ? darr: uarr;
return false;

}
function
switchPastebinFriendly(link)
{
s1 = "Switch to copy-and-paste view";
s2 = "Switch back to interactive view";
link.textContent = link.textContent.trim() == s1 ? s2: s1;
toggle('browserTraceback', 'pastebinTraceback');
return false;
}
// -->
< / script >

    < / head >
        < body >
        < div
id = "summary" >
     < h1 > OperationalError
at / api / user / add_stu < / h1 >
                              < pre


class ="exception_value" > (2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre>
< table


class ="meta" >

< tr >
< th > Request
Method: < / th >
< td > POST < / td >
< / tr >
< tr >
< th > Request
URL: < / th >
< td > http: // api.nnzhp.cn: 80 / api / user / add_stu < / td >
< / tr >

< tr >
< th > Django
Version: < / th >
< td > 1.10 < / td >
< / tr >

< tr >
< th > Exception
Type: < / th >
< td > OperationalError < / td >
< / tr >

< tr >
< th > Exception
Value: < / th >
< td > < pre > (2003,
                & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                < / tr >

                < tr >
                < th > Exception Location: < / th >
                < td > / usr / local / anaconda3 / lib / python3.6 / site-packages / pymysql / connections.py in connect, line 630 < / td >
                < / tr >

                < tr >
                < th > Python Executable: < / th >
                < td > / usr / local / anaconda3 / bin / python < / td >
                < / tr >
                < tr >
                < th > Python Version: < / th >
                < td > 3.6.4 < / td >
                < / tr >
                < tr >
                < th > Python Path: < / th >
                < td > < pre >[&  # 39;/usr/local/choujiang&#39;,
                &  # 39;/usr/local/anaconda3/lib/python36.zip&#39;,
                &  # 39;/usr/local/anaconda3/lib/python3.6&#39;,
                &  # 39;/usr/local/anaconda3/lib/python3.6/lib-dynload&#39;,
                &  # 39;/usr/local/anaconda3/lib/python3.6/site-packages&#39;]</pre></td>
                < / tr >
                < tr >
                < th > Server time: < / th >
                < td > ææå­, 11 äºæ 2019 21:41:34 +0800 < / td >
                < / tr >
                < / table >
                < / div >

                < div id="traceback" >
                < h2 > Traceback < span


class ="commands" > < a href="#" onclick="return switchPastebinFriendly(this);" >


Switch
to
copy - and -paste
view < / a > < / span >
< / h2 >

< div
id = "browserTraceback" >
< ul


class ="traceback" >

< li


class ="frame user" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / pymysql / connections.py < / code > in < code > connect < / code >

< div


class ="context" id="c140655233622152" >

< ol
start = "576"


class ="pre-context" id="pre140655233622152" >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre > kwargs = {} < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
if self.bind_address is not None: < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
          kwargs[ &  # 39;source_address&#39;] = (self.bind_address, 0)</pre></li>

          < li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
while True: < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
try: < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre > sock = socket.create_connection( < / pre > < / li >

                                                                                                                         < li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre > (
self.host, self.port), self.connect_timeout, < / pre > < / li >

                                                           < / ol >

                                                               < ol
start = "583"


class ="context-line" >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
** kwargs) < / pre > < span > ... < / span > < / li > < / ol >

                                                          < ol
start = '584'


class ="post-context" id="post140655233622152" >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
break < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >                        except (
OSError, IOError) as e: < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
if e.errno == errno.EINTR: < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
continue < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
raise < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre > self.host_info = & quot;
socket % s: % d & quot; % (self.host, self.port) < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233622152')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233622152" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > exc < / td >
< td


class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
< / tr >

< tr >
< td > kwargs < / td >
< td


class ="code" > < pre > {} < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;pymysql.connections.Connection object at 0x7fecd8586828 & gt; < / pre > < / td >

< / tr >

< tr >
< td > sock < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame user" >

< code > / usr / local / anaconda3 / lib / python3
.6 / socket.py < / code > in < code > create_connection < / code >

< div


class ="context" id="c140655233625992" >

< ol
start = "717"


class ="pre-context" id="pre140655233625992" >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >        except error as _: < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > err = _ < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >
if sock is not None: < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > sock.close() < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >
if err is not None: < / pre > < / li >

< / ol >

< ol
start = "724"


class ="context-line" >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >
raise err < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '725'


class ="post-context" id="post140655233625992" >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > else: < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >
raise error( & quot;
getaddrinfo
returns
an
empty
list & quot;) < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >


def getaddrinfo(host, port, family=0, type=0, proto=0, flags=0): <

    / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > & quot; & quot; & quot;
Resolve
host and port
into
list
of
address
info
entries. < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233625992')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233625992" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > address < / td >
< td


class ="code" > < pre > ( &  # 39;127.0.0.1&#39;, 3306)</pre></td>
< / tr >

< tr >
< td > af < / td >
< td


class ="code" > < pre > & lt;AddressFamily.AF_INET: 2 & gt; <

    / pre > < / td >
< / tr >

< tr >
< td > canonname < / td >
< td


class ="code" > < pre > &  # 39;&#39;</pre></td>

< / tr >

< tr >
< td > err < / td >
< td


class ="code" > < pre > ConnectionRefusedError(111, &  # 39;Connection refused&#39;)</pre></td>
< / tr >

< tr >
< td > host < / td >
< td


class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

< / tr >

< tr >
< td > port < / td >
< td


class ="code" > < pre > 3306 < / pre > < / td >

< / tr >

< tr >
< td > proto < / td >
< td


class ="code" > < pre > 6 < / pre > < / td >

< / tr >

< tr >
< td > res < / td >
< td


class ="code" > < pre > ( & lt;AddressFamily.AF_INET: 2 & gt;,

& lt;
SocketKind.SOCK_STREAM: 1 & gt;,
6,
&  # 39;&#39;,
(&  # 39;127.0.0.1&#39;, 3306))</pre></td>
< / tr >

< tr >
< td > sa < / td >
< td


class ="code" > < pre > ( &  # 39;127.0.0.1&#39;, 3306)</pre></td>
< / tr >

< tr >
< td > sock < / td >
< td


class ="code" > < pre > & lt;socket.socket[closed] fd=-1, family=AddressFamily.AF_INET, type=2049, proto=6 & gt; < / pre > < / td >

< / tr >

< tr >
< td > socktype < / td >
< td


class ="code" > < pre > & lt;SocketKind.SOCK_STREAM: 1 & gt; <

    / pre > < / td >
< / tr >

< tr >
< td > source_address < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > timeout < / td >
< td


class ="code" > < pre > 10 < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame user" >

< code > / usr / local / anaconda3 / lib / python3
.6 / socket.py < / code > in < code > create_connection < / code >

< div


class ="context" id="c140655233623624" >

< ol
start = "706"


class ="pre-context" id="pre140655233623624" >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > sock = None < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >
try: < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > sock = socket(af, socktype,
                                                                                        proto) < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >
if timeout is not _GLOBAL_DEFAULT_TIMEOUT: < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > sock.settimeout(timeout) < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >
if source_address: < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > sock.bind(source_address) < / pre > < / li >

< / ol >

< ol
start = "713"


class ="context-line" >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >
sock.connect(sa) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '714'


class ="post-context" id="post140655233623624" >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >  # Break explicitly a reference cycle</pre></li>

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > err = None < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >
return sock < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >        except error as _: < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > err = _ < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233623624')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233623624" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > address < / td >
< td


class ="code" > < pre > ( &  # 39;127.0.0.1&#39;, 3306)</pre></td>
< / tr >

< tr >
< td > af < / td >
< td


class ="code" > < pre > & lt;AddressFamily.AF_INET: 2 & gt; <

    / pre > < / td >
< / tr >

< tr >
< td > canonname < / td >
< td


class ="code" > < pre > &  # 39;&#39;</pre></td>

< / tr >

< tr >
< td > err < / td >
< td


class ="code" > < pre > ConnectionRefusedError(111, &  # 39;Connection refused&#39;)</pre></td>
< / tr >

< tr >
< td > host < / td >
< td


class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

< / tr >

< tr >
< td > port < / td >
< td


class ="code" > < pre > 3306 < / pre > < / td >

< / tr >

< tr >
< td > proto < / td >
< td


class ="code" > < pre > 6 < / pre > < / td >

< / tr >

< tr >
< td > res < / td >
< td


class ="code" > < pre > ( & lt;AddressFamily.AF_INET: 2 & gt;,

& lt;
SocketKind.SOCK_STREAM: 1 & gt;,
6,
&  # 39;&#39;,
(&  # 39;127.0.0.1&#39;, 3306))</pre></td>
< / tr >

< tr >
< td > sa < / td >
< td


class ="code" > < pre > ( &  # 39;127.0.0.1&#39;, 3306)</pre></td>
< / tr >

< tr >
< td > sock < / td >
< td


class ="code" > < pre > & lt;socket.socket[closed] fd=-1, family=AddressFamily.AF_INET, type=2049, proto=6 & gt; < / pre > < / td >

< / tr >

< tr >
< td > socktype < / td >
< td


class ="code" > < pre > & lt;SocketKind.SOCK_STREAM: 1 & gt; <

    / pre > < / td >
< / tr >

< tr >
< td > source_address < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > timeout < / td >
< td


class ="code" > < pre > 10 < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li > < h3 >

During
handling
of
the
above
exception([Errno 111]
Connection
refused), another
exception
occurred:

< / h3 > < / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / base / base.py < / code > in < code > ensure_connection < / code >

< div


class ="context" id="c140655233626056" >

< ol
start = "192"


class ="pre-context" id="pre140655233626056" >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >


def ensure_connection(self): <

    / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > Guarantees
that
a
connection
to
the
database is established. < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
if self.connection is None: < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
with self.wrap_database_errors: < / pre > < / li >

< / ol >

< ol
start = "199"


class ="context-line" >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
self.connect() < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '200'


class ="post-context" id="post140655233626056" >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >  # ##### Backend-specific wrappers for PEP-249 connection methods #####</pre></li>

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >


def _cursor(self): <

/ pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > self.ensure_connection() < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
with self.wrap_database_errors: < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233626056')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233626056" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / base / base.py < / code > in < code > connect < / code >

< div


class ="context" id="c140655233624904" >

< ol
start = "164"


class ="pre-context" id="pre140655233624904" >

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >  # Reset parameters defining when to close the connection</pre></li>

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > max_age =
self.settings_dict[ &  # 39;CONN_MAX_AGE&#39;]</pre></li>

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.close_at = None if max_age is None else time.time() + max_age < / pre > < / li >

                                                                                                                                                           < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.closed_in_transaction = False < / pre > < / li >

                                                                                                                           < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.errors_occurred = False < / pre > < / li >

                                                                                                                     < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >  # Establish the connection</pre></li>

          < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > conn_params = self.get_connection_params() < / pre > < / li >

                                                                                                                                   < / ol >

                                                                                                                                       < ol
start = "171"


class ="context-line" >

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >
self.connection = self.get_new_connection(conn_params) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '172'


class ="post-context" id="post140655233624904" >

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.set_autocommit(
    self.settings_dict[ &  # 39;AUTOCOMMIT&#39;])</pre></li>

    < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.init_connection_state() < / pre > < / li >

                                                                                                                     < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > connection_created.send(sender=self.__class__,
                                                                                                  connection=self) < / pre > < / li >

                                                                                                                                 < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > < / pre > < / li >

                                                                                        < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.run_on_commit = [] < / pre > < / li >

                                                                                                                < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > < / pre > < / li >

                                                                                        < / ol >

                                                                                            < / div >

                                                                                                < div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233624904')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233624904" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > conn_params < / td >
< td


class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
&  # 39;client_flag&#39;: 2,
&  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
1: &


    lt;


class &  # 39;int&#39;&gt;,
    2: & lt;

    class &  # 39;int&#39;&gt;,
        3: & lt;

        class &  # 39;int&#39;&gt;,

            4: & lt;

        class &  # 39;float&#39;&gt;,

            5: & lt;

        class &  # 39;float&#39;&gt;,

            7: & lt;
        function
        convert_mysql_timestamp
        at
        0x7fecdb3d7bf8 & gt;,
        8: & lt;

        class &  # 39;int&#39;&gt;,
            9: & lt;

            class &  # 39;int&#39;&gt;,

                10: & lt;

            function
            convert_date
            at
            0x7fecdb3d7b70 & gt;,
            11: & lt;
            function
            typecast_time
            at
            0x7fecdd779bf8 & gt;,
            12: & lt;
            function
            convert_datetime
            at
            0x7fecdb3d79d8 & gt;,
            13: & lt;

            class &  # 39;int&#39;&gt;,
                15: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                16: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                246: & lt;
                function
                typecast_decimal
                at
                0x7fecdd779d08 & gt;,
                248: & lt;
                function
                convert_set
                at
                0x7fecdb3d7c80 & gt;,
                249: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                250: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                251: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                252: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                253: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                254: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                & lt;

                class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                    & lt;

                    class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                        & lt;

                    class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                        & lt;

                    class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                        & lt;

                    class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                        & lt;

                    class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                        & lt;

                    class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                        & lt;

                    class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                        & lt;

                    class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                        & lt;

                    class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                        & lt;

                    class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                        & lt;

                    class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                        & lt;

                    class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

            &  # 39;db&#39;: &#39;main&#39;,
            &  # 39;host&#39;: &#39;127.0.0.1&#39;,
            &  # 39;passwd&#39;: &#39;123456&#39;,
            &  # 39;port&#39;: 3306,
            &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
            < / tr >

            < tr >
            < td > max_age < / td >
            < td

            class ="code" > < pre > 0 < / pre > < / td >

            < / tr >

            < tr >
            < td > self < / td >
            < td

            class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

            < / tr >

            < / tbody >
            < / table >

            < / li >

            < li

            class ="frame django" >

            < code > / usr / local / anaconda3 / lib / python3
            .6 / site - packages / django / db / backends / mysql / base.py < / code > in < code > get_new_connection < / code >

            < div

            class ="context" id="c140655233624776" >

            < ol
            start = "258"

            class ="pre-context" id="pre140655233624776" >

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >  # We need the number of potentially affected rows after an</pre></li>

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >  # &quot;UPDATE&quot;, not the number of changed rows.</pre></li>

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
            kwargs[ &  # 39;client_flag&#39;] = CLIENT.FOUND_ROWS</pre></li>

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > kwargs.update(
                settings_dict[ &  # 39;OPTIONS&#39;])</pre></li>

                < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >

        return kwargs < / pre > < / li >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > < / pre > < / li >

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >

        def get_new_connection(self, conn_params):
                <

                / pre > < / li >

            < / ol >

            < ol
            start = "265"

            class ="context-line" >

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
            conn = Database.connect(**conn_params) < / pre > < span > ... < / span > < / li > < / ol >

            < ol
            start = '266'

            class ="post-context" id="post140655233624776" >

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > conn.encoders[SafeText] =
        conn.encoders[six.text_type] < / pre > < / li >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > conn.encoders[SafeBytes] =
        conn.encoders[bytes] < / pre > < / li >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
        return conn < / pre > < / li >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > < / pre > < / li >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >

        def init_connection_state(self):
            <

            / pre > < / li >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
        if self.features.is_sql_auto_is_null_enabled: < / pre > < / li >

        < / ol >

        < / div >

        < div

        class ="commands" >

        < a
        href = "#"
        onclick = "return varToggle(this, '140655233624776')" > < span > &  # x25b6;</span> Local vars</a>

        < / div >
        < table

        class ="vars" id="v140655233624776" >

            < thead >
        < tr >
        < th > Variable < / th >
        < th > Value < / th >
        < / tr >
        < / thead >
        < tbody >

            < tr >
        < td > conn_params < / td >
        < td

        class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
        &  # 39;client_flag&#39;: 2,
        &  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
            1: &

                lt;

            class &  # 39;int&#39;&gt;,
                2: & lt;

                class &  # 39;int&#39;&gt;,
                    3: & lt;

                    class &  # 39;int&#39;&gt;,

                        4: & lt;

                    class &  # 39;float&#39;&gt;,

                        5: & lt;

                    class &  # 39;float&#39;&gt;,

                        7: & lt;
                    function
                    convert_mysql_timestamp
                    at
                    0x7fecdb3d7bf8 & gt;,
                    8: & lt;

                    class &  # 39;int&#39;&gt;,
                        9: & lt;

                        class &  # 39;int&#39;&gt;,

                            10: & lt;
                        function
                        convert_date
                        at
                        0x7fecdb3d7b70 & gt;,
                        11: & lt;
                        function
                        typecast_time
                        at
                        0x7fecdd779bf8 & gt;,
                        12: & lt;
                        function
                        convert_datetime
                        at
                        0x7fecdb3d79d8 & gt;,
                        13: & lt;

                        class &  # 39;int&#39;&gt;,
                            15: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            16: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            246: & lt;
                            function
                            typecast_decimal
                            at
                            0x7fecdd779d08 & gt;,
                            248: & lt;
                            function
                            convert_set
                            at
                            0x7fecdb3d7c80 & gt;,
                            249: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            250: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            251: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            252: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            253: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            254: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            & lt;

                            class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                                & lt;

                                class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                                    & lt;

                                class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                                    & lt;

                                class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                                    & lt;

                                class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                                    & lt;

                                class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                                    & lt;

                                class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                                    & lt;

                                class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                                    & lt;

                                class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                                    & lt;

                                class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                                    & lt;

                                class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                                    & lt;

                                class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                                    & lt;

                                class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

                        &  # 39;db&#39;: &#39;main&#39;,
                        &  # 39;host&#39;: &#39;127.0.0.1&#39;,
                        &  # 39;passwd&#39;: &#39;123456&#39;,
                        &  # 39;port&#39;: 3306,
                        &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
                        < / tr >

                        < tr >
                        < td > self < / td >
                        < td

                        class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                        < / tr >

                        < / tbody >
                        < / table >

                        < / li >

                        < li

                        class ="frame user" >

                        < code > / usr / local / anaconda3 / lib / python3
                        .6 / site - packages / pymysql / __init__.py < / code > in < code > Connect < / code >

                        < div

                        class ="context" id="c140655233622600" >

                        < ol
                        start = "87"

                        class ="pre-context" id="pre140655233622600" >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >

                        def Connect(*args, **kwargs):
                            <

                            / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > Connect
                        to
                        the
                        database;
                        see
                        connections.Connection.__init__()
                        for < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > more
                        information. < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
                        from .connections import Connection < / pre > < / li >

                        < / ol >

                        < ol
                        start = "94"

                        class ="context-line" >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
                        return Connection(*args, **kwargs) < / pre > < span > ... < / span > < / li > < / ol >

                        < ol
                        start = '95'

                        class ="post-context" id="post140655233622600" >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
                        from . import connections as _orig_conn < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
                        if _orig_conn.Connection.__init__.__doc__ is not None: < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > Connect.__doc__ = _orig_conn.Connection.__init__.__doc__ < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
                        del _orig_conn < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

                        < / ol >

                        < / div >

                        < div

                        class ="commands" >

                        < a
                        href = "#"
                        onclick = "return varToggle(this, '140655233622600')" > < span > &  # x25b6;</span> Local vars</a>

                        < / div >
                        < table

                        class ="vars" id="v140655233622600" >

                        < thead >
                        < tr >
                        < th > Variable < / th >
                        < th > Value < / th >
                        < / tr >
                        < / thead >
                        < tbody >

                        < tr >
                        < td > Connection < / td >
                        < td

                        class ="code" > < pre > & lt; class &  # 39;pymysql.connections.Connection&#39;&gt;</pre></td>

                        < / tr >

                        < tr >
                        < td > args < / td >
                        < td

                        class ="code" > < pre > () < / pre > < / td >

                        < / tr >

                        < tr >
                        < td > kwargs < / td >
                        < td

                        class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
                        &  # 39;client_flag&#39;: 2,
                        &  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
                        1: &

                            lt;

                        class &  # 39;int&#39;&gt;,
                            2: & lt;

                            class &  # 39;int&#39;&gt;,
                                3: & lt;

                                class &  # 39;int&#39;&gt;,

                                    4: & lt;

                                class &  # 39;float&#39;&gt;,

                                    5: & lt;

                                class &  # 39;float&#39;&gt;,

                                    7: & lt;
                                function
                                convert_mysql_timestamp
                                at
                                0x7fecdb3d7bf8 & gt;,
                                8: & lt;

                                class &  # 39;int&#39;&gt;,
                                    9: & lt;

                                    class &  # 39;int&#39;&gt;,

                                        10: & lt;
                                    function
                                    convert_date
                                    at
                                    0x7fecdb3d7b70 & gt;,
                                    11: & lt;
                                    function
                                    typecast_time
                                    at
                                    0x7fecdd779bf8 & gt;,
                                    12: & lt;
                                    function
                                    convert_datetime
                                    at
                                    0x7fecdb3d79d8 & gt;,
                                    13: & lt;

                                    class &  # 39;int&#39;&gt;,
                                        15: & lt;
                                        function
                                        through
                                        at
                                        0x7fecdb3d7d08 & gt;,
                                        16: & lt;
                                        function
                                        through
                                        at
                                        0x7fecdb3d7d08 & gt;,
                                        246: & lt;
                                        function
                                        typecast_decimal
                                        at
                                        0x7fecdd779d08 & gt;,
                                        248: & lt;
                                        function
                                        convert_set
                                        at
                                        0x7fecdb3d7c80 & gt;,
                                        249: & lt;
                                        function
                                        through
                                        at
                                        0x7fecdb3d7d08 & gt;,
                                        250: & lt;
                                        function
                                        through
                                        at
                                        0x7fecdb3d7d08 & gt;,
                                        251: & lt;
                                        function
                                        through
                                        at
                                        0x7fecdb3d7d08 & gt;,
                                        252: & lt;
                                        function
                                        through
                                        at
                                        0x7fecdb3d7d08 & gt;,
                                        253: & lt;
                                        function
                                        through
                                        at
                                        0x7fecdb3d7d08 & gt;,
                                        254: & lt;
                                        function
                                        through
                                        at
                                        0x7fecdb3d7d08 & gt;,
                                        & lt;

                                        class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                                            & lt;

                                            class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                                                & lt;

                                            class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                                                & lt;

                                            class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                                                & lt;

                                            class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                                                & lt;

                                            class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                                                & lt;

                                            class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                & lt;

                                            class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                & lt;

                                            class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                & lt;

                                            class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                                                & lt;

                                            class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                                                & lt;

                                            class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                                                & lt;

                                            class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                & lt;

                                            class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                                                & lt;

                                            class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                                                & lt;

                                            class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                                                & lt;

                                            class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

                                    &  # 39;db&#39;: &#39;main&#39;,
                                    &  # 39;host&#39;: &#39;127.0.0.1&#39;,
                                    &  # 39;passwd&#39;: &#39;123456&#39;,
                                    &  # 39;port&#39;: 3306,
                                    &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame user" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / pymysql / connections.py < / code > in < code > __init__ < / code >

                                    < div

                                    class ="context" id="c140655233624456" >

                                    < ol
                                    start = "318"

                                    class ="pre-context" id="pre140655233624456" >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                    if program_name: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                              self._connect_attrs[ & quot;
                                    program_name & quot;] = program_name < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                    if defer_connect: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > self._sock = None < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > else: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "325"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                    self.connect() < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '326'

                                    class ="post-context" id="post140655233624456" >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >

                                    def _create_ssl_ctx(self, sslp):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                    if isinstance(sslp, ssl.SSLContext): < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                    return sslp < / pre > < / li >

                                < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > ca = sslp.get( &  # 39;ca&#39;)</pre></li>

                                                                                                                   < li
                                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > capath = sslp.get( &  # 39;capath&#39;)</pre></li>

                                                                                                                       < / ol >

                                                                                                                           < / div >

                                                                                                                               < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655233624456')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655233624456" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > auth_plugin_map < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > autocommit < / td >
                                    < td

                                    class ="code" > < pre > False < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > binary_prefix < / td >
                                    < td

                                    class ="code" > < pre > False < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > bind_address < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > charset < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;utf8&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > client_flag < / td >
                                < td

                                    class ="code" > < pre > 3842575 < / pre > < / td >

                                    < / tr >

                                < tr >
                                < td > compress < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > connect_timeout < / td >
                                    < td

                                    class ="code" > < pre > 10 < / pre > < / td >

                                    < / tr >

                                < tr >
                                < td > conv < / td >
                                    < td

                                    class ="code" > < pre > {0: &

                                        lt;
                                    function
                                    typecast_decimal
                                    at
                                0x7fecdd779d08 & gt;,
                                    1: & lt;

                                    class &  # 39;int&#39;&gt;,
                                        2: & lt;

                                        class &  # 39;int&#39;&gt;,

                                    3: & lt;

                                    class &  # 39;int&#39;&gt;,

                                        4: & lt;

                                    class &  # 39;float&#39;&gt;,

                                        5: & lt;

                                    class &  # 39;float&#39;&gt;,

                                        7: & lt;
                                    function
                                    convert_mysql_timestamp
                                    at
                                    0x7fecdb3d7bf8 & gt;,
                                    8: & lt;

                                    class &  # 39;int&#39;&gt;,

                                        9: & lt;

                                    class &  # 39;int&#39;&gt;,

                                        10: & lt;
                                    function
                                    convert_date
                                    at
                                    0x7fecdb3d7b70 & gt;,
                                    11: & lt;
                                    function
                                    typecast_time
                                    at
                                0x7fecdd779bf8 & gt;,
                                12: & lt;
                                    function
                                    convert_datetime
                                    at
                                    0x7fecdb3d79d8 & gt;,
                                    13: & lt;

                                    class &  # 39;int&#39;&gt;,

                                        15: & lt;
                                    function
                                    through
                                    at
                                    0x7fecdb3d7d08 & gt;,
                                    16: & lt;
                                    function
                                    through
                                    at
                                    0x7fecdb3d7d08 & gt;,
                                    246: & lt;
                                    function
                                    typecast_decimal
                                    at
                                    0x7fecdd779d08 & gt;,
                                    248: & lt;
                                    function
                                convert_set
                                at
                                    0x7fecdb3d7c80 & gt;,
                                    249: & lt;
                                    function
                                    through
                                    at
                                    0x7fecdb3d7d08 & gt;,
                                    250: & lt;
                                    function
                                    through
                                    at
                                    0x7fecdb3d7d08 & gt;,
                                    251: & lt;
                                    function
                                    through
                                    at
                                    0x7fecdb3d7d08 & gt;,
                                    252: & lt;
                                function
                                through
                                    at
                                    0x7fecdb3d7d08 & gt;,
                                253: & lt;
                                    function
                                through
                                at
                                0x7fecdb3d7d08 & gt;,
                                254: & lt;
                                function
                                through
                                    at
                                0x7fecdb3d7d08 & gt;,
                                    & lt;

                                class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,

                                    & lt;

                                class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                                    & lt;

                                class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                                        & lt;

                                    class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                                        & lt;

                                    class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                                        & lt;

                                    class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                                        & lt;

                                    class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                        & lt;

                                    class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                        & lt;

                                    class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                        & lt;

                                    class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                                        & lt;

                                    class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                                        & lt;

                                    class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                                        & lt;

                                    class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                        & lt;

                                    class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                                        & lt;

                                    class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                                        & lt;

                                class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                                        & lt;

                                    class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;}</pre></td>

                                        < / tr >

                                    < tr >
                                    < td > cursorclass < / td >
                                    < td

                                    class ="code" > < pre > & lt; class &  # 39;pymysql.cursors.Cursor&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > database < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;main&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > db < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;main&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > defer_connect < / td >
                                    < td

                                    class ="code" > < pre > False < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > host < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > init_command < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > local_infile < / td >
                                    < td

                                    class ="code" > < pre > False < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > max_allowed_packet < / td >
                                < td

                                    class ="code" > < pre > 16777216 < / pre > < / td >

                                    < / tr >

                                    < tr >
                                < td > named_pipe < / td >
                                < td

                                class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > passwd < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;123456&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > password < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;123456&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > port < / td >
                                    < td

                                    class ="code" > < pre > 3306 < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > program_name < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > read_default_file < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > read_default_group < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > read_timeout < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                class ="code" > < pre > & lt;pymysql.connections.Connection object at 0x7fecd8586828 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > server_public_key < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > sql_mode < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                < / tr >

                                < tr >
                                    < td > ssl < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                < tr >
                                < td > unix_socket < / td >
                                    < td

                                class ="code" > < pre > None < / pre > < / td >

                                < / tr >

                                    < tr >
                                    < td > use_unicode < / td >
                                    < td

                                    class ="code" > < pre > True < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > user < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;besttest&#39;</pre></td>

                                < / tr >

                                < tr >
                                    < td > write_timeout < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame user" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / pymysql / connections.py < / code > in < code > connect < / code >

                                    < div

                                    class ="context" id="c140655233623432" >

                                    < ol
                                    start = "623"

                                    class ="pre-context" id="pre140655233623432" >

                                    < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > 2003, < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > & quot;
                                    Can &  # 39;t connect to MySQL server on %r (%s)&quot; % (</pre></li>

                                    < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > self.host, e)) < / pre > < / li >

                                                                                                                                           < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # Keep original exception and traceback to investigate error.</pre></li>

                                              < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > exc.original_exception = e < / pre > < / li >

                                                                                                                                                       < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > exc.traceback = traceback.format_exc() < / pre > < / li >

                                                                                                                                                                   < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
                                    if DEBUG: print(exc.traceback) < / pre > < / li >

                                                                                 < / ol >

                                                                                     < ol
                                    start = "630"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
                                    raise exc < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '631'

                                    class ="post-context" id="post140655233623432" >

                                    < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # If e is neither DatabaseError or IOError, It&#39;s a bug.</pre></li>

                                    < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # But raising AssertionError hides original error.</pre></li>

                                    < li
                                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # So just reraise it.</pre></li>

                                    < li
                                onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
                                    raise < / pre > < / li >

                                    < li
                                onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655233623432')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655233623432" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > exc < / td >
                                    < td

                                    class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                    < / tr >

                                    < tr >
                                    < td > kwargs < / td >
                                    < td

                                    class ="code" > < pre > {} < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;pymysql.connections.Connection object at 0x7fecd8586828 & gt; < / pre > < / td >

                                    < / tr >

                                < tr >
                                < td > sock < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li > < h3 >

                                    The
                                    above
                                    exception((2003,
                                               "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)"))
                                    was
                                    the
                                    direct
                                    cause
                                    of
                                    the
                                    following
                                    exception:

                                    < / h3 > < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / core / handlers / exception.py < / code > in < code > inner < / code >

                                    < div

                                    class ="context" id="c140655221039496" >

                                    < ol
                                    start = "32"

                                    class ="pre-context" id="pre140655221039496" >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > This
                                    decorator is automatically
                                    applied
                                    to
                                    all
                                    middleware
                                    to
                                    ensure
                                    that < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > no
                                middleware
                                    leaks
                                    an
                                    exception and that
                                    the
                                    next
                                    middleware in the
                                    stack < / pre > < / li >

                                < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > can
                                    rely
                                on
                                getting
                                    a
                                    response
                                    instead
                                    of
                                    an
                                    exception. < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >

                                    @wraps(get_response, assigned=available_attrs(get_response))

                                    < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >

                                    def inner(request):
                                        <

                                        / pre > < / li >

                                < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >
                                    try: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "39"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >
                                    response = get_response(request) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '40'

                                    class ="post-context" id="post140655221039496" >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >        except Exception as exc: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > response = response_for_exception(
                                        request, exc) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >
                                    return response < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >
                                    return inner < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221039496')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221039496" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                < tbody >

                                    < tr >
                                    < td > exc < / td >
                                    < td

                                    class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                    < / tr >

                                    < tr >
                                    < td > get_response < / td >
                                    < td

                                    class ="code" > < pre > & lt;bound method BaseHandler._legacy_get_response of & lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fecdb570f98 & gt; & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > request < / td >
                                    < td

                                    class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / core / handlers / base.py < / code > in < code > _legacy_get_response < / code >

                                    < div

                                    class ="context" id="c140655221039944" >

                                    < ol
                                    start = "242"

                                    class ="pre-context" id="pre140655221039944" >

                                    < li
                                    onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >  # Apply request middleware</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
                                    for middleware_method in self._request_middleware: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre > response = middleware_method(
                                        request) < / pre > < / li >

                                    < li
                                onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
                                    if response: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
                                    break < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
                                    if response is None: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "249"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
                                    response = self._get_response(
                                        request) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '250'

                                    class ="post-context" id="post140655221039944" >

                                    < li
                                    onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
                                    return response < / pre > < / li >

                                < / ol >

                                < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221039944')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221039944" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > middleware_method < / td >
                                    < td

                                    class ="code" > < pre > & lt;bound method MessageMiddleware.process_request of & lt;django.contrib.messages.middleware.MessageMiddleware object at 0x7fecd972bdd8 & gt; & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > request < / td >
                                    < td

                                    class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > response < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fecdb570f98 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / core / handlers / base.py < / code > in < code > _get_response < / code >

                                    < div

                                    class ="context" id="c140655221039304" >

                                    < ol
                                    start = "180"

                                class ="pre-context" id="pre140655221039304" >

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
                                    break < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
                                    if response is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > wrapped_callback = self.make_view_atomic(
                                        callback) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
                                    try: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > response = wrapped_callback(
                                        request, *callback_args, **callback_kwargs) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >            except Exception as e: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "187"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
                                    response = self.process_exception_by_middleware(e,
                                                                                    request) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '188'

                                    class ="post-context" id="post140655221039304" >

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >  # Complain if the view returned None (a common error).</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
                                    if response is None: < / pre > < / li >

                                < li
                                onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
                                    if isinstance(callback, types.FunctionType):  # FBV</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > view_name = callback.__name__ < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > else:  # CBV</pre></li>

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221039304')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221039304" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > callback < / td >
                                    < td

                                    class ="code" > < pre > & lt;function method_check.& lt;locals & gt;.decorator.& lt;locals & gt;.war at 0x7fecd9819268 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > callback_args < / td >
                                    < td

                                    class ="code" > < pre > () < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > callback_kwargs < / td >
                                    < td

                                    class ="code" > < pre > {} < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > request < / td >
                                    < td

                                    class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > resolver < / td >
                                    < td

                                    class ="code" > < pre > & lt;RegexURLResolver &  # 39;choujiang.urls&#39; (None:None) ^/&gt;</pre></td>

                                    < / tr >

                                < tr >
                                    < td > resolver_match < / td >
                                    < td

                                    class ="code" > < pre > ResolverMatch(func=app.tools.war, args=(), kwargs={}, url_name=None, app_names=[], namespaces=[]) < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > response < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                < / tr >

                                < tr >
                                    < td > self < / td >
                                < td

                                class ="code" > < pre > & lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fecdb570f98 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > wrapped_callback < / td >
                                    < td

                                    class ="code" > < pre > & lt;function method_check.& lt;locals & gt;.decorator.& lt;locals & gt;.war at 0x7fecd9819268 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / core / handlers / base.py < / code > in < code > _get_response < / code >

                                    < div

                                    class ="context" id="c140655221039368" >

                                    < ol
                                    start = "178"

                                    class ="pre-context" id="pre140655221039368" >

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre > response = middleware_method(
                                        request, callback, callback_args, callback_kwargs) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
                                    if response: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
                                    break < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
                                    if response is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre > wrapped_callback = self.make_view_atomic(
                                        callback) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
                                    try: < / pre > < / li >

                                < / ol >

                                < ol
                                start = "185"

                                class ="context-line" >

                                < li
                                onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
                                response = wrapped_callback(request, *callback_args,
                                                            **callback_kwargs) < / pre > < span > ... < / span > < / li > < / ol >

                                < ol
                                start = '186'

                                class ="post-context" id="post140655221039368" >

                                < li
                                onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >            except Exception as e: < / pre > < / li >

                                < li
                                onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre > response = self.process_exception_by_middleware(
                                    e, request) < / pre > < / li >

                                < li
                                onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre > < / pre > < / li >

                                < li
                                onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >  # Complain if the view returned None (a common error).</pre></li>

                                < li
                                onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
                                if response is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
                                    if isinstance(callback, types.FunctionType):  # FBV</pre></li>

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                onclick = "return varToggle(this, '140655221039368')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221039368" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > callback < / td >
                                    < td

                                    class ="code" > < pre > & lt;function method_check.& lt;locals & gt;.decorator.& lt;locals & gt;.war at 0x7fecd9819268 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > callback_args < / td >
                                    < td

                                    class ="code" > < pre > () < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > callback_kwargs < / td >
                                    < td

                                    class ="code" > < pre > {} < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > request < / td >
                                    < td

                                    class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > resolver < / td >
                                    < td

                                    class ="code" > < pre > & lt;RegexURLResolver &  # 39;choujiang.urls&#39; (None:None) ^/&gt;</pre></td>

                                < / tr >

                                    < tr >
                                    < td > resolver_match < / td >
                                    < td

                                class ="code" > < pre > ResolverMatch(func=app.tools.war, args=(), kwargs={}, url_name=None, app_names=[], namespaces=[]) < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > response < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fecdb570f98 & gt; < / pre > < / td >

                                    < / tr >

                                < tr >
                                < td > wrapped_callback < / td >
                                < td

                                class ="code" > < pre > & lt;function method_check.& lt;locals & gt;.decorator.& lt;locals & gt;.war at 0x7fecd9819268 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame user" >

                                    < code > / usr / local / choujiang / app / tools.py < / code > in < code > war < / code >

                                    < div

                                    class ="context" id="c140655221040200" >

                                    < ol
                                    start = "40"

                                    class ="pre-context" id="pre140655221040200" >

                                    < li
                                    onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >

                                def method_check(method):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >

                                    def decorator(func):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >

                                    def war(*args, **kwargs):
                                        <

                                        / pre > < / li >

                                    < li
                                onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre > req =
                                    args[0] < / pre > < / li >

                                < li
                                    onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >
                                    if req.method == method: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "47"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >
                                    return func(*args, **kwargs) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '48'

                                class ="post-context" id="post140655221040200" >

                                    < li
                                    onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre > else: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >
                                    return my_res(msg.METHOD_ERR) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >
                                    return war < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >
                                    return decorator < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >

                                    def replace_img_url(host, img_list):
                                        <

                                        / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221040200')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221040200" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                < tr >
                                < td > args < / td >
                                < td

                                    class ="code" > < pre > ( & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;,)</pre></td>
                                                                                <

                                    / tr >

                                      < tr >
                                      < td > func < / td >
                                                      < td

                                    class ="code" > < pre > & lt;function add_stu at 0x7fecd98191e0 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > kwargs < / td >
                                    < td

                                    class ="code" > < pre > {} < / pre > < / td >

                                < / tr >

                                    < tr >
                                    < td > method < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;POST&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > req < / td >
                                    < td

                                    class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame user" >

                                    < code > / usr / local / choujiang / app / views.py < / code > in < code > add_stu < / code >

                                    < div

                                    class ="context" id="c140655221042632" >

                                    < ol
                                    start = "141"

                                    class ="pre-context" id="pre140655221042632" >

                                    < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > age = str(
                                        body.get( &  # 39;age&#39;,18)).strip()</pre></li>

                                        < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > addr = body.get( &  # 39;addr&#39;,&#39;&#39;).strip()</pre></li>

                                                                                                                     < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre >
                                    if name and grade and phone: < / pre > < / li >

                                                                               < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre >
                                    if len(phone) != 11: < / pre > < / li >

                                                                       < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > res = { &  # 39;error_code&#39;:5,&#39;msg&#39;:&quot;ææºå·é¿åº¦ä¸æ­£ç¡®&quot;}</pre></li>

                                                                                                                    < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre >
                                    return my_res(res) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > obj = models.Student.objects.filter(
                                        phone=phone) < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "148"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre >
                                    if obj: < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '149'

                                    class ="post-context" id="post140655221042632" >

                                    < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > res = { &  # 39;error_code&#39;: 5, &#39;msg&#39;: &quot;ææºå·å·²ç»å­å¨&quot;}</pre></li>

                                                                                                                    < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre >
                                    return my_res(res) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > models.Student.objects.create(
                                        **body) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > res = msg.SUCCESS < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > else: < / pre > < / li >

                                < li
                                onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > res = msg.NOT_NULL < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221042632')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221042632" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > addr < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > age < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;18&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                < td > body < / td >
                                    < td

                                    class ="code" > < pre > {&  # 39;grade&#39;: &#39;äºç­&#39;, &#39;name&#39;: &#39;æå&#39;, &#39;phone&#39;: &#39;13516659123&#39;}</pre></td>
                                    < / tr >

                                    < tr >
                                    < td > grade < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;äºç­&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > name < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;æå&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > obj < / td >
                                    < td

                                    class ="code" > < pre > Error in formatting: OperationalError: (2003,
                                                                                                    & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                                                                                    < / tr >

                                                                                                    < tr >
                                                                                                    < td > phone < / td >
                                                                                                    < td

                                    class ="code" > < pre > &  # 39;13516659123&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > req < / td >
                                    < td

                                class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > sex < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;&#39;</pre></td>

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / models / query.py < / code > in < code > __bool__ < / code >

                                    < div

                                    class ="context" id="c140655221040840" >

                                    < ol
                                    start = "253"

                                    class ="pre-context" id="pre140655221040840" >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > 3.
                                    self.iterator() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > - Responsible
                                    for turning the rows into model objects.< / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > self._fetch_all() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >
                                    return iter(self._result_cache) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >

                                    def __bool__(self):
                                        <

                                        / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "260"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >
                                    self._fetch_all() < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '261'

                                    class ="post-context" id="post140655221040840" >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >
                                    return bool(self._result_cache) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >

                                    def __nonzero__(self):  # Python 2 compatibility</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >
                                    return type(self).__bool__(self) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >

                                    def __getitem__(self, k):
                                        <

                                        / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221040840')" > < span > &  # x25b6;</span> Local vars</a>

                                < / div >
                                    < table

                                    class ="vars" id="v140655221040840" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > Error in formatting: OperationalError: (2003,
                                                                                                    & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                                                                                    < / tr >

                                                                                                    < / tbody >
                                                                                                    < / table >

                                                                                                    < / li >

                                                                                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / models / query.py < / code > in < code > _fetch_all < / code >

                                    < div

                                    class ="context" id="c140655286580232" >

                                    < ol
                                    start = "1078"

                                    class ="pre-context" id="pre140655286580232" >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > clone._fields = self._fields < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > < / pre > < / li >

                                < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > clone.__dict__.update(
                                        kwargs) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >
                                    return clone < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >

                                    def _fetch_all(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >
                                    if self._result_cache is None: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "1085"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >
                                    self._result_cache = list(
                                        self.iterator()) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '1086'

                                    class ="post-context" id="post140655286580232" >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >
                                    if self._prefetch_related_lookups and not self._prefetch_done: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > self._prefetch_related_objects() < / pre > < / li >

                                < li
                                onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >

                                    def _next_is_sticky(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > Indicates
                                    that
                                    the
                                    next
                                    filter
                                    call and the
                                    one
                                    following
                                    that
                                    should < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655286580232')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655286580232" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > Error in formatting: OperationalError: (2003,
                                                                                                    & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                                                                                    < / tr >

                                                                                                    < / tbody >
                                                                                                    < / table >

                                                                                                    < / li >

                                                                                                    < li

                                class ="frame django" >

                                < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / models / query.py < / code > in < code > __iter__ < / code >

                                    < div

                                    class ="context" id="c140655221127816" >

                                    < ol
                                    start = "47"

                                    class ="pre-context" id="pre140655221127816" >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >

                                    def __iter__(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > queryset = self.queryset < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > db = queryset.db < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > compiler = queryset.query.get_compiler(
                                        using=db) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >  # Execute the query. This will also fill compiler.select, klass_info,</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >  # and annotations.</pre></li>

                                    < / ol >

                                    < ol
                                    start = "54"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >
                                    results = compiler.execute_sql() < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '55'

                                    class ="post-context" id="post140655221127816" >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > select, klass_info, annotation_col_map = (
                                                                                                                                                       compiler.select,
                                                                                                                                                       compiler.klass_info,
                                                                                                                                                       < / pre > < / li >

                                                                                                                                                       < li onclick="toggle('pre140655221127816', 'post140655221127816')" > < pre > compiler.annotation_col_map) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >
                                    if klass_info is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >
                                return < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > model_cls =
                                klass_info[ &  # 39;model&#39;]</pre></li>

                                < li
                                onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > select_fields =
                                klass_info[ &  # 39;select_fields&#39;]</pre></li>

                                < / ol >

                                        < / div >

                                            < div

                                class ="commands" >

                                < a
                                href = "#"
                                onclick = "return varToggle(this, '140655221127816')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221127816" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > compiler < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > db < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;default&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > queryset < / td >
                                    < td

                                    class ="code" > < pre > Error in formatting: OperationalError: (2003,
                                                                                                    & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                                                                                    < / tr >

                                                                                                    < tr >
                                                                                                    < td > self < / td >
                                                                                                    < td

                                    class ="code" > < pre > & lt;django.db.models.query.ModelIterable object at 0x7fecd8586518 & gt; < / pre > < / td >

                                < / tr >

                                < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                < code > / usr / local / anaconda3 / lib / python3
                                .6 / site - packages / django / db / models / sql / compiler.py < / code > in < code > execute_sql < / code >

                                < div

                                    class ="context" id="c140655221127432" >

                                    < ol
                                    start = "817"

                                    class ="pre-context" id="pre140655221127432" >

                                    < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > subclasses
                                    such as InsertQuery).It &  # 39;s possible, however, that no query</pre></li>

                                                         < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > is needed, as the
                                    filters
                                    describe
                                    an
                                    empty
                                    set.In
                                    that
                                    case, None is < / pre > < / li >

                                                                < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > returned, to
                                    avoid
                                    any
                                    unnecessary
                                    database
                                    interaction. < / pre > < / li >

                                                               < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                                                                                                                                    < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
                                    if not result_type: < / pre > < / li >

                                                                      < li
                                onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > result_type = NO_RESULTS < / pre > < / li >

                                                                                                                                                 < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
                                    try: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "824"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
                                sql, params = self.as_sql() < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '825'

                                    class ="post-context" id="post140655221127432" >

                                    < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
                                    if not sql: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
                                    raise EmptyResultSet < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >        except EmptyResultSet: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
                                    if result_type == MULTI: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
                                    return iter([]) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > else: < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221127432')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221127432" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > result_type < / td >
                                    < td

                                    class ="code" > < pre > &  # 39;multi&#39;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / models / sql / compiler.py < / code > in < code > as_sql < / code >

                                    < div

                                    class ="context" id="c140655221125192" >

                                    < ol
                                    start = "369"

                                    class ="pre-context" id="pre140655221125192" >

                                    < li
                                onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > extra_select, order_by, group_by = self.pre_sql_setup() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > distinct_fields = self.get_distinct() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre >  # This must come after &#39;select&#39;, &#39;ordering&#39;, and &#39;distinct&#39; -- see</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre >  # docstring of get_from_clause() for details.</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > from_, f_params = self.get_from_clause() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "376"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre >
                                    where, w_params = self.compile(self.where) if self.where is not None else (
                                                                                                                  & quot; & quot;, []) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '377'

                                    class ="post-context" id="post140655221125192" >

                                    < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > having, h_params = self.compile(
                                        self.having) if self.having is not None else (
                                                                                         & quot; & quot;, []) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > params = [] < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > result = [ &  # 39;SELECT&#39;]</pre></li>

                                                                                                                       < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > < / pre > < / li >

                                                                                                                            < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre >
                                    if self.query.distinct: < / pre > < / li >

                                                                          < li
                                    onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > result.append(
                                        self.connection.ops.distinct_sql(distinct_fields)) < / pre > < / li >

                                                                                                         < / ol >

                                                                                                             < / div >

                                                                                                                 < div

                                    class ="commands" >

                                < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221125192')" > < span > &  # x25b6;</span> Local vars</a>

                                < / div >
                                < table

                                class ="vars" id="v140655221125192" >

                                < thead >
                                < tr >
                                < th > Variable < / th >
                                    < th > Value < / th >
                                < / tr >
                                < / thead >
                                    < tbody >

                                    < tr >
                                    < td > distinct_fields < / td >
                                < td

                                class ="code" > < pre >[] < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > extra_select < / td >
                                    < td

                                    class ="code" > < pre >[] < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > f_params < / td >
                                    < td

                                class ="code" > < pre >[] < / pre > < / td >

                                < / tr >

                                < tr >
                                < td > from_ < / td >
                                < td

                                class ="code" > < pre >[&  # 39;`app_student`&#39;]</pre></td>
                                < / tr >

                                < tr >
                                < td > group_by < / td >
                                < td

                                class ="code" > < pre >[] < / pre > < / td >

                                < / tr >

                                < tr >
                                < td > order_by < / td >
                                < td

                                class ="code" > < pre >[] < / pre > < / td >

                                < / tr >

                                < tr >
                                < td > refcounts_before < / td >
                                < td

                                class ="code" > < pre > {&  # 39;app_student&#39;: 1}</pre></td>
                                < / tr >

                                < tr >
                                < td > self < / td >
                                < td

                                class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

                                < / tr >

                                < tr >
                                < td > subquery < / td >
                                < td

                                class ="code" > < pre > False < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > with_col_aliases < / td >
                                    < td

                                    class ="code" > < pre > False < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > with_limits < / td >
                                    < td

                                    class ="code" > < pre > True < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                class ="frame django" >

                                < code > / usr / local / anaconda3 / lib / python3
                                .6 / site - packages / django / db / models / sql / compiler.py < / code > in < code > compile < / code >

                                    < div

                                    class ="context" id="c140655221127304" >

                                    < ol
                                    start = "346"

                                    class ="pre-context" id="pre140655221127304" >

                                    < li
                                    onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
                                    return r < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >

                                    def compile(self, node, select_format=False):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > vendor_impl = getattr(
                                        node, &  # 39;as_&#39; + self.connection.vendor, None)</pre></li>

                                                                                                                            < li
                                onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
                                    if vendor_impl: < / pre > < / li >

                                                                  < li
                                onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > sql, params = vendor_impl(
                                    self, self.connection) < / pre > < / li >

                                                                         < li
                                onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > else: < / pre > < / li >

                                                                                                                              < / ol >

                                                                                                                                  < ol
                                    start = "353"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
                                    sql, params = node.as_sql(self,
                                                              self.connection) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                start = '354'

                                class ="post-context" id="post140655221127304" >

                                < li
                                onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
                                if select_format and not self.subquery: < / pre > < / li >

                                < li
                                onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
                                return node.output_field.select_format(self, sql, params) < / pre > < / li >

                                < li
                                onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
                                return sql, params < / pre > < / li >

                                < li
                                onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > < / pre > < / li >

                                < li
                                onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >

                                def as_sql(self, with_limits=True, with_col_aliases=False, subquery=False):
                                    <

                                    / pre > < / li >

                                < li
                                onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                < / ol >

                                < / div >

                                < div

                                class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221127304')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221127304" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > node < / td >
                                    < td

                                    class ="code" > < pre > & lt;WhereNode: (AND
                                                                             : & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt;) & gt; <

                                        / pre > < / td >
                                    < / tr >

                                    < tr >
                                    < td > select_format < / td >
                                    < td

                                    class ="code" > < pre > False < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > vendor_impl < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                            < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                            .6 / site - packages / django / db / models / sql / where.py < / code > in < code > as_sql < / code >

                            < div

                            class ="context" id="c140655221126664" >

                            < ol
                            start = "72"

                            class ="pre-context" id="pre140655221126664" >

                            < li
                                    onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >
                            if self.connector == AND: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > full_needed, empty_needed = len(
                                        self.children), 1 < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > else: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > full_needed, empty_needed = 1, len(
                                        self.children) < / pre > < / li >

                            < li
                            onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > < / pre > < / li >

                            < li
                            onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >
                            for child in self.children: < / pre > < / li >

                            < li
                            onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >
                            try: < / pre > < / li >

                            < / ol >

                            < ol
                            start = "79"

                            class ="context-line" >

                            < li
                            onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >
                            sql, params = compiler.compile(
                                child) < / pre > < span > ... < / span > < / li > < / ol >

                            < ol
                            start = '80'

                            class ="post-context" id="post140655221126664" >

                            < li
                            onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >            except EmptyResultSet: < / pre > < / li >

                            < li
                            onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > empty_needed -= 1 < / pre > < / li >

                            < li
                            onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > else: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >
                                    if sql: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > result.append(
                                        sql) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > result_params.extend(
                                        params) < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221126664')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221126664" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > child < / td >
                            < td

                                    class ="code" > < pre > & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt; < / pre > < / td >

                            < / tr >

                            < tr >
                                    < td > compiler < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > connection < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                            < / tr >

                                    < tr >
                                    < td > empty_needed < / td >
                                    < td

                                    class ="code" > < pre > 1 < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > full_needed < / td >
                            < td

                            class ="code" > < pre > 1 < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > result < / td >
                                    < td

                                    class ="code" > < pre >[] < / pre > < / td >

                            < / tr >

                            < tr >
                            < td > result_params < / td >
                                    < td

                            class ="code" > < pre >[] < / pre > < / td >

                            < / tr >

                                    < tr >
                                    < td > self < / td >
                            < td

                            class ="code" > < pre > & lt;WhereNode: (AND
                                                                             : & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt;) & gt; <

                                        / pre > < / td >
                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                        class ="frame django" >

                        < code > / usr / local / anaconda3 / lib / python3
                        .6 / site - packages / django / db / models / sql / compiler.py < / code > in < code > compile < / code >

                        < div

                        class ="context" id="c140655221126344" >

                        < ol
                        start = "346"

                        class ="pre-context" id="pre140655221126344" >

                        < li
                        onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
                        return r < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >

                        def compile(self, node, select_format=False):
                            <

                            / pre > < / li >

                        < li
                        onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > vendor_impl = getattr(
                                        node, &  # 39;as_&#39; + self.connection.vendor, None)</pre></li>

                                                                                                                < li
                        onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
                                    if vendor_impl: < / pre > < / li >

                                                                  < li
                                    onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > sql, params = vendor_impl(
                                        self, self.connection) < / pre > < / li >

                                                                             < li
                        onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > else: < / pre > < / li >

                                                                                                                      < / ol >

                                                                                                                                      < ol
                                    start = "353"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
                                    sql, params = node.as_sql(self,
                                                              self.connection) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '354'

                        class ="post-context" id="post140655221126344" >

                                    < li
                                    onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
                                    if select_format and not self.subquery: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
                                    return node.output_field.select_format(self, sql, params) < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
                                    return sql, params < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >

                                    def as_sql(self, with_limits=True, with_col_aliases=False, subquery=False):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221126344')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221126344" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > node < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > select_format < / td >
                                    < td

                                    class ="code" > < pre > False < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > vendor_impl < / td >
                                    < td

                                    class ="code" > < pre > None < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / models / lookups.py < / code > in < code > as_sql < / code >

                                    < div

                                    class ="context" id="c140655221126920" >

                                    < ol
                                    start = "148"

                                    class ="pre-context" id="pre140655221126920" >

                        < li
                        onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > db_type = self.lhs.output_field.db_type(
                                        connection=connection) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > lhs_sql = connection.ops.field_cast_sql( < / pre > < / li >

                                                                                                                                                                     < li
                                    onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > db_type, field_internal_type) % lhs_sql < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > lhs_sql = connection.ops.lookup_cast(
                                        self.lookup_name, field_internal_type) % lhs_sql < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre >
                        return lhs_sql, list(params) < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre >

                        def as_sql(self, compiler, connection):
                                        <

                                        / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "155"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre >
                                    lhs_sql, params = self.process_lhs(compiler,
                                                                       connection) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '156'

                                    class ="post-context" id="post140655221126920" >

                                    < li
                                    onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > rhs_sql, rhs_params = self.process_rhs(
                                        compiler, connection) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > params.extend(
                                        rhs_params) < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > rhs_sql = self.get_rhs_op(
                                        connection, rhs_sql) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre >
                                    return &  # 39;%s %s&#39; % (lhs_sql, rhs_sql), params</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre >

                                    def get_rhs_op(self, connection, rhs):
                                        <

                                        / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221126920')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221126920" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > compiler < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > connection < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / models / lookups.py < / code > in < code > process_lhs < / code >

                                    < div

                                    class ="context" id="c140655221129096" >

                                    < ol
                                    start = "141"

                                    class ="pre-context" id="pre140655221129096" >

                                    < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre >

                                    class BuiltinLookup(Lookup):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre >

                                    def process_lhs(self, compiler, connection, lhs=None):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > lhs_sql, params = super(
                                        BuiltinLookup, self).process_lhs( < / pre > < / li >

                                                                                        < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > compiler, connection, lhs) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > field_internal_type = self.lhs.output_field.get_internal_type() < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "148"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre >
                        db_type = self.lhs.output_field.db_type(
                                        connection=connection) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '149'

                                    class ="post-context" id="post140655221129096" >

                                    < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > lhs_sql = connection.ops.field_cast_sql( < / pre > < / li >

                                                                                                                                                                     < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > db_type, field_internal_type) % lhs_sql < / pre > < / li >

                        < li
                                    onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > lhs_sql = connection.ops.lookup_cast(
                                        self.lookup_name, field_internal_type) % lhs_sql < / pre > < / li >

                                    < li
                        onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre >
                                    return lhs_sql, list(params) < / pre > < / li >

                                    < li
                        onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre >

                        def as_sql(self, compiler, connection):
                            <

                            / pre > < / li >

                        < / ol >

                                    < / div >

                        < div

                        class ="commands" >

                        < a
                        href = "#"
                        onclick = "return varToggle(this, '140655221129096')" > < span > &  # x25b6;</span> Local vars</a>

                        < / div >
                        < table

                                    class ="vars" id="v140655221129096" >

                        < thead >
                        < tr >
                        < th > Variable < / th >
                        < th > Value < / th >
                        < / tr >
                        < / thead >
                        < tbody >

                        < tr >
                        < td > __class__ < / td >
                        < td

                        class ="code" > < pre > & lt; class &  # 39;django.db.models.lookups.BuiltinLookup&#39;&gt;</pre></td>

                        < / tr >

                        < tr >
                        < td > compiler < / td >
                        < td

                        class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

                        < / tr >

                        < tr >
                        < td > connection < / td >
                        < td

                        class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                        < / tr >

                        < tr >
                        < td > field_internal_type < / td >
                        < td

                        class ="code" > < pre > &  # 39;CharField&#39;</pre></td>

                        < / tr >

                        < tr >
                        < td > lhs < / td >
                        < td

                        class ="code" > < pre > None < / pre > < / td >

                        < / tr >

                        < tr >
                        < td > lhs_sql < / td >
                        < td

                        class ="code" > < pre > &  # 39;`app_student`.`phone`&#39;</pre></td>

                        < / tr >

                                    < tr >
                        < td > params < / td >
                                    < td

                        class ="code" > < pre >[] < / pre > < / td >

                        < / tr >

                                    < tr >
                        < td > self < / td >
                        < td

                        class ="code" > < pre > & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt; < / pre > < / td >

                        < / tr >

                        < / tbody >
                        < / table >

                        < / li >

                        < li

                        class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                        .6 / site - packages / django / db / models / fields / __init__.py < / code > in < code > db_type < / code >

                        < div

                        class ="context" id="c140655221129160" >

                                    < ol
                        start = "622"

                        class ="pre-context" id="pre140655221129160" >

                        < li
                        onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >  # But the limitation of the get_internal_type() / data_types approach</pre></li>

                        < li
                                    onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >  # is that it cannot handle database column types that aren&#39;t already</pre></li>

                        < li
                                    onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >  # mapped to one of the built-in Django field types. In this case, you</pre></li>

                        < li
                        onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >  # can implement db_type() instead of get_internal_type() to specify</pre></li>

                                    < li
                        onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >  # exactly which wacky database column type you want to use.</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre > data = DictWrapper(
                                        self.__dict__, connection.ops.quote_name, & quot;
                                    qn_ & quot;) < / pre > < / li >

                                    < li
                        onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >
                                    try: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "629"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >
                        return connection.data_types[
                                               self.get_internal_type()] % data < / pre > < span > ... < / span > < / li > < / ol >

                        < ol
                                    start = '630'

                        class ="post-context" id="post140655221129160" >

                        < li
                        onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >        except KeyError: < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >
                        return None < / pre > < / li >

                                    < li
                        onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >

                                    def rel_db_type(self, connection):
                                        <

                                        / pre > < / li >

                        < li
                        onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                        onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre > Return
                        the
                                    data
                                    type
                                    that
                        a
                        related
                        field
                        pointing
                        to
                        this
                        field
                        should < / pre > < / li >

                        < / ol >

                        < / div >

                        < div

                        class ="commands" >

                        < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221129160')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                        class ="vars" id="v140655221129160" >

                        < thead >
                        < tr >
                        < th > Variable < / th >
                        < th > Value < / th >
                        < / tr >
                        < / thead >
                        < tbody >

                        < tr >
                        < td > connection < / td >
                                    < td

                        class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                        < / tr >

                        < tr >
                        < td > data < / td >
                                    < td

                                    class ="code" > < pre > {&  # 39;_error_messages&#39;: None,
                                    &  # 39;_unique&#39;: False,
                                    &  # 39;_validators&#39;: [],
                                    &  # 39;_verbose_name&#39;: &#39;çµè¯&#39;,
                                    &  # 39;attname&#39;: &#39;phone&#39;,
                                    &  # 39;auto_created&#39;: False,
                                    &  # 39;blank&#39;: False,
                                    &  # 39;cached_col&#39;: Col(app_student, app.Student.phone),
                                    &  # 39;choices&#39;: [],
                                    &  # 39;column&#39;: &#39;phone&#39;,
                                    &  # 39;concrete&#39;: True,
                                    &  # 39;creation_counter&#39;: 50,
                                    &  # 39;db_column&#39;: None,
                                    &  # 39;db_index&#39;: False,
                                    &  # 39;db_tablespace&#39;: &#39;&#39;,
                                    &  # 39;default&#39;: &lt;class &#39;django.db.models.fields.NOT_PROVIDED&#39;&gt;,
                                    &  # 39;editable&#39;: True,
                                    &  # 39;error_messages&#39;: {&#39;blank&#39;: &lt;django.utils.functional.lazy.&lt;locals&gt;.__proxy__ object at 0x7fecdd721cf8&gt;,
                                    &  # 39;invalid_choice&#39;: &lt;django.utils.functional.lazy.&lt;locals&gt;.__proxy__ object at 0x7fecdd721be0&gt;,
                                    &  # 39;null&#39;: &lt;django.utils.functional.lazy.&lt;locals&gt;.__proxy__ object at 0x7fecdd721c18&gt;,
                                    &  # 39;unique&#39;: &lt;django.utils.functional.lazy.&lt;locals&gt;.__proxy__ object at 0x7fecdd6e37f0&gt;,
                                    &  # 39;unique_for_date&#39;: &lt;django.utils.functional.lazy.&lt;locals&gt;.__proxy__ object at 0x7fecdc4fa358&gt;},
                                    &  # 39;help_text&#39;: &#39;&#39;,
                                    &  # 39;is_relation&#39;: False,
                                    &  # 39;max_length&#39;: 11,
                                    &  # 39;model&#39;: &lt;class &#39;app.models.Student&#39;&gt;,
                                    &  # 39;name&#39;: &#39;phone&#39;,
                                    &  # 39;null&#39;: False,
                                    &  # 39;primary_key&#39;: False,
                                    &  # 39;remote_field&#39;: None,
                                    &  # 39;serialize&#39;: True,
                                    &  # 39;unique_for_date&#39;: None,
                                    &  # 39;unique_for_month&#39;: None,
                                    &  # 39;unique_for_year&#39;: None,
                                    &  # 39;validators&#39;: [&lt;django.core.validators.MaxLengthValidator object at 0x7fecdb2fea90&gt;],
                                    &  # 39;verbose_name&#39;: &#39;çµè¯&#39;}</pre></td>
                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                        class ="code" > < pre > & lt;django.db.models.fields.CharField: phone & gt; <

                        / pre > < / td >

                    < / tr >

                    < / tbody >
                    < / table >

                    < / li >

                    < li

                    class ="frame django" >

                    < code > / usr / local / anaconda3 / lib / python3
                    .6 / site - packages / django / utils / functional.py < / code > in < code > __get__ < / code >

                    < div

                    class ="context" id="c140655221125640" >

                    < ol
                    start = "28"

                    class ="pre-context" id="pre140655221125640" >

                    < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > self.func = func < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > self.__doc__ = getattr(
                        func, &  # 39;__doc__&#39;)</pre></li>

                                                                                                             < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > self.name = name or func.__name__ < / pre > < / li >

                                                                                                                                              < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > < / pre > < / li >

                                                                                                            < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >

                    def __get__(self, instance, cls=None):
                        <

                        / pre > < / li >

                    < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >
                    if instance is None: < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >
                    return self < / pre > < / li >

                    < / ol >

                    < ol
                    start = "35"

                    class ="context-line" >

                    < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >
                    res = instance.__dict__[self.name] = self.func(
                        instance) < / pre > < span > ... < / span > < / li > < / ol >

                    < ol
                    start = '36'

                    class ="post-context" id="post140655221125640" >

                    < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >
                    return res < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > < / pre > < / li >

                    < li
                                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >

                    class Promise(object):
                        <

                        / pre > < / li >

                    < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                    onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > This is just
                    a
                    base

                    class for the proxy class created in < / pre > < / li >

                    < / ol >

                                    < / div >

                                    < div

                    class ="commands" >

                    < a
                    href = "#"
                    onclick = "return varToggle(this, '140655221125640')" > < span > &  # x25b6;</span> Local vars</a>

                    < / div >
                    < table

                    class ="vars" id="v140655221125640" >

                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                    < tbody >

                    < tr >
                                    < td > cls < / td >
                    < td

                                    class ="code" > < pre > & lt; class &  # 39;django.db.backends.mysql.base.DatabaseWrapper&#39;&gt;</pre></td>

                    < / tr >

                    < tr >
                    < td > instance < / td >
                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.utils.functional.cached_property object at 0x7fecdb3b14a8 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                    .6 / site - packages / django / db / backends / mysql / base.py < / code > in < code > data_types < / code >

                                    < div

                                    class ="context" id="c140655221126216" >

                                    < ol
                                    start = "178"

                                    class ="pre-context" id="pre140655221126216" >

                    < li
                                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > &  # 39;TextField&#39;: &#39;longtext&#39;,</pre></li>

                                    < li
                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > &  # 39;TimeField&#39;: &#39;time&#39;,</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > &  # 39;UUIDField&#39;: &#39;char(32)&#39;,</pre></li>

                    < li
                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >} < / pre > < / li >

                                                                                                             < li
                                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > < / pre > < / li >

                                                                                                                            < li
                                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >

                    @cached_property

                    < / pre > < / li >

                                  < li
                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >

                    def data_types(self):
                        <

                                        / pre > < / li >

                                    < / ol >

                    < ol
                                    start = "185"

                    class ="context-line" >

                    < li
                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >
                    if self.features.supports_microsecond_precision: < / pre > < span > ... < / span > < / li > < / ol >

                    < ol
                    start = '186'

                    class ="post-context" id="post140655221126216" >

                                    < li
                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >
                                    return dict(self._data_types,
                                                DateTimeField= &  # 39;datetime(6)&#39;, TimeField=&#39;time(6)&#39;)</pre></li>

                                           < li
                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > else: < / pre > < / li >

                                                                                                                  < li
                                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >
                                    return self._data_types < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > < / pre > < / li >

                                    < li
                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > operators = { < / pre > < / li >

                                                                                                                          < li
                                    onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > &  # 39;exact&#39;: &#39;= %s&#39;,</pre></li>

                                    < / ol >

                                        < / div >

                                            < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221126216')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221126216" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / utils / functional.py < / code > in < code > __get__ < / code >

                                    < div

                                    class ="context" id="c140655221125256" >

                                    < ol
                                    start = "28"

                                    class ="pre-context" id="pre140655221125256" >

                                    < li
                                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > self.func = func < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > self.__doc__ = getattr(
                                        func, &  # 39;__doc__&#39;)</pre></li>

                                                                                                                             < li
                                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > self.name = name or func.__name__ < / pre > < / li >

                                                                                                                                                              < li
                                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > < / pre > < / li >

                                                                                                                            < li
                                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >

                                    def __get__(self, instance, cls=None):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >
                                    if instance is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >
                                    return self < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "35"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >
                                    res = instance.__dict__[self.name] = self.func(
                                        instance) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '36'

                                    class ="post-context" id="post140655221125256" >

                                    < li
                                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >
                                    return res < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >

                                    class Promise(object):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > This is just
                                    a
                                    base

                                    class for the proxy class created in < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221125256')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221125256" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > cls < / td >
                                    < td

                                    class ="code" > < pre > & lt; class &  # 39;django.db.backends.mysql.features.DatabaseFeatures&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > instance < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.features.DatabaseFeatures object at 0x7fecd94df550 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.utils.functional.cached_property object at 0x7fecdb3dc7f0 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / backends / mysql / features.py < / code > in < code > supports_microsecond_precision < / code >

                                    < div

                                    class ="context" id="c140655221128584" >

                                    < ol
                                    start = "47"

                                    class ="pre-context" id="pre140655221128584" >

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre > & quot;
                                    Confirm
                                    support
                                    for introspected foreign keys & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >
                                    return self._mysql_storage_engine != &  # 39;MyISAM&#39;</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >

                                    @cached_property

                                    < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >

                                    def supports_microsecond_precision(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >  # See https://github.com/farcepest/MySQLdb1/issues/24 for the reason</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >  # about requiring MySQLdb 1.2.5</pre></li>

                                    < / ol >

                                    < ol
                                    start = "54"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >
                                    return self.connection.mysql_version & gt;= (5, 6,
                                                                                 4) and Database.version_info & gt;= (1,
                                                                                                                      2,
                                                                                                                      5) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '55'

                                    class ="post-context" id="post140655221128584" >

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >

                                    @cached_property

                                    < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >

                                    def has_zoneinfo_database(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >  # MySQL accepts full time zones names (eg. Africa/Nairobi) but rejects</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >  # abbreviations (eg. EAT). When pytz isn&#39;t installed and the current</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >  # time zone is LocalTimezone (the only sensible value in this</pre></li>

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221128584')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221128584" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.features.DatabaseFeatures object at 0x7fecd94df550 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / utils / functional.py < / code > in < code > __get__ < / code >

                                    < div

                                    class ="context" id="c140655221128648" >

                                    < ol
                                    start = "28"

                                    class ="pre-context" id="pre140655221128648" >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > self.func = func < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > self.__doc__ = getattr(
                                        func, &  # 39;__doc__&#39;)</pre></li>

                                                                                                                             < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > self.name = name or func.__name__ < / pre > < / li >

                                                                                                                                                              < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > < / pre > < / li >

                                                                                                                            < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >

                                    def __get__(self, instance, cls=None):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >
                                    if instance is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >
                                    return self < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "35"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >
                                    res = instance.__dict__[self.name] = self.func(
                                        instance) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '36'

                                    class ="post-context" id="post140655221128648" >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >
                                    return res < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >

                                    class Promise(object):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > This is just
                                    a
                                    base

                                    class for the proxy class created in < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221128648')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221128648" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > cls < / td >
                                    < td

                                    class ="code" > < pre > & lt; class &  # 39;django.db.backends.mysql.base.DatabaseWrapper&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > instance < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.utils.functional.cached_property object at 0x7fecdb3b1358 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / backends / mysql / base.py < / code > in < code > mysql_version < / code >

                                    < div

                                    class ="context" id="c140655221126856" >

                                    < ol
                                    start = "362"

                                    class ="pre-context" id="pre140655221126856" >

                                    < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >        except Database.Error: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
                                    return False < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre > else: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
                                    return True < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >

                                    @cached_property

                                    < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >

                                    def mysql_version(self):
                                        <

                                        / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "369"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
                                    with self.temporary_connection() as cursor:
                                        < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '370'

                                    class ="post-context" id="post140655221126856" >

                                    < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre > cursor.execute( &  # 39;SELECT VERSION()&#39;)</pre></li>

                                              < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre > server_info =
                                    cursor.fetchone()[0] < / pre > < / li >

                                                                       < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre > match = server_version_re.match(
                                        server_info) < / pre > < / li >

                                                                   < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
                                    if not match: < / pre > < / li >

                                                                < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
                                    raise Exception( &  # 39;Unable to determine MySQL version from version string %r&#39; % server_info)</pre></li>

                                          < li
                                    onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
                                    return tuple(int(x) for x in match.groups()) < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221126856')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221126856" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame user" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / contextlib.py < / code > in < code > __enter__ < / code >

                                    < div

                                    class ="context" id="c140655221128520" >

                                    < ol
                                    start = "74"

                                    class ="pre-context" id="pre140655221128520" >

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >  # _GCM instances are one-shot context managers, so the</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >  # CM must be recreated each time a decorated function is</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >  # called</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
                                    return self.__class__(self.func, self.args, self.kwds) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >

                                    def __enter__(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
                                    try: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "81"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
                                    return next(self.gen) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '82'

                                    class ="post-context" id="post140655221128520" >

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >        except StopIteration: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
                                    raise RuntimeError( & quot;
                                    generator
                                    didn &  # 39;t yield&quot;) from None</pre></li>

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre > < / pre > < / li >

                                                                                                                            < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >

                                    def __exit__(self, type, value, traceback):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
                                    if type is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
                                    try: < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221128520')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221128520" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;contextlib._GeneratorContextManager object at 0x7fecd8586940 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / backends / base / base.py < / code > in < code > temporary_connection < / code >

                                    < div

                                    class ="context" id="c140655221126984" >

                                    < ol
                                    start = "557"

                                    class ="pre-context" id="pre140655221126984" >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > Context
                                    manager
                                    that
                                    ensures
                                    that
                                    a
                                    connection is established, and < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > if it
                                    opened
                                    one, closes
                                    it
                                    to
                                    avoid
                                    leaving
                                    a
                                    dangling
                                    connection. < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > This is useful
                                    for operations outside of the request-response cycle.< / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > Provides
                                    a
                                    cursor:
                                    with self.temporary_connection() as cursor:
                                        ... < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > must_close = self.connection is None < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "564"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre >
                                    cursor = self.cursor() < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '565'

                                    class ="post-context" id="post140655221126984" >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre >
                                    try: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre >
                                    yield cursor < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre >        finally: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > cursor.close() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre >
                                    if must_close: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > self.close() < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655221126984')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655221126984" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > must_close < / td >
                                    < td

                                    class ="code" > < pre > True < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / backends / base / base.py < / code > in < code > cursor < / code >

                                    < div

                                    class ="context" id="c140655233624264" >

                                    < ol
                                    start = "224"

                                    class ="pre-context" id="pre140655233624264" >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre >

                                    def cursor(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > Creates
                                    a
                                    cursor, opening
                                    a
                                    connection if necessary. < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > self.validate_thread_sharing() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre >
                                    if self.queries_logged: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "231"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre >
                                    cursor = self.make_debug_cursor(
                                        self._cursor()) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '232'

                                    class ="post-context" id="post140655233624264" >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > else: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > cursor = self.make_cursor(
                                        self._cursor()) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre >
                                    return cursor < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre >

                                    def commit(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655233624264')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655233624264" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / backends / base / base.py < / code > in < code > _cursor < / code >

                                    < div

                                    class ="context" id="c140655233625224" >

                                    < ol
                                    start = "197"

                                    class ="pre-context" id="pre140655233625224" >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
                                    if self.connection is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
                                    with self.wrap_database_errors:
                                        < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre > self.connect() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >  # ##### Backend-specific wrappers for PEP-249 connection methods #####</pre></li>

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >

                                    def _cursor(self):
                                        <

                                        / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "204"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
                                    self.ensure_connection() < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '205'

                                    class ="post-context" id="post140655233625224" >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
                                    with self.wrap_database_errors:
                                        < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
                                    return self.create_cursor() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >

                                    def _commit(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
                                    if self.connection is not None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
                                    with self.wrap_database_errors:
                                        < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655233625224')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655233625224" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / backends / base / base.py < / code > in < code > ensure_connection < / code >

                                    < div

                                    class ="context" id="c140655233624136" >

                                    < ol
                                    start = "192"

                                    class ="pre-context" id="pre140655233624136" >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >

                                    def ensure_connection(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > Guarantees
                                    that
                                    a
                                    connection
                                    to
                                    the
                                    database is established. < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >
                                    if self.connection is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >
                                    with self.wrap_database_errors:
                                        < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "199"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >
                                    self.connect() < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '200'

                                    class ="post-context" id="post140655233624136" >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >  # ##### Backend-specific wrappers for PEP-249 connection methods #####</pre></li>

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >

                                    def _cursor(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > self.ensure_connection() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >
                                    with self.wrap_database_errors:
                                        < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655233624136')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655233624136" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / utils.py < / code > in < code > __exit__ < / code >

                                    < div

                                    class ="context" id="c140655233623368" >

                                    < ol
                                    start = "87"

                                    class ="pre-context" id="pre140655233623368" >

                                    < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre > dj_exc_value.__cause__ = exc_value < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre > if not hasattr(
                                        exc_value, &  # 39;__traceback__&#39;):</pre></li>

                                                                                                                     < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre > exc_value.__traceback__ = traceback < / pre > < / li >

                                                                                                                                                                < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >  # Only set the &#39;errors_occurred&#39; flag for errors that may make</pre></li>

                                              < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >  # the connection unusable.</pre></li>

                                              < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >
                                    if dj_exc_type not in (DataError, IntegrityError): < / pre > < / li >

                                                                                                     < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre > self.wrapper.errors_occurred = True < / pre > < / li >

                                                                                                                                                                < / ol >

                                                                                                                                                                    < ol
                                    start = "94"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >
                                    six.reraise(dj_exc_type, dj_exc_value,
                                                traceback) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '95'

                                    class ="post-context" id="post140655233623368" >

                                    < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >

                                    def __call__(self, func):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >  # Note that we are intentionally not using @wraps here for performance</pre></li>

                                    < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >  # reasons. Refs #21109.</pre></li>

                                    < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >

                                    def inner(*args, **kwargs):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >
                                    with self:
                                        < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655233623368')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655233623368" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > db_exc_type < / td >
                                    < td

                                    class ="code" > < pre > & lt; class &  # 39;pymysql.err.OperationalError&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > dj_exc_type < / td >
                                    < td

                                    class ="code" > < pre > & lt; class &  # 39;django.db.utils.OperationalError&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > dj_exc_value < / td >
                                    < td

                                    class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                    < / tr >

                                    < tr >
                                    < td > exc_type < / td >
                                    < td

                                    class ="code" > < pre > & lt; class &  # 39;pymysql.err.OperationalError&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > exc_value < / td >
                                    < td

                                    class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                    < / tr >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.utils.DatabaseErrorWrapper object at 0x7fecd8586a90 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > traceback < / td >
                                    < td

                                    class ="code" > < pre > & lt;traceback object at 0x7fecd93c6fc8 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / utils / six.py < / code > in < code > reraise < / code >

                                    < div

                                    class ="context" id="c140655233625032" >

                                    < ol
                                    start = "678"

                                    class ="pre-context" id="pre140655233625032" >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
                                    if PY3: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > exec_ = getattr(
                                        moves.builtins, & quot;
                                    exec & quot;) < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >

                                    def reraise(tp, value, tb=None):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
                                    if value is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > value = tp() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
                                    if value.__traceback__ is not tb: < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "685"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
                                    raise value.with_traceback(tb) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '686'

                                    class ="post-context" id="post140655233625032" >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
                                    raise value < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > else: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >

                                    def exec_(_code_, _globs_=None, _locs_=None):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > & quot; & quot; & quot;
                                    Execute
                                    code in a
                                    namespace. & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
                                    if _globs_ is None: < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655233625032')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655233625032" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > tb < / td >
                                    < td

                                    class ="code" > < pre > & lt;traceback object at 0x7fecd93c6fc8 & gt; < / pre > < / td >

                                    < / tr >

                                    < tr >
                                    < td > tp < / td >
                                    < td

                                    class ="code" > < pre > & lt; class &  # 39;django.db.utils.OperationalError&#39;&gt;</pre></td>

                                    < / tr >

                                    < tr >
                                    < td > value < / td >
                                    < td

                                    class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / backends / base / base.py < / code > in < code > ensure_connection < / code >

                                    < div

                                    class ="context" id="c140655233626056" >

                                    < ol
                                    start = "192"

                                    class ="pre-context" id="pre140655233626056" >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >

                                    def ensure_connection(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > Guarantees
                                    that
                                    a
                                    connection
                                    to
                                    the
                                    database is established. < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
                                    if self.connection is None: < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
                                    with self.wrap_database_errors:
                                        < / pre > < / li >

                                    < / ol >

                                    < ol
                                    start = "199"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
                                    self.connect() < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '200'

                                    class ="post-context" id="post140655233626056" >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >  # ##### Backend-specific wrappers for PEP-249 connection methods #####</pre></li>

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >

                                    def _cursor(self):
                                        <

                                        / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > self.ensure_connection() < / pre > < / li >

                                    < li
                                    onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
                                    with self.wrap_database_errors:
                                        < / pre > < / li >

                                    < / ol >

                                    < / div >

                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655233626056')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655233626056" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > self < / td >
                                    < td

                                    class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                    < / tr >

                                    < / tbody >
                                    < / table >

                                    < / li >

                                    < li

                                    class ="frame django" >

                                    < code > / usr / local / anaconda3 / lib / python3
                                    .6 / site - packages / django / db / backends / base / base.py < / code > in < code > connect < / code >

                                    < div

                                    class ="context" id="c140655233624904" >

                                    < ol
                                    start = "164"

                                    class ="pre-context" id="pre140655233624904" >

                                    < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >  # Reset parameters defining when to close the connection</pre></li>

                                    < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > max_age =
                                    self.settings_dict[ &  # 39;CONN_MAX_AGE&#39;]</pre></li>

                                    < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.close_at = None if max_age is None else time.time() + max_age < / pre > < / li >

                                                                                                                                                                                               < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.closed_in_transaction = False < / pre > < / li >

                                                                                                                                                               < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.errors_occurred = False < / pre > < / li >

                                                                                                                                                         < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >  # Establish the connection</pre></li>

                                              < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > conn_params = self.get_connection_params() < / pre > < / li >

                                                                                                                                                                       < / ol >

                                                                                                                                                                           < ol
                                    start = "171"

                                    class ="context-line" >

                                    < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >
                                    self.connection = self.get_new_connection(
                                        conn_params) < / pre > < span > ... < / span > < / li > < / ol >

                                    < ol
                                    start = '172'

                                    class ="post-context" id="post140655233624904" >

                                    < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.set_autocommit(
                                        self.settings_dict[ &  # 39;AUTOCOMMIT&#39;])</pre></li>

                                        < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.init_connection_state() < / pre > < / li >

                                                                                                                                                         < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > connection_created.send(
                                        sender=self.__class__, connection=self) < / pre > < / li >

                                                                                              < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > < / pre > < / li >

                                                                                                                            < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.run_on_commit = [] < / pre > < / li >

                                                                                                                                                    < li
                                    onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > < / pre > < / li >

                                                                                                                            < / ol >

                                                                                                                                < / div >

                                                                                                                                    < div

                                    class ="commands" >

                                    < a
                                    href = "#"
                                    onclick = "return varToggle(this, '140655233624904')" > < span > &  # x25b6;</span> Local vars</a>

                                    < / div >
                                    < table

                                    class ="vars" id="v140655233624904" >

                                    < thead >
                                    < tr >
                                    < th > Variable < / th >
                                    < th > Value < / th >
                                    < / tr >
                                    < / thead >
                                    < tbody >

                                    < tr >
                                    < td > conn_params < / td >
                                    < td

                                    class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
                                    &  # 39;client_flag&#39;: 2,
                                    &  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
                                    1: &

                                        lt;

                                    class &  # 39;int&#39;&gt;,
                                        2: & lt;

                                        class &  # 39;int&#39;&gt;,
                                            3: & lt;

                                            class &  # 39;int&#39;&gt;,

                                                4: & lt;

                                            class &  # 39;float&#39;&gt;,

                                                5: & lt;

                                            class &  # 39;float&#39;&gt;,

                                                7: & lt;
                                            function
                                            convert_mysql_timestamp
                                            at
                                            0x7fecdb3d7bf8 & gt;,
                                            8: & lt;

                                            class &  # 39;int&#39;&gt;,
                                                9: & lt;

                                                class &  # 39;int&#39;&gt;,

                                                    10: & lt;
                                                function
                                                convert_date
                                                at
                                                0x7fecdb3d7b70 & gt;,
                                                11: & lt;
                                                function
                                                typecast_time
                                                at
                                                0x7fecdd779bf8 & gt;,
                                                12: & lt;
                                                function
                                                convert_datetime
                                                at
                                                0x7fecdb3d79d8 & gt;,
                                                13: & lt;

                                                class &  # 39;int&#39;&gt;,
                                                    15: & lt;
                                                    function
                                                    through
                                                    at
                                                    0x7fecdb3d7d08 & gt;,
                                                    16: & lt;
                                                    function
                                                    through
                                                    at
                                                    0x7fecdb3d7d08 & gt;,
                                                    246: & lt;
                                                    function
                                                    typecast_decimal
                                                    at
                                                    0x7fecdd779d08 & gt;,
                                                    248: & lt;
                                                    function
                                                    convert_set
                                                    at
                                                    0x7fecdb3d7c80 & gt;,
                                                    249: & lt;
                                                    function
                                                    through
                                                    at
                                                    0x7fecdb3d7d08 & gt;,
                                                    250: & lt;
                                                    function
                                                    through
                                                    at
                                                    0x7fecdb3d7d08 & gt;,
                                                    251: & lt;
                                                    function
                                                    through
                                                    at
                                                    0x7fecdb3d7d08 & gt;,
                                                    252: & lt;
                                                    function
                                                    through
                                                    at
                                                    0x7fecdb3d7d08 & gt;,
                                                    253: & lt;
                                                    function
                                                    through
                                                    at
                                                    0x7fecdb3d7d08 & gt;,
                                                    254: & lt;
                                                    function
                                                    through
                                                    at
                                                    0x7fecdb3d7d08 & gt;,
                                                    & lt;

                                                    class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                                                        & lt;

                                                        class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                                                            & lt;

                                                        class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                                                            & lt;

                                                        class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                                                            & lt;

                                                        class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                                                            & lt;

                                                        class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                                                            & lt;

                                                        class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                            & lt;

                                                        class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                            & lt;

                                                        class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                            & lt;

                                                        class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                                                            & lt;

                                                        class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                                                            & lt;

                                                        class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                                                            & lt;

                                                        class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                            & lt;

                                                        class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                                                            & lt;

                                                        class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                                                            & lt;

                                                        class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                                                            & lt;

                                                        class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

                                                &  # 39;db&#39;: &#39;main&#39;,
                                                &  # 39;host&#39;: &#39;127.0.0.1&#39;,
                                                &  # 39;passwd&#39;: &#39;123456&#39;,
                                                &  # 39;port&#39;: 3306,
                                                &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
                                                < / tr >

                                                < tr >
                                                < td > max_age < / td >
                                                < td

                                                class ="code" > < pre > 0 < / pre > < / td >

                                                < / tr >

                                                < tr >
                                                < td > self < / td >
                                                < td

                                                class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                                < / tr >

                                                < / tbody >
                                                < / table >

                                                < / li >

                                                < li

                                                class ="frame django" >

                                                < code > / usr / local / anaconda3 / lib / python3
                                                .6 / site - packages / django / db / backends / mysql / base.py < / code > in < code > get_new_connection < / code >

                                                < div

                                                class ="context" id="c140655233624776" >

                                                < ol
                                                start = "258"

                                                class ="pre-context" id="pre140655233624776" >

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >  # We need the number of potentially affected rows after an</pre></li>

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >  # &quot;UPDATE&quot;, not the number of changed rows.</pre></li>

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
                                                          kwargs[ &  # 39;client_flag&#39;] = CLIENT.FOUND_ROWS</pre></li>

                                                          < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > kwargs.update(
                                                    settings_dict[ &  # 39;OPTIONS&#39;])</pre></li>

                                                    < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
                                                return kwargs < / pre > < / li >

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > < / pre > < / li >

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >

                                                def get_new_connection(self, conn_params):
                                                    <

                                                    / pre > < / li >

                                                < / ol >

                                                < ol
                                                start = "265"

                                                class ="context-line" >

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
                                                conn = Database.connect(
                                                    **conn_params) < / pre > < span > ... < / span > < / li > < / ol >

                                                < ol
                                                start = '266'

                                                class ="post-context" id="post140655233624776" >

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
                                                          conn.encoders[SafeText] = conn.encoders[
                                                                                        six.text_type] < / pre > < / li >

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
                                                          conn.encoders[SafeBytes] = conn.encoders[
                                                                                         bytes] < / pre > < / li >

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
                                                return conn < / pre > < / li >

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > < / pre > < / li >

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >

                                                def init_connection_state(self):
                                                    <

                                                    / pre > < / li >

                                                < li
                                                onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
                                                if self.features.is_sql_auto_is_null_enabled: < / pre > < / li >

                                                < / ol >

                                                < / div >

                                                < div

                                                class ="commands" >

                                                < a
                                                href = "#"
                                                onclick = "return varToggle(this, '140655233624776')" > < span > &  # x25b6;</span> Local vars</a>

                                                < / div >
                                                < table

                                                class ="vars" id="v140655233624776" >

                                                < thead >
                                                < tr >
                                                < th > Variable < / th >
                                                < th > Value < / th >
                                                < / tr >
                                                < / thead >
                                                < tbody >

                                                < tr >
                                                < td > conn_params < / td >
                                                < td

                                                class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
                                                &  # 39;client_flag&#39;: 2,
                                                &  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
                                                1: &

                                                    lt;

                                                class &  # 39;int&#39;&gt;,
                                                    2: & lt;

                                                    class &  # 39;int&#39;&gt;,
                                                        3: & lt;

                                                        class &  # 39;int&#39;&gt;,

                                                            4: & lt;

                                                        class &  # 39;float&#39;&gt;,

                                                            5: & lt;

                                                        class &  # 39;float&#39;&gt;,

                                                            7: & lt;
                                                        function
                                                        convert_mysql_timestamp
                                                        at
                                                        0x7fecdb3d7bf8 & gt;,
                                                        8: & lt;

                                                        class &  # 39;int&#39;&gt;,
                                                            9: & lt;

                                                            class &  # 39;int&#39;&gt;,

                                                                10: & lt;
                                                            function
                                                            convert_date
                                                            at
                                                            0x7fecdb3d7b70 & gt;,
                                                            11: & lt;
                                                            function
                                                            typecast_time
                                                            at
                                                            0x7fecdd779bf8 & gt;,
                                                            12: & lt;
                                                            function
                                                            convert_datetime
                                                            at
                                                            0x7fecdb3d79d8 & gt;,
                                                            13: & lt;

                                                            class &  # 39;int&#39;&gt;,
                                                                15: & lt;
                                                                function
                                                                through
                                                                at
                                                                0x7fecdb3d7d08 & gt;,
                                                                16: & lt;
                                                                function
                                                                through
                                                                at
                                                                0x7fecdb3d7d08 & gt;,
                                                                246: & lt;
                                                                function
                                                                typecast_decimal
                                                                at
                                                                0x7fecdd779d08 & gt;,
                                                                248: & lt;
                                                                function
                                                                convert_set
                                                                at
                                                                0x7fecdb3d7c80 & gt;,
                                                                249: & lt;
                                                                function
                                                                through
                                                                at
                                                                0x7fecdb3d7d08 & gt;,
                                                                250: & lt;
                                                                function
                                                                through
                                                                at
                                                                0x7fecdb3d7d08 & gt;,
                                                                251: & lt;
                                                                function
                                                                through
                                                                at
                                                                0x7fecdb3d7d08 & gt;,
                                                                252: & lt;
                                                                function
                                                                through
                                                                at
                                                                0x7fecdb3d7d08 & gt;,
                                                                253: & lt;
                                                                function
                                                                through
                                                                at
                                                                0x7fecdb3d7d08 & gt;,
                                                                254: & lt;
                                                                function
                                                                through
                                                                at
                                                                0x7fecdb3d7d08 & gt;,
                                                                & lt;

                                                                class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                                                                    & lt;

                                                                    class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                                                                        & lt;

                                                                    class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                                                                        & lt;

                                                                    class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                                                                        & lt;

                                                                    class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                                                                        & lt;

                                                                    class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                                                                        & lt;

                                                                    class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                        & lt;

                                                                    class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                        & lt;

                                                                    class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                        & lt;

                                                                    class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                                                                        & lt;

                                                                    class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                                                                        & lt;

                                                                    class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                                                                        & lt;

                                                                    class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                        & lt;

                                                                    class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                                                                        & lt;

                                                                    class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                                                                        & lt;

                                                                    class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                                                                        & lt;

                                                                    class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

                                                            &  # 39;db&#39;: &#39;main&#39;,
                                                            &  # 39;host&#39;: &#39;127.0.0.1&#39;,
                                                            &  # 39;passwd&#39;: &#39;123456&#39;,
                                                            &  # 39;port&#39;: 3306,
                                                            &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
                                                            < / tr >

                                                            < tr >
                                                            < td > self < / td >
                                                            < td

                                                            class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

                                                            < / tr >

                                                            < / tbody >
                                                            < / table >

                                                            < / li >

                                                            < li

                                                            class ="frame user" >

                                                            < code > / usr / local / anaconda3 / lib / python3
                                                            .6 / site - packages / pymysql / __init__.py < / code > in < code > Connect < / code >

                                                            < div

                                                            class ="context" id="c140655233622600" >

                                                            < ol
                                                            start = "87"

                                                            class ="pre-context" id="pre140655233622600" >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >

                                                            def Connect(*args, **kwargs):
                                                                <

                                                                / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > Connect
                                                            to
                                                            the
                                                            database;
                                                            see
                                                            connections.Connection.__init__()
                                                            for < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > more
                                                            information. < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
                                                            from .connections import Connection < / pre > < / li >

                                                            < / ol >

                                                            < ol
                                                            start = "94"

                                                            class ="context-line" >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
                                                            return Connection(*args,
                                                                              **kwargs) < / pre > < span > ... < / span > < / li > < / ol >

                                                            < ol
                                                            start = '95'

                                                            class ="post-context" id="post140655233622600" >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
                                                            from . import connections as _orig_conn < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
                                                            if _orig_conn.Connection.__init__.__doc__ is not None: < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > Connect.__doc__ = _orig_conn.Connection.__init__.__doc__ < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
                                                            del _orig_conn < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

                                                            < / ol >

                                                            < / div >

                                                            < div

                                                            class ="commands" >

                                                            < a
                                                            href = "#"
                                                            onclick = "return varToggle(this, '140655233622600')" > < span > &  # x25b6;</span> Local vars</a>

                                                            < / div >
                                                            < table

                                                            class ="vars" id="v140655233622600" >

                                                            < thead >
                                                            < tr >
                                                            < th > Variable < / th >
                                                            < th > Value < / th >
                                                            < / tr >
                                                            < / thead >
                                                            < tbody >

                                                            < tr >
                                                            < td > Connection < / td >
                                                            < td

                                                            class ="code" > < pre > & lt; class &  # 39;pymysql.connections.Connection&#39;&gt;</pre></td>

                                                            < / tr >

                                                            < tr >
                                                            < td > args < / td >
                                                            < td

                                                            class ="code" > < pre > () < / pre > < / td >

                                                            < / tr >

                                                            < tr >
                                                            < td > kwargs < / td >
                                                            < td

                                                            class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
                                                            &  # 39;client_flag&#39;: 2,
                                                            &  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
                                                            1: &

                                                                lt;

                                                            class &  # 39;int&#39;&gt;,
                                                                2: & lt;

                                                                class &  # 39;int&#39;&gt;,
                                                                    3: & lt;

                                                                    class &  # 39;int&#39;&gt;,

                                                                        4: & lt;

                                                                    class &  # 39;float&#39;&gt;,

                                                                        5: & lt;

                                                                    class &  # 39;float&#39;&gt;,

                                                                        7: & lt;
                                                                    function
                                                                    convert_mysql_timestamp
                                                                    at
                                                                    0x7fecdb3d7bf8 & gt;,
                                                                    8: & lt;

                                                                    class &  # 39;int&#39;&gt;,
                                                                        9: & lt;

                                                                        class &  # 39;int&#39;&gt;,

                                                                            10: & lt;
                                                                        function
                                                                        convert_date
                                                                        at
                                                                        0x7fecdb3d7b70 & gt;,
                                                                        11: & lt;
                                                                        function
                                                                        typecast_time
                                                                        at
                                                                        0x7fecdd779bf8 & gt;,
                                                                        12: & lt;
                                                                        function
                                                                        convert_datetime
                                                                        at
                                                                        0x7fecdb3d79d8 & gt;,
                                                                        13: & lt;

                                                                        class &  # 39;int&#39;&gt;,
                                                                            15: & lt;
                                                                            function
                                                                            through
                                                                            at
                                                                            0x7fecdb3d7d08 & gt;,
                                                                            16: & lt;
                                                                            function
                                                                            through
                                                                            at
                                                                            0x7fecdb3d7d08 & gt;,
                                                                            246: & lt;
                                                                            function
                                                                            typecast_decimal
                                                                            at
                                                                            0x7fecdd779d08 & gt;,
                                                                            248: & lt;
                                                                            function
                                                                            convert_set
                                                                            at
                                                                            0x7fecdb3d7c80 & gt;,
                                                                            249: & lt;
                                                                            function
                                                                            through
                                                                            at
                                                                            0x7fecdb3d7d08 & gt;,
                                                                            250: & lt;
                                                                            function
                                                                            through
                                                                            at
                                                                            0x7fecdb3d7d08 & gt;,
                                                                            251: & lt;
                                                                            function
                                                                            through
                                                                            at
                                                                            0x7fecdb3d7d08 & gt;,
                                                                            252: & lt;
                                                                            function
                                                                            through
                                                                            at
                                                                            0x7fecdb3d7d08 & gt;,
                                                                            253: & lt;
                                                                            function
                                                                            through
                                                                            at
                                                                            0x7fecdb3d7d08 & gt;,
                                                                            254: & lt;
                                                                            function
                                                                            through
                                                                            at
                                                                            0x7fecdb3d7d08 & gt;,
                                                                            & lt;

                                                                            class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                                                                                & lt;

                                                                                class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                                                                                    & lt;

                                                                                class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                                                                                    & lt;

                                                                                class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                                                                                    & lt;

                                                                                class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                                                                                    & lt;

                                                                                class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                                                                                    & lt;

                                                                                class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                                    & lt;

                                                                                class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                                    & lt;

                                                                                class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                                    & lt;

                                                                                class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                                                                                    & lt;

                                                                                class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                                                                                    & lt;

                                                                                class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                                                                                    & lt;

                                                                                class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                                    & lt;

                                                                                class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                                                                                    & lt;

                                                                                class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                                                                                    & lt;

                                                                                class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                                                                                    & lt;

                                                                                class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

                                                                        &  # 39;db&#39;: &#39;main&#39;,
                                                                        &  # 39;host&#39;: &#39;127.0.0.1&#39;,
                                                                        &  # 39;passwd&#39;: &#39;123456&#39;,
                                                                        &  # 39;port&#39;: 3306,
                                                                        &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
                                                                        < / tr >

                                                                        < / tbody >
                                                                        < / table >

                                                                        < / li >

                                                                        < li

                                                                        class ="frame user" >

                                                                        < code > / usr / local / anaconda3 / lib / python3
                                                                        .6 / site - packages / pymysql / connections.py < / code > in < code > __init__ < / code >

                                                                        < div

                                                                        class ="context" id="c140655233624456" >

                                                                        < ol
                                                                        start = "318"

                                                                        class ="pre-context" id="pre140655233624456" >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                                                        if program_name: < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                                                                  self._connect_attrs[ & quot;
                                                                        program_name & quot;] = program_name < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                                                        if defer_connect: < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > self._sock = None < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > else: < / pre > < / li >

                                                                        < / ol >

                                                                        < ol
                                                                        start = "325"

                                                                        class ="context-line" >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                                                        self.connect() < / pre > < span > ... < / span > < / li > < / ol >

                                                                        < ol
                                                                        start = '326'

                                                                        class ="post-context" id="post140655233624456" >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >

                                                                        def _create_ssl_ctx(self, sslp):
                                                                            <

                                                                            / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                                                        if isinstance(sslp,
                                                                                      ssl.SSLContext): < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                                                                        return sslp < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > ca = sslp.get( &  # 39;ca&#39;)</pre></li>

                                                                                                                                                       < li
                                                                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > capath = sslp.get( &  # 39;capath&#39;)</pre></li>

                                                                                                                                                           < / ol >

                                                                                                                                                               < / div >

                                                                                                                                                                   < div

                                                                        class ="commands" >

                                                                        < a
                                                                        href = "#"
                                                                        onclick = "return varToggle(this, '140655233624456')" > < span > &  # x25b6;</span> Local vars</a>

                                                                        < / div >
                                                                        < table

                                                                        class ="vars" id="v140655233624456" >

                                                                        < thead >
                                                                        < tr >
                                                                        < th > Variable < / th >
                                                                        < th > Value < / th >
                                                                        < / tr >
                                                                        < / thead >
                                                                        < tbody >

                                                                        < tr >
                                                                        < td > auth_plugin_map < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > autocommit < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > binary_prefix < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > bind_address < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > charset < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;utf8&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > client_flag < / td >
                                                                        < td

                                                                        class ="code" > < pre > 3842575 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > compress < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > connect_timeout < / td >
                                                                        < td

                                                                        class ="code" > < pre > 10 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > conv < / td >
                                                                        < td

                                                                        class ="code" > < pre > {0: &

                                                                            lt;
                                                                        function
                                                                        typecast_decimal
                                                                        at
                                                                        0x7fecdd779d08 & gt;,
                                                                        1: & lt;

                                                                        class &  # 39;int&#39;&gt;,
                                                                            2: & lt;

                                                                            class &  # 39;int&#39;&gt;,

                                                                        3: & lt;

                                                                        class &  # 39;int&#39;&gt;,

                                                                            4: & lt;

                                                                        class &  # 39;float&#39;&gt;,

                                                                            5: & lt;

                                                                        class &  # 39;float&#39;&gt;,

                                                                            7: & lt;
                                                                        function
                                                                        convert_mysql_timestamp
                                                                        at
                                                                        0x7fecdb3d7bf8 & gt;,
                                                                        8: & lt;

                                                                        class &  # 39;int&#39;&gt;,

                                                                            9: & lt;

                                                                        class &  # 39;int&#39;&gt;,

                                                                            10: & lt;
                                                                        function
                                                                        convert_date
                                                                        at
                                                                        0x7fecdb3d7b70 & gt;,
                                                                        11: & lt;
                                                                        function
                                                                        typecast_time
                                                                        at
                                                                        0x7fecdd779bf8 & gt;,
                                                                        12: & lt;
                                                                        function
                                                                        convert_datetime
                                                                        at
                                                                        0x7fecdb3d79d8 & gt;,
                                                                        13: & lt;

                                                                        class &  # 39;int&#39;&gt;,

                                                                            15: & lt;
                                                                        function
                                                                        through
                                                                        at
                                                                        0x7fecdb3d7d08 & gt;,
                                                                        16: & lt;
                                                                        function
                                                                        through
                                                                        at
                                                                        0x7fecdb3d7d08 & gt;,
                                                                        246: & lt;
                                                                        function
                                                                        typecast_decimal
                                                                        at
                                                                        0x7fecdd779d08 & gt;,
                                                                        248: & lt;
                                                                        function
                                                                        convert_set
                                                                        at
                                                                        0x7fecdb3d7c80 & gt;,
                                                                        249: & lt;
                                                                        function
                                                                        through
                                                                        at
                                                                        0x7fecdb3d7d08 & gt;,
                                                                        250: & lt;
                                                                        function
                                                                        through
                                                                        at
                                                                        0x7fecdb3d7d08 & gt;,
                                                                        251: & lt;
                                                                        function
                                                                        through
                                                                        at
                                                                        0x7fecdb3d7d08 & gt;,
                                                                        252: & lt;
                                                                        function
                                                                        through
                                                                        at
                                                                        0x7fecdb3d7d08 & gt;,
                                                                        253: & lt;
                                                                        function
                                                                        through
                                                                        at
                                                                        0x7fecdb3d7d08 & gt;,
                                                                        254: & lt;
                                                                        function
                                                                        through
                                                                        at
                                                                        0x7fecdb3d7d08 & gt;,
                                                                        & lt;

                                                                        class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,

                                                                            & lt;

                                                                        class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                                                                            & lt;

                                                                        class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                                                                            & lt;

                                                                        class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                                                                            & lt;

                                                                        class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                                                                            & lt;

                                                                        class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                                                                            & lt;

                                                                        class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                            & lt;

                                                                        class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                            & lt;

                                                                        class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                            & lt;

                                                                        class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                                                                            & lt;

                                                                        class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                                                                            & lt;

                                                                        class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                                                                            & lt;

                                                                        class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                                                            & lt;

                                                                        class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                                                                            & lt;

                                                                        class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                                                                            & lt;

                                                                        class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                                                                            & lt;

                                                                        class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;}</pre></td>

                                                                            < / tr >

                                                                        < tr >
                                                                        < td > cursorclass < / td >
                                                                        < td

                                                                        class ="code" > < pre > & lt; class &  # 39;pymysql.cursors.Cursor&#39;&gt;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > database < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;main&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > db < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;main&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > defer_connect < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > host < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > init_command < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > local_infile < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > max_allowed_packet < / td >
                                                                        < td

                                                                        class ="code" > < pre > 16777216 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > named_pipe < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > passwd < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;123456&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > password < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;123456&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > port < / td >
                                                                        < td

                                                                        class ="code" > < pre > 3306 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > program_name < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > read_default_file < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > read_default_group < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > read_timeout < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > self < / td >
                                                                        < td

                                                                        class ="code" > < pre > & lt;pymysql.connections.Connection object at 0x7fecd8586828 & gt; < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > server_public_key < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > sql_mode < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > ssl < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > unix_socket < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > use_unicode < / td >
                                                                        < td

                                                                        class ="code" > < pre > True < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > user < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;besttest&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > write_timeout < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < / tbody >
                                                                        < / table >

                                                                        < / li >

                                                                        < li

                                                                        class ="frame user" >

                                                                        < code > / usr / local / anaconda3 / lib / python3
                                                                        .6 / site - packages / pymysql / connections.py < / code > in < code > connect < / code >

                                                                        < div

                                                                        class ="context" id="c140655233623432" >

                                                                        < ol
                                                                        start = "623"

                                                                        class ="pre-context" id="pre140655233623432" >

                                                                        < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > 2003, < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > & quot;
                                                                        Can &  # 39;t connect to MySQL server on %r (%s)&quot; % (</pre></li>

                                                                        < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > self.host, e)) < / pre > < / li >

                                                                                                                                                                               < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # Keep original exception and traceback to investigate error.</pre></li>

                                                                                  < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > exc.original_exception = e < / pre > < / li >

                                                                                                                                                                                           < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > exc.traceback = traceback.format_exc() < / pre > < / li >

                                                                                                                                                                                                       < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
                                                                        if DEBUG: print(
                                                                            exc.traceback) < / pre > < / li >

                                                                                                         < / ol >

                                                                                                             < ol
                                                                        start = "630"

                                                                        class ="context-line" >

                                                                        < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
                                                                        raise exc < / pre > < span > ... < / span > < / li > < / ol >

                                                                        < ol
                                                                        start = '631'

                                                                        class ="post-context" id="post140655233623432" >

                                                                        < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # If e is neither DatabaseError or IOError, It&#39;s a bug.</pre></li>

                                                                        < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # But raising AssertionError hides original error.</pre></li>

                                                                        < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # So just reraise it.</pre></li>

                                                                        < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
                                                                        raise < / pre > < / li >

                                                                        < li
                                                                        onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > < / pre > < / li >

                                                                        < / ol >

                                                                        < / div >

                                                                        < div

                                                                        class ="commands" >

                                                                        < a
                                                                        href = "#"
                                                                        onclick = "return varToggle(this, '140655233623432')" > < span > &  # x25b6;</span> Local vars</a>

                                                                        < / div >
                                                                        < table

                                                                        class ="vars" id="v140655233623432" >

                                                                        < thead >
                                                                        < tr >
                                                                        < th > Variable < / th >
                                                                        < th > Value < / th >
                                                                        < / tr >
                                                                        < / thead >
                                                                        < tbody >

                                                                        < tr >
                                                                        < td > exc < / td >
                                                                        < td

                                                                        class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > kwargs < / td >
                                                                        < td

                                                                        class ="code" > < pre > {} < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > self < / td >
                                                                        < td

                                                                        class ="code" > < pre > & lt;pymysql.connections.Connection object at 0x7fecd8586828 & gt; < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > sock < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < / tbody >
                                                                        < / table >

                                                                        < / li >

                                                                        < / ul >
                                                                        < / div >

                                                                        < form
                                                                        action = "http://dpaste.com/"
                                                                        name = "pasteform"
                                                                        id = "pasteform"
                                                                        method = "post" >

                                                                        < div
                                                                        id = "pastebinTraceback"

                                                                        class ="pastebin" >

                                                                        < input
                                                                        type = "hidden"
                                                                        name = "language"
                                                                        value = "PythonConsole" >
                                                                        < input
                                                                        type = "hidden"
                                                                        name = "title"
                                                                        value = "OperationalError at /api/user/add_stu" >
                                                                        < input
                                                                        type = "hidden"
                                                                        name = "source"
                                                                        value = "Django Dpaste Agent" >
                                                                        < input
                                                                        type = "hidden"
                                                                        name = "poster"
                                                                        value = "Django" >
                                                                        < textarea
                                                                        name = "content"
                                                                        id = "traceback_area"
                                                                        cols = "140"
                                                                        rows = "25" >
                                                                        Environment:

                                                                        Request
                                                                        Method: POST
                                                                        Request
                                                                        URL: http: // api.nnzhp.cn: 80 / api / user / add_stu

                                                                        Django
                                                                        Version: 1.10
                                                                        Python
                                                                        Version: 3.6
                                                                        .4
                                                                        Installed
                                                                        Applications:
                                                                        [ &  # 39;django.contrib.admin&#39;,
                                                                        &  # 39;django.contrib.auth&#39;,
                                                                        &  # 39;django.contrib.contenttypes&#39;,
                                                                        &  # 39;django.contrib.sessions&#39;,
                                                                        &  # 39;django.contrib.messages&#39;,
                                                                        &  # 39;django.contrib.staticfiles&#39;,
                                                                        &  # 39;app.apps.AppConfig&#39;]
                                                                        Installed
                                                                        Middleware:
                                                                        [ &  # 39;django.middleware.security.SecurityMiddleware&#39;,
                                                                        &  # 39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
                                                                        &  # 39;django.middleware.common.CommonMiddleware&#39;,
                                                                        &  # 39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
                                                                        &  # 39;django.contrib.auth.middleware.SessionAuthenticationMiddleware&#39;,
                                                                        &  # 39;django.contrib.messages.middleware.MessageMiddleware&#39;,
                                                                        &  # 39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]

                                                                        Traceback:

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/connections.py" in connect
                                                                        583. ** kwargs)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/socket.py" in create_connection
                                                                        724.
                                                                        raise err

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/socket.py" in create_connection
                                                                        713.
                                                                        sock.connect(sa)

                                                                        During
                                                                        handling
                                                                        of
                                                                        the
                                                                        above
                                                                        exception([Errno 111]
                                                                        Connection
                                                                        refused), another
                                                                        exception
                                                                        occurred:

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in ensure_connection
                                                                        199.
                                                                        self.connect()

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in connect
                                                                        171.
                                                                        self.connection = self.get_new_connection(
                                                                            conn_params)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/mysql/base.py" in get_new_connection
                                                                        265.
                                                                        conn = Database.connect(**conn_params)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/__init__.py" in Connect
                                                                        94.
                                                                        return Connection(*args, **kwargs)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/connections.py" in __init__
                                                                        325.
                                                                        self.connect()

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/connections.py" in connect
                                                                        630.
                                                                        raise exc

                                                                        The
                                                                        above
                                                                        exception((2003,
                                                                                   & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)) was the direct cause of the following exception:

                                                                                   File "/usr/local/anaconda3/lib/python3.6/site-packages/django/core/handlers/exception.py" in inner
                                                                                   39.             response = get_response(request)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/core/handlers/base.py" in _legacy_get_response
                                                                        249.
                                                                        response = self._get_response(request)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
                                                                        187.
                                                                        response = self.process_exception_by_middleware(
                                                                            e, request)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
                                                                        185.
                                                                        response = wrapped_callback(request,
                                                                                                    *callback_args,
                                                                                                    **callback_kwargs)

                                                                        File
                                                                        "/usr/local/choujiang/app/tools.py" in war
                                                                        47.
                                                                        return func(*args, **kwargs)

                                                                        File
                                                                        "/usr/local/choujiang/app/views.py" in add_stu
                                                                        148.
                                                                        if obj:

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/query.py" in __bool__
                                                                        260.
                                                                        self._fetch_all()

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/query.py" in _fetch_all
                                                                        1085.
                                                                        self._result_cache = list(self.iterator())

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/query.py" in __iter__
                                                                        54.
                                                                        results = compiler.execute_sql()

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/sql/compiler.py" in execute_sql
                                                                        824.
                                                                        sql, params = self.as_sql()

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/sql/compiler.py" in as_sql
                                                                        376.
                                                                        where, w_params = self.compile(
                                                                            self.where) if self.where is not None else (
                                                                            & quot; & quot;, [])

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/sql/compiler.py" in compile
                                                                        353.
                                                                        sql, params = node.as_sql(self, self.connection)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/sql/where.py" in as_sql
                                                                        79.
                                                                        sql, params = compiler.compile(child)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/sql/compiler.py" in compile
                                                                        353.
                                                                        sql, params = node.as_sql(self, self.connection)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/lookups.py" in as_sql
                                                                        155.
                                                                        lhs_sql, params = self.process_lhs(compiler,
                                                                                                           connection)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/lookups.py" in process_lhs
                                                                        148.
                                                                        db_type = self.lhs.output_field.db_type(
                                                                            connection=connection)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/fields/__init__.py" in db_type
                                                                        629.
                                                                        return connection.data_types[
                                                                                   self.get_internal_type()] % data

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/utils/functional.py" in __get__
                                                                        35.
                                                                        res = instance.__dict__[self.name] = self.func(
                                                                            instance)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/mysql/base.py" in data_types
                                                                        185.
                                                                        if self.features.supports_microsecond_precision:

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/utils/functional.py" in __get__
                                                                        35.
                                                                        res = instance.__dict__[self.name] = self.func(
                                                                            instance)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/mysql/features.py" in supports_microsecond_precision
                                                                        54.
                                                                        return self.connection.mysql_version & gt;= (5,
                                                                                                                     6,
                                                                                                                     4) and Database.version_info & gt;= (
                                                                        1, 2, 5)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/utils/functional.py" in __get__
                                                                        35.
                                                                        res = instance.__dict__[self.name] = self.func(
                                                                            instance)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/mysql/base.py" in mysql_version
                                                                        369.
                                                                        with self.temporary_connection() as cursor:

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/contextlib.py" in __enter__
                                                                        81.
                                                                        return next(self.gen)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in temporary_connection
                                                                        564.
                                                                        cursor = self.cursor()

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in cursor
                                                                        231.
                                                                        cursor = self.make_debug_cursor(self._cursor())

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in _cursor
                                                                        204.
                                                                        self.ensure_connection()

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in ensure_connection
                                                                        199.
                                                                        self.connect()

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/utils.py" in __exit__
                                                                        94.
                                                                        six.reraise(dj_exc_type, dj_exc_value,
                                                                                    traceback)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/utils/six.py" in reraise
                                                                        685.
                                                                        raise value.with_traceback(tb)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in ensure_connection
                                                                        199.
                                                                        self.connect()

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in connect
                                                                        171.
                                                                        self.connection = self.get_new_connection(
                                                                            conn_params)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/mysql/base.py" in get_new_connection
                                                                        265.
                                                                        conn = Database.connect(**conn_params)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/__init__.py" in Connect
                                                                        94.
                                                                        return Connection(*args, **kwargs)

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/connections.py" in __init__
                                                                        325.
                                                                        self.connect()

                                                                        File
                                                                        "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/connections.py" in connect
                                                                        630.
                                                                        raise exc

                                                                        Exception
                                                                        Type: OperationalError
                                                                        at / api / user / add_stu
                                                                        Exception
                                                                        Value: (2003,
                                                                                & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)
                                                                                < / textarea >
                                                                                < br > < br >
                                                                                < input type="submit" value="Share this traceback on a public website" >
                                                                                < / div >
                                                                                < / form >
                                                                                < / div >

                                                                                < div id="requestinfo" >
                                                                                < h2 > Request information < / h2 >

                                                                                < h3 id="user-info" > USER < / h3 >
                                                                                < p > AnonymousUser < / p >

                                                                                < h3 id="get-info" > GET < / h3 >

                                                                                < p > No GET data < / p >

                                                                                < h3 id="post-info" > POST < / h3 >

                                                                                < p > No POST data < / p >

                                                                                < h3 id="files-info" > FILES < / h3 >

                                                                                < p > No FILES data < / p >

                                                                                < h3 id="cookie-info" > COOKIES < / h3 >

                                                                                < p > No cookie data < / p >

                                                                                < h3 id="meta-info" > META < / h3 >
                                                                                < table

                                                                        class ="req" >

                                                                        < thead >
                                                                        < tr >
                                                                        < th > Variable < / th >
                                                                        < th > Value < / th >
                                                                        < / tr >
                                                                        < / thead >
                                                                        < tbody >

                                                                        < tr >
                                                                        < td > CONTENT_LENGTH < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;73&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CONTENT_TYPE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;text/plain&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DJANGO_SETTINGS_MODULE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;choujiang.settings&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > GATEWAY_INTERFACE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;CGI/1.1&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > G_BROKEN_FILENAMES < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;1&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HISTCONTROL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;ignoredups&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HISTSIZE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;3000&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HISTTIMEFORMAT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;%F %T &#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HOME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/root&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HOSTNAME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;VM_152_28_centos&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HTTP_ACCEPT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;*/*&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HTTP_ACCEPT_ENCODING < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;gzip, deflate&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HTTP_CONNECTION < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;close&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HTTP_HOST < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;api.nnzhp.cn:80&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HTTP_USER_AGENT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;python-requests/2.21.0&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HTTP_VIA < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;nginx&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HTTP_X_FORWARDED_FOR < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;117.75.179.13&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > HTTP_X_REAL_IP < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;117.75.179.13&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LANG < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;zh_CN.UTF-8&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LESSOPEN < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;||/usr/bin/lesspipe.sh %s&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LOGNAME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;root&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LS_COLORS < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lz=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.bz=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.rar=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > MAIL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/var/spool/mail/root&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > PATH < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/usr/local/anaconda3/bin:/usr/local/anaconda3/bin:/usr/local/anaconda3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/opt/lampp/bin:/usr/local/jdk1.8.0_131/bin:/root/bin:/opt/lampp/bin:/usr/local/jdk1.8.0_131/bin:/usr/local/node/bin&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > PATH_INFO < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/api/user/add_stu&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > PROMPT_COMMAND < / td >
                                                                        < td

                                                                        class ="code" > < pre > ( &  # 39;history -a; printf &quot;\\033]0;%s@%s:%s\\007&quot; &quot;${USER}&quot; &quot;${HOSTNAME%%.*}&quot; &#39;
                                                                        &  # 39;&quot;${PWD/#$HOME/~}&quot;&#39;)</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > PWD < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/usr/local/choujiang/bin&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > QUERY_STRING < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > REMOTE_ADDR < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > REMOTE_HOST < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > REQUEST_METHOD < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;POST&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > RUN_MAIN < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;true&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SCRIPT_NAME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SERVER_NAME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;localhost.localdomain&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SERVER_PORT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;8000&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SERVER_PROTOCOL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;HTTP/1.0&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SERVER_SOFTWARE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;WSGIServer/0.2&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SHELL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/bin/bash&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SHLVL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;2&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SSH_CLIENT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;111.199.93.183 64257 22333&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SSH_CONNECTION < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;111.199.93.183 64257 10.139.152.28 22333&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SSH_TTY < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/dev/pts/1&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > TERM < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;xterm-256color&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > TZ < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;Asia/Shanghai&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > USER < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;root&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > VIRTUALENVWRAPPER_HOOK_DIR < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/root/.virtualenvs&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > VIRTUALENVWRAPPER_PROJECT_FILENAME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;.project&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > VIRTUALENVWRAPPER_SCRIPT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/usr/local/anaconda3/bin/virtualenvwrapper.sh&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > VIRTUALENVWRAPPER_WORKON_CD < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;1&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > WORKON_HOME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/root/.virtualenvs&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > _ < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/usr/bin/nohup&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > wsgi.errors < / td >
                                                                        < td

                                                                        class ="code" > < pre > & lt;_io.TextIOWrapper name= &  # 39;&lt;stderr&gt;&#39; mode=&#39;w&#39; encoding=&#39;UTF-8&#39;&gt;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > wsgi.file_wrapper < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > wsgi.input < / td >
                                                                        < td

                                                                        class ="code" > < pre > & lt;_io.BufferedReader name=6 & gt; < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > wsgi.multiprocess < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > wsgi.multithread < / td >
                                                                        < td

                                                                        class ="code" > < pre > True < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > wsgi.run_once < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > wsgi.url_scheme < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;http&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > wsgi.version < / td >
                                                                        < td

                                                                        class ="code" > < pre > (1, 0) < / pre > < / td >

                                                                        < / tr >

                                                                        < / tbody >
                                                                        < / table >

                                                                        < h3
                                                                        id = "settings-info" > Settings < / h3 >
                                                                        < h4 > Using
                                                                        settings
                                                                        module < code > choujiang.settings < / code > < / h4 >
                                                                        < table

                                                                        class ="req" >

                                                                        < thead >
                                                                        < tr >
                                                                        < th > Setting < / th >
                                                                        < th > Value < / th >
                                                                        < / tr >
                                                                        < / thead >
                                                                        < tbody >

                                                                        < tr >
                                                                        < td > ABSOLUTE_URL_OVERRIDES < / td >
                                                                        < td

                                                                        class ="code" > < pre > {} < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > ADMINS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > ALLOWED_HOSTS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[&  # 39;*&#39;]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > APPEND_SLASH < / td >
                                                                        < td

                                                                        class ="code" > < pre > True < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > AUTHENTICATION_BACKENDS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[&  # 39;django.contrib.auth.backends.ModelBackend&#39;]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > AUTH_PASSWORD_VALIDATORS < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > AUTH_USER_MODEL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;auth.User&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > BASE_DIR < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/usr/local/choujiang&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CACHES < / td >
                                                                        < td

                                                                        class ="code" > < pre > {&  # 39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CACHE_MIDDLEWARE_ALIAS < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;default&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CACHE_MIDDLEWARE_KEY_PREFIX < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CACHE_MIDDLEWARE_SECONDS < / td >
                                                                        < td

                                                                        class ="code" > < pre > 600 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CSRF_COOKIE_AGE < / td >
                                                                        < td

                                                                        class ="code" > < pre > 31449600 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CSRF_COOKIE_DOMAIN < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CSRF_COOKIE_HTTPONLY < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CSRF_COOKIE_NAME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;csrftoken&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CSRF_COOKIE_PATH < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CSRF_COOKIE_SECURE < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CSRF_FAILURE_VIEW < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django.views.csrf.csrf_failure&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CSRF_HEADER_NAME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;HTTP_X_CSRFTOKEN&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > CSRF_TRUSTED_ORIGINS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DATABASES < / td >
                                                                        < td

                                                                        class ="code" > < pre > {&  # 39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,
                                                                        &  # 39;AUTOCOMMIT&#39;: True,
                                                                        &  # 39;CONN_MAX_AGE&#39;: 0,
                                                                        &  # 39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;,
                                                                        &  # 39;HOST&#39;: &#39;127.0.0.1&#39;,
                                                                        &  # 39;NAME&#39;: &#39;main&#39;,
                                                                        &  # 39;OPTIONS&#39;: {},
                                                                        &  # 39;PASSWORD&#39;: &#39;********************&#39;,
                                                                        &  # 39;PORT&#39;: &#39;3306&#39;,
                                                                        &  # 39;TEST&#39;: {&#39;CHARSET&#39;: None,
                                                                        &  # 39;COLLATION&#39;: None,
                                                                        &  # 39;MIRROR&#39;: None,
                                                                        &  # 39;NAME&#39;: None},
                                                                        &  # 39;TIME_ZONE&#39;: None,
                                                                        &  # 39;USER&#39;: &#39;besttest&#39;}}</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DATABASE_ROUTERS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DATA_UPLOAD_MAX_MEMORY_SIZE < / td >
                                                                        < td

                                                                        class ="code" > < pre > 2621440 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DATA_UPLOAD_MAX_NUMBER_FIELDS < / td >
                                                                        < td

                                                                        class ="code" > < pre > 1000 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DATETIME_FORMAT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;N j, Y, P&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DATETIME_INPUT_FORMATS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[&  # 39;%Y-%m-%d %H:%M:%S&#39;,
                                                                        &  # 39;%Y-%m-%d %H:%M:%S.%f&#39;,
                                                                        &  # 39;%Y-%m-%d %H:%M&#39;,
                                                                        &  # 39;%Y-%m-%d&#39;,
                                                                        &  # 39;%m/%d/%Y %H:%M:%S&#39;,
                                                                        &  # 39;%m/%d/%Y %H:%M:%S.%f&#39;,
                                                                        &  # 39;%m/%d/%Y %H:%M&#39;,
                                                                        &  # 39;%m/%d/%Y&#39;,
                                                                        &  # 39;%m/%d/%y %H:%M:%S&#39;,
                                                                        &  # 39;%m/%d/%y %H:%M:%S.%f&#39;,
                                                                        &  # 39;%m/%d/%y %H:%M&#39;,
                                                                        &  # 39;%m/%d/%y&#39;]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DATE_FORMAT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;N j, Y&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DATE_INPUT_FORMATS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[&  # 39;%Y-%m-%d&#39;,
                                                                        &  # 39;%m/%d/%Y&#39;,
                                                                        &  # 39;%m/%d/%y&#39;,
                                                                        &  # 39;%b %d %Y&#39;,
                                                                        &  # 39;%b %d, %Y&#39;,
                                                                        &  # 39;%d %b %Y&#39;,
                                                                        &  # 39;%d %b, %Y&#39;,
                                                                        &  # 39;%B %d %Y&#39;,
                                                                        &  # 39;%B %d, %Y&#39;,
                                                                        &  # 39;%d %B %Y&#39;,
                                                                        &  # 39;%d %B, %Y&#39;]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DEBUG < / td >
                                                                        < td

                                                                        class ="code" > < pre > True < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DEBUG_PROPAGATE_EXCEPTIONS < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DECIMAL_SEPARATOR < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;.&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DEFAULT_CHARSET < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;utf-8&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DEFAULT_CONTENT_TYPE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;text/html&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DEFAULT_EXCEPTION_REPORTER_FILTER < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DEFAULT_FILE_STORAGE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django.core.files.storage.FileSystemStorage&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DEFAULT_FROM_EMAIL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;webmaster@localhost&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DEFAULT_INDEX_TABLESPACE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DEFAULT_TABLESPACE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > DISALLOWED_USER_AGENTS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_BACKEND < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_HOST < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;localhost&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_HOST_PASSWORD < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_HOST_USER < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_PORT < / td >
                                                                        < td

                                                                        class ="code" > < pre > 25 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_SSL_CERTFILE < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_SSL_KEYFILE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_SUBJECT_PREFIX < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;[Django] &#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_TIMEOUT < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_USE_SSL < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EMAIL_USE_TLS < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > EX_TIME < / td >
                                                                        < td

                                                                        class ="code" > < pre > 60000 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > FILE_CHARSET < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;utf-8&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > FILE_UPLOAD_DIRECTORY_PERMISSIONS < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > FILE_UPLOAD_HANDLERS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[&  # 39;django.core.files.uploadhandler.MemoryFileUploadHandler&#39;,
                                                                        &  # 39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > FILE_UPLOAD_MAX_MEMORY_SIZE < / td >
                                                                        < td

                                                                        class ="code" > < pre > 2621440 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > FILE_UPLOAD_PERMISSIONS < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > FILE_UPLOAD_TEMP_DIR < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > FIRST_DAY_OF_WEEK < / td >
                                                                        < td

                                                                        class ="code" > < pre > 0 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > FIXTURE_DIRS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > FORCE_SCRIPT_NAME < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > FORMAT_MODULE_PATH < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > IGNORABLE_404_URLS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > INSTALLED_APPS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[&  # 39;django.contrib.admin&#39;,
                                                                        &  # 39;django.contrib.auth&#39;,
                                                                        &  # 39;django.contrib.contenttypes&#39;,
                                                                        &  # 39;django.contrib.sessions&#39;,
                                                                        &  # 39;django.contrib.messages&#39;,
                                                                        &  # 39;django.contrib.staticfiles&#39;,
                                                                        &  # 39;app.apps.AppConfig&#39;]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > INTERNAL_IPS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LANGUAGES < / td >
                                                                        < td

                                                                        class ="code" > < pre >[( &  # 39;af&#39;, &#39;Afrikaans&#39;),
                                                                        ( &  # 39;ar&#39;, &#39;Arabic&#39;),
                                                                        ( &  # 39;ast&#39;, &#39;Asturian&#39;),
                                                                        ( &  # 39;az&#39;, &#39;Azerbaijani&#39;),
                                                                        ( &  # 39;bg&#39;, &#39;Bulgarian&#39;),
                                                                        ( &  # 39;be&#39;, &#39;Belarusian&#39;),
                                                                        ( &  # 39;bn&#39;, &#39;Bengali&#39;),
                                                                        ( &  # 39;br&#39;, &#39;Breton&#39;),
                                                                        ( &  # 39;bs&#39;, &#39;Bosnian&#39;),
                                                                        ( &  # 39;ca&#39;, &#39;Catalan&#39;),
                                                                        ( &  # 39;cs&#39;, &#39;Czech&#39;),
                                                                        ( &  # 39;cy&#39;, &#39;Welsh&#39;),
                                                                        ( &  # 39;da&#39;, &#39;Danish&#39;),
                                                                        ( &  # 39;de&#39;, &#39;German&#39;),
                                                                        ( &  # 39;dsb&#39;, &#39;Lower Sorbian&#39;),
                                                                        ( &  # 39;el&#39;, &#39;Greek&#39;),
                                                                        ( &  # 39;en&#39;, &#39;English&#39;),
                                                                        ( &  # 39;en-au&#39;, &#39;Australian English&#39;),
                                                                        ( &  # 39;en-gb&#39;, &#39;British English&#39;),
                                                                        ( &  # 39;eo&#39;, &#39;Esperanto&#39;),
                                                                        ( &  # 39;es&#39;, &#39;Spanish&#39;),
                                                                        ( &  # 39;es-ar&#39;, &#39;Argentinian Spanish&#39;),
                                                                        ( &  # 39;es-co&#39;, &#39;Colombian Spanish&#39;),
                                                                        ( &  # 39;es-mx&#39;, &#39;Mexican Spanish&#39;),
                                                                        ( &  # 39;es-ni&#39;, &#39;Nicaraguan Spanish&#39;),
                                                                        ( &  # 39;es-ve&#39;, &#39;Venezuelan Spanish&#39;),
                                                                        ( &  # 39;et&#39;, &#39;Estonian&#39;),
                                                                        ( &  # 39;eu&#39;, &#39;Basque&#39;),
                                                                        ( &  # 39;fa&#39;, &#39;Persian&#39;),
                                                                        ( &  # 39;fi&#39;, &#39;Finnish&#39;),
                                                                        ( &  # 39;fr&#39;, &#39;French&#39;),
                                                                        ( &  # 39;fy&#39;, &#39;Frisian&#39;),
                                                                        ( &  # 39;ga&#39;, &#39;Irish&#39;),
                                                                        ( &  # 39;gd&#39;, &#39;Scottish Gaelic&#39;),
                                                                        ( &  # 39;gl&#39;, &#39;Galician&#39;),
                                                                        ( &  # 39;he&#39;, &#39;Hebrew&#39;),
                                                                        ( &  # 39;hi&#39;, &#39;Hindi&#39;),
                                                                        ( &  # 39;hr&#39;, &#39;Croatian&#39;),
                                                                        ( &  # 39;hsb&#39;, &#39;Upper Sorbian&#39;),
                                                                        ( &  # 39;hu&#39;, &#39;Hungarian&#39;),
                                                                        ( &  # 39;ia&#39;, &#39;Interlingua&#39;),
                                                                        ( &  # 39;id&#39;, &#39;Indonesian&#39;),
                                                                        ( &  # 39;io&#39;, &#39;Ido&#39;),
                                                                        ( &  # 39;is&#39;, &#39;Icelandic&#39;),
                                                                        ( &  # 39;it&#39;, &#39;Italian&#39;),
                                                                        ( &  # 39;ja&#39;, &#39;Japanese&#39;),
                                                                        ( &  # 39;ka&#39;, &#39;Georgian&#39;),
                                                                        ( &  # 39;kk&#39;, &#39;Kazakh&#39;),
                                                                        ( &  # 39;km&#39;, &#39;Khmer&#39;),
                                                                        ( &  # 39;kn&#39;, &#39;Kannada&#39;),
                                                                        ( &  # 39;ko&#39;, &#39;Korean&#39;),
                                                                        ( &  # 39;lb&#39;, &#39;Luxembourgish&#39;),
                                                                        ( &  # 39;lt&#39;, &#39;Lithuanian&#39;),
                                                                        ( &  # 39;lv&#39;, &#39;Latvian&#39;),
                                                                        ( &  # 39;mk&#39;, &#39;Macedonian&#39;),
                                                                        ( &  # 39;ml&#39;, &#39;Malayalam&#39;),
                                                                        ( &  # 39;mn&#39;, &#39;Mongolian&#39;),
                                                                        ( &  # 39;mr&#39;, &#39;Marathi&#39;),
                                                                        ( &  # 39;my&#39;, &#39;Burmese&#39;),
                                                                        ( &  # 39;nb&#39;, &#39;Norwegian BokmÃ¥l&#39;),
                                                                        ( &  # 39;ne&#39;, &#39;Nepali&#39;),
                                                                        ( &  # 39;nl&#39;, &#39;Dutch&#39;),
                                                                        ( &  # 39;nn&#39;, &#39;Norwegian Nynorsk&#39;),
                                                                        ( &  # 39;os&#39;, &#39;Ossetic&#39;),
                                                                        ( &  # 39;pa&#39;, &#39;Punjabi&#39;),
                                                                        ( &  # 39;pl&#39;, &#39;Polish&#39;),
                                                                        ( &  # 39;pt&#39;, &#39;Portuguese&#39;),
                                                                        ( &  # 39;pt-br&#39;, &#39;Brazilian Portuguese&#39;),
                                                                        ( &  # 39;ro&#39;, &#39;Romanian&#39;),
                                                                        ( &  # 39;ru&#39;, &#39;Russian&#39;),
                                                                        ( &  # 39;sk&#39;, &#39;Slovak&#39;),
                                                                        ( &  # 39;sl&#39;, &#39;Slovenian&#39;),
                                                                        ( &  # 39;sq&#39;, &#39;Albanian&#39;),
                                                                        ( &  # 39;sr&#39;, &#39;Serbian&#39;),
                                                                        ( &  # 39;sr-latn&#39;, &#39;Serbian Latin&#39;),
                                                                        ( &  # 39;sv&#39;, &#39;Swedish&#39;),
                                                                        ( &  # 39;sw&#39;, &#39;Swahili&#39;),
                                                                        ( &  # 39;ta&#39;, &#39;Tamil&#39;),
                                                                        ( &  # 39;te&#39;, &#39;Telugu&#39;),
                                                                        ( &  # 39;th&#39;, &#39;Thai&#39;),
                                                                        ( &  # 39;tr&#39;, &#39;Turkish&#39;),
                                                                        ( &  # 39;tt&#39;, &#39;Tatar&#39;),
                                                                        ( &  # 39;udm&#39;, &#39;Udmurt&#39;),
                                                                        ( &  # 39;uk&#39;, &#39;Ukrainian&#39;),
                                                                        ( &  # 39;ur&#39;, &#39;Urdu&#39;),
                                                                        ( &  # 39;vi&#39;, &#39;Vietnamese&#39;),
                                                                        ( &  # 39;zh-hans&#39;, &#39;Simplified Chinese&#39;),
                                                                        ( &  # 39;zh-hant&#39;, &#39;Traditional Chinese&#39;)]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LANGUAGES_BIDI < / td >
                                                                        < td

                                                                        class ="code" > < pre >[&  # 39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LANGUAGE_CODE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;zh-Hans&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LANGUAGE_COOKIE_AGE < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LANGUAGE_COOKIE_DOMAIN < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LANGUAGE_COOKIE_NAME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django_language&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LANGUAGE_COOKIE_PATH < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LOCALE_PATHS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LOGGING < / td >
                                                                        < td

                                                                        class ="code" > < pre > {} < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LOGGING_CONFIG < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;logging.config.dictConfig&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LOGIN_REDIRECT_URL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/accounts/profile/&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LOGIN_URL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/accounts/login/&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > LOGOUT_REDIRECT_URL < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > MANAGERS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > MEDIA_ROOT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/usr/local/choujiang/static/img&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > MEDIA_URL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/static/img/&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > MESSAGE_STORAGE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > MIDDLEWARE < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > MIDDLEWARE_CLASSES < / td >
                                                                        < td

                                                                        class ="code" > < pre >[&  # 39;django.middleware.security.SecurityMiddleware&#39;,
                                                                        &  # 39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
                                                                        &  # 39;django.middleware.common.CommonMiddleware&#39;,
                                                                        &  # 39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
                                                                        &  # 39;django.contrib.auth.middleware.SessionAuthenticationMiddleware&#39;,
                                                                        &  # 39;django.contrib.messages.middleware.MessageMiddleware&#39;,
                                                                        &  # 39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > MIGRATION_MODULES < / td >
                                                                        < td

                                                                        class ="code" > < pre > {} < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > MONTH_DAY_FORMAT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;F j&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > NUMBER_GROUPING < / td >
                                                                        < td

                                                                        class ="code" > < pre > 0 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > PASSWORD_HASHERS < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > PASSWORD_RESET_TIMEOUT_DAYS < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > PREPEND_WWW < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > REDIS_HOST < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > REDIS_PASSWD < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > REDIS_PORT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;6379&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > ROOT_URLCONF < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;choujiang.urls&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SECRET_KEY < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SECURE_BROWSER_XSS_FILTER < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SECURE_CONTENT_TYPE_NOSNIFF < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SECURE_HSTS_INCLUDE_SUBDOMAINS < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SECURE_HSTS_SECONDS < / td >
                                                                        < td

                                                                        class ="code" > < pre > 0 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SECURE_PROXY_SSL_HEADER < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SECURE_REDIRECT_EXEMPT < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SECURE_SSL_HOST < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SECURE_SSL_REDIRECT < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SERVER_EMAIL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;root@localhost&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_CACHE_ALIAS < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;default&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_COOKIE_AGE < / td >
                                                                        < td

                                                                        class ="code" > < pre > 1209600 < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_COOKIE_DOMAIN < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_COOKIE_HTTPONLY < / td >
                                                                        < td

                                                                        class ="code" > < pre > True < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_COOKIE_NAME < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;sessionid&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_COOKIE_PATH < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_COOKIE_SECURE < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_ENGINE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django.contrib.sessions.backends.db&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_EXPIRE_AT_BROWSER_CLOSE < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_FILE_PATH < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_SAVE_EVERY_REQUEST < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SESSION_SERIALIZER < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django.contrib.sessions.serializers.JSONSerializer&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SETTINGS_MODULE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;choujiang.settings&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SHORT_DATETIME_FORMAT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;m/d/Y P&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SHORT_DATE_FORMAT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;m/d/Y&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SIGNING_BACKEND < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django.core.signing.TimestampSigner&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > SILENCED_SYSTEM_CHECKS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > STATICFILES_DIRS < / td >
                                                                        < td

                                                                        class ="code" > < pre > ( &  # 39;/usr/local/choujiang/static&#39;,)</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > STATICFILES_FINDERS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[&  # 39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,
                                                                        &  # 39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > STATICFILES_STORAGE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > STATIC_ROOT < / td >
                                                                        < td

                                                                        class ="code" > < pre > None < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > STATIC_URL < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;/static/&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > TEMPLATES < / td >
                                                                        < td

                                                                        class ="code" > < pre >[{&  # 39;APP_DIRS&#39;: True,
                                                                        &  # 39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,
                                                                        &  # 39;DIRS&#39;: [&#39;/usr/local/choujiang/templates&#39;],
                                                                        &  # 39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.template.context_processors.debug&#39;,
                                                                        &  # 39;django.template.context_processors.request&#39;,
                                                                        &  # 39;django.contrib.auth.context_processors.auth&#39;,
                                                                        &  # 39;django.contrib.messages.context_processors.messages&#39;]}}]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > TEST_NON_SERIALIZED_APPS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[] < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > TEST_RUNNER < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;django.test.runner.DiscoverRunner&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > THOUSAND_SEPARATOR < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;,&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > TIME_FORMAT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;P&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > TIME_INPUT_FORMATS < / td >
                                                                        < td

                                                                        class ="code" > < pre >[&  # 39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>
                                                                        < / tr >

                                                                        < tr >
                                                                        < td > TIME_ZONE < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;Asia/Shanghai&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > USE_ETAGS < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > USE_I18N < / td >
                                                                        < td

                                                                        class ="code" > < pre > True < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > USE_L10N < / td >
                                                                        < td

                                                                        class ="code" > < pre > True < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > USE_THOUSAND_SEPARATOR < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > USE_TZ < / td >
                                                                        < td

                                                                        class ="code" > < pre > True < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > USE_X_FORWARDED_HOST < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > USE_X_FORWARDED_PORT < / td >
                                                                        < td

                                                                        class ="code" > < pre > False < / pre > < / td >

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > WSGI_APPLICATION < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;choujiang.wsgi.application&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > X_FRAME_OPTIONS < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;SAMEORIGIN&#39;</pre></td>

                                                                        < / tr >

                                                                        < tr >
                                                                        < td > YEAR_MONTH_FORMAT < / td >
                                                                        < td

                                                                        class ="code" > < pre > &  # 39;F Y&#39;</pre></td>

                                                                        < / tr >

                                                                        < / tbody >
                                                                        < / table >

                                                                        < / div >

                                                                        < div
                                                                        id = "explanation" >
                                                                        < p >
                                                                        You
                                                                        're seeing this error because you have <code>DEBUG = True</code> in your
                                                                        Django
                                                                        settings
                                                                        file.Change
                                                                        that
                                                                        to < code > False < / code >, and Django
                                                                        will
                                                                        display
                                                                        a
                                                                        standard
                                                                        page
                                                                        generated
                                                                        by

                                                                C:\Users\Administrator\AppData\Local\Programs\Python\Python36 - 32\Scripts\python.exe
                                                                C: / Users / Administrator / PycharmProjects / untitled / 123
                                                                test / lianxi02.py

                                                                < !DOCTYPE
                                                                html >
                                                                < html
                                                                lang = "en" >
                                                                < head >
                                                                < meta
                                                                http - equiv = "content-type"
                                                                content = "text/html; charset=utf-8" >
                                                                < meta
                                                                name = "robots"
                                                                content = "NONE,NOARCHIVE" >
                                                                < title > OperationalError
                                                                at / api / user / add_stu < / title >
                                                                < style
                                                                type = "text/css" >
                                                                html * {padding: 0;
                                                                margin: 0;}
                                                                body * {padding: 10px 20px;}
                                                                body * * {padding: 0;}
                                                                body
                                                                {font: small sans - serif;}
                                                                body > div
                                                                {border - bottom: 1px solid  # ddd; }
                                                                 h1 {font - weight: normal;}
                                                                h2
                                                                {margin - bottom: .8em;}
                                                                h2
                                                                span
                                                                {font - size: 80 %;
                                                                color:  # 666; font-weight:normal; }
                                                                h3
                                                                {margin: 1em 0 .5em 0;}
                                                                h4
                                                                {margin: 0 0 .5em 0;
                                                                font - weight: normal;}
                                                                code, pre
                                                                {font - size: 100 %;
                                                                white - space: pre - wrap;}
                                                                table
                                                                {border: 1px solid
                                                                 # ccc; border-collapse: collapse; width:100%; background:white; }
                                                                 tbody td, tbody th {vertical - align: top;
                                                                padding: 2
                                                                px
                                                                3
                                                                px;}
                                                                thead
                                                                th
                                                                {
                                                                    padding: 1px 6px 1px 3px;
                                                                background:  # fefefe; text-align:left;
                                                                font - weight:normal;
                                                                font - size: 11
                                                                px;
                                                                border: 1
                                                                px
                                                                solid  # ddd;
                                                                }
                                                                tbody
                                                                th
                                                                {width: 12em;
                                                                text - align: right;
                                                                color:  # 666; padding-right:.5em; }
                                                                table.vars
                                                                {margin: 5px 0 2px 40px;}
                                                                table.vars
                                                                td, table.req
                                                                td
                                                                {font - family: monospace;}
                                                                table
                                                                td.code
                                                                {width: 100 %;}
                                                                table
                                                                td.code
                                                                pre
                                                                {overflow: hidden;}
                                                                table.source
                                                                th
                                                                {color:  # 666; }
                                                                     table.source td {font - family: monospace;
                                                                white - space: pre;
                                                                border - bottom: 1
                                                                px
                                                                solid  # eee; }
                                                                ul.traceback
                                                                {list - style - type: none;
                                                                color:  # 222; }
                                                                ul.traceback
                                                                li.frame
                                                                {padding - bottom: 1em;
                                                                color:  # 666; }
                                                                ul.traceback
                                                                li.user
                                                                {background - color:  # e0e0e0; color:#000 }
                                                                     div.context {padding: 10px 0;
                                                                overflow: hidden;}
                                                                div.context
                                                                ol
                                                                {padding - left: 30px;
                                                                margin: 0
                                                                10
                                                                px;
                                                                list - style - position: inside;}
                                                                div.context
                                                                ol
                                                                li
                                                                {font - family: monospace;
                                                                white - space: pre;
                                                                color:  # 777; cursor:pointer; padding-left: 2px; }
                                                                div.context
                                                                ol
                                                                li
                                                                pre
                                                                {display: inline;}
                                                                div.context
                                                                ol.context - line
                                                                li
                                                                {
                                                                    color:  # 505050; background-color:#dfdfdf; padding: 3px 2px; }
                                                                        div.context ol.context - line li
                                                                    span {position: absolute;
                                                                right: 32
                                                                px;}
                                                                .user
                                                                div.context
                                                                ol.context - line
                                                                li
                                                                {background - color:  # bbb; color:#000; }
                                                                    .user
                                                                div.context
                                                                ol
                                                                li
                                                                {color:  # 666; }
                                                                     div.commands {margin - left: 40px;}
                                                                div.commands
                                                                a
                                                                {color:  # 555; text-decoration:none; }
                                                                    .user
                                                                div.commands
                                                                a
                                                                {color: black;}
                                                                # summary { background: #ffc; }
                                                                # summary h2 { font-weight: normal; color: #666; }
                                                                # explanation { background:#eee; }
                                                                # template, #template-not-exist { background:#f6f6f6; }
                                                                # template-not-exist ul { margin: 0 0 10px 20px; }
                                                                # template-not-exist .postmortem-section { margin-bottom: 3px; }
                                                                # unicode-hint { background:#eee; }
                                                                # traceback { background:#eee; }
                                                                # requestinfo { background:#f6f6f6; padding-left:120px; }
                                                                # summary table { border:none; background:transparent; }
                                                                # requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
                                                                # requestinfo h3 { margin-bottom:-1em; }
                                                                .error
                                                                {background:  # ffc; }
                                                                    .specific
                                                                {color:  # cc3300; font-weight:bold; }
                                                                     h2 span.commands {font - size: .7em;}
                                                                span.commands
                                                                a: link
                                                                {color:  # 5E5694;}
                                                                     pre.exception_value {font - family: sans - serif;
                                                                color:  # 666; font-size: 1.5em; margin: 10px 0 10px 0; }
                                                                .append - bottom
                                                                {margin - bottom: 10px;}
                                                                < / style >

                                                                    < script
                                                                type = "text/javascript" >
                                                                // < !--
                                                                function
                                                                getElementsByClassName(oElm, strTagName, strClassName)
                                                                {
                                                                // Written
                                                                by
                                                                Jonathan
                                                                Snook, http: // www.snook.ca / jon;
                                                                Add - ons
                                                                by
                                                                Robert
                                                                Nyman, http: // www.robertnyman.com
                                                                var
                                                                arrElements = (
                                                                            strTagName == "*" & & document.all)? document.all: \
                                                                    oElm.getElementsByTagName(strTagName);
                                                                var
                                                                arrReturnElements = new
                                                                Array();
                                                                strClassName = strClassName.replace( /\- / g, "\-");
                                                                var
                                                                oRegExp = new
                                                                RegExp("(^|\s)" + strClassName + "(\s|$)");
                                                                var
                                                                oElement;
                                                                for (var i=0; i < arrElements.length; i++)
                                                                {
                                                                    oElement = arrElements[i];
                                                                if (oRegExp.test(oElement.className))
                                                                {
                                                                arrReturnElements.push(oElement);
                                                                }
                                                                }
                                                                return (arrReturnElements)
                                                                }
                                                                function
                                                                hideAll(elems)
                                                                {
                                                                for (var e = 0; e < elems.length; e++) {
                                                                    elems[e].style.display = 'none';
                                                                }
                                                                }
                                                                window.onload = function()
                                                                {
                                                                hideAll(
                                                                    getElementsByClassName(document, 'table', 'vars'));
                                                                hideAll(getElementsByClassName(document, 'ol',
                                                                                               'pre-context'));
                                                                hideAll(getElementsByClassName(document, 'ol',
                                                                                               'post-context'));
                                                                hideAll(getElementsByClassName(document, 'div',
                                                                                               'pastebin'));
                                                                }
                                                                function
                                                                toggle()
                                                                {
                                                                for (var i = 0; i < arguments.length; i++) {
                                                                    var e = document.getElementById(arguments[i]);
                                                                if (e) {
                                                                e.style.display = e.style.display == 'none' ? 'block': 'none';
                                                                }
                                                                }
                                                                return false;
                                                                }
                                                                function
                                                                varToggle(link, id)
                                                                {
                                                                toggle('v' + id);
                                                                var
                                                                s = link.getElementsByTagName('span')[0];
                                                                var
                                                                uarr = String.fromCharCode(0x25b6);
                                                                var
                                                                darr = String.fromCharCode(0x25bc);
                                                                s.textContent = s.textContent == uarr ? darr: uarr;
                                                                return false;
                                                                }
                                                                function
                                                                switchPastebinFriendly(link)
                                                                {
                                                                s1 = "Switch to copy-and-paste view";
                                                                s2 = "Switch back to interactive view";
                                                                link.textContent = link.textContent.trim() == s1 ? s2: s1;
                                                                toggle('browserTraceback', 'pastebinTraceback');
                                                                return false;
                                                                }
                                                                // -->
                                                                < / script >

                                                                    < / head >
                                                                        < body >
                                                                        < div
                                                                id = "summary" >
                                                                     < h1 > OperationalError
                                                                at / api / user / add_stu < / h1 >
                                                                                              < pre

                                                                class ="exception_value" > (2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre>
                                                                < table

                                                                class ="meta" >

                                                                < tr >
                                                                < th > Request
                                                                Method: < / th >
                                                                < td > POST < / td >
                                                                < / tr >
                                                                < tr >
                                                                < th > Request
                                                                URL: < / th >
                                                                < td > http: // api.nnzhp.cn: 80 / api / user / add_stu < / td >
                                                                < / tr >

                                                                < tr >
                                                                < th > Django
                                                                Version: < / th >
                                                                < td > 1.10 < / td >
                                                                < / tr >

                                                                < tr >
                                                                < th > Exception
                                                                Type: < / th >
                                                                < td > OperationalError < / td >
                                                                < / tr >

                                                                < tr >
                                                                < th > Exception
                                                                Value: < / th >
                                                                < td > < pre > (2003,
                                                                                & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                                                                < / tr >

                                                                                < tr >
                                                                                < th > Exception Location: < / th >
                                                                                < td > / usr / local / anaconda3 / lib / python3.6 / site-packages / pymysql / connections.py in connect, line 630 < / td >
                                                                                < / tr >

                                                                                < tr >
                                                                                < th > Python Executable: < / th >
                                                                                < td > / usr / local / anaconda3 / bin / python < / td >
                                                                                < / tr >
                                                                                < tr >
                                                                                < th > Python Version: < / th >
                                                                                < td > 3.6.4 < / td >
                                                                                < / tr >
                                                                                < tr >
                                                                                < th > Python Path: < / th >
                                                                                < td > < pre >[&  # 39;/usr/local/choujiang&#39;,
                                                                                &  # 39;/usr/local/anaconda3/lib/python36.zip&#39;,
                                                                                &  # 39;/usr/local/anaconda3/lib/python3.6&#39;,
                                                                                &  # 39;/usr/local/anaconda3/lib/python3.6/lib-dynload&#39;,
                                                                                &  # 39;/usr/local/anaconda3/lib/python3.6/site-packages&#39;]</pre></td>
                                                                                < / tr >
                                                                                < tr >
                                                                                < th > Server time: < / th >
                                                                                < td > ææå­, 11 äºæ 2019 21:41:34 +0800 < / td >
                                                                                < / tr >
                                                                                < / table >
                                                                                < / div >

                                                                                < div id="traceback" >
                                                                                < h2 > Traceback < span

                                                                class ="commands" > < a href="#" onclick="return switchPastebinFriendly(this);" >

                                                                Switch
                                                                to
                                                                copy - and -paste
                                                                view < / a > < / span >
                                                                < / h2 >

                                                                < div
                                                                id = "browserTraceback" >
                                                                < ul

                                                                class ="traceback" >

                                                                < li

                                                                class ="frame user" >

                                                                < code > / usr / local / anaconda3 / lib / python3
                                                                .6 / site - packages / pymysql / connections.py < / code > in < code > connect < / code >

                                                                < div

                                                                class ="context" id="c140655233622152" >

                                                                < ol
                                                                start = "576"

                                                                class ="pre-context" id="pre140655233622152" >

                                                                < li
                                                                onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre > kwargs = {} < / pre > < / li >

                                                                < li
                                                                onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
                                                                if self.bind_address is not None: < / pre > < / li >

                                                                < li
                                                                onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
                                                                kwargs[ &  # 39;source_address&#39;] = (self.bind_address, 0)</pre></li>

                                                                < li
                                                                onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >

                                                            while True: < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
                                                            try: < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre > sock = socket.create_connection( < / pre > < / li >

                                                                                                                                                                                     < li
                                                            onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre > (
                                                                self.host,
                                                                self.port), self.connect_timeout, < / pre > < / li >

                                                                                                                < / ol >

                                                                                                                    < ol
                                                            start = "583"

                                                            class ="context-line" >

                                                            < li
                                                            onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
                                                            ** kwargs) < / pre > < span > ... < / span > < / li > < / ol >

                                                                                                                      < ol
                                                            start = '584'

                                                            class ="post-context" id="post140655233622152" >

                                                            < li
                                                            onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
                                                            break < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >                        except (
                                                                OSError, IOError) as e: < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
                                                            if e.errno == errno.EINTR: < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
                                                            continue < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
                                                            raise < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre > self.host_info = & quot;
                                                            socket % s: % d & quot; % (self.host,
                                                                                       self.port) < / pre > < / li >

                                                            < / ol >

                                                            < / div >

                                                            < div

                                                            class ="commands" >

                                                            < a
                                                            href = "#"
                                                            onclick = "return varToggle(this, '140655233622152')" > < span > &  # x25b6;</span> Local vars</a>

                                                            < / div >
                                                            < table

                                                            class ="vars" id="v140655233622152" >

                                                            < thead >
                                                            < tr >
                                                            < th > Variable < / th >
                                                            < th > Value < / th >
                                                            < / tr >
                                                            < / thead >
                                                            < tbody >

                                                            < tr >
                                                            < td > exc < / td >
                                                            < td

                                                            class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                                            < / tr >

                                                            < tr >
                                                            < td > kwargs < / td >
                                                            < td

                                                            class ="code" > < pre > {} < / pre > < / td >

                                                            < / tr >

                                                            < tr >
                                                            < td > self < / td >
                                                            < td

                                                            class ="code" > < pre > & lt;pymysql.connections.Connection object at 0x7fecd8586828 & gt; < / pre > < / td >

                                                            < / tr >

                                                            < tr >
                                                            < td > sock < / td >
                                                            < td

                                                            class ="code" > < pre > None < / pre > < / td >

                                                            < / tr >

                                                            < / tbody >
                                                            < / table >

                                                            < / li >

                                                            < li

                                                            class ="frame user" >

                                                            < code > / usr / local / anaconda3 / lib / python3
                                                            .6 / socket.py < / code > in < code > create_connection < / code >

                                                            < div

                                                            class ="context" id="c140655233625992" >

                                                            < ol
                                                            start = "717"

                                                            class ="pre-context" id="pre140655233625992" >

                                                            < li
                                                            onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >        except error as _: < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > err = _ < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >
                                                            if sock is not None: < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > sock.close() < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >
                                                            if err is not None: < / pre > < / li >

                                                            < / ol >

                                                            < ol
                                                            start = "724"

                                                            class ="context-line" >

                                                            < li
                                                            onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >
                                                            raise err < / pre > < span > ... < / span > < / li > < / ol >

                                                            < ol
                                                            start = '725'

                                                            class ="post-context" id="post140655233625992" >

                                                            < li
                                                            onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > else: < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >
                                                            raise error( & quot;
                                                            getaddrinfo
                                                            returns
                                                            an
                                                            empty
                                                            list & quot;) < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > < / pre > < / li >

                                                            < li
                                                            onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >

                                                            def getaddrinfo(host, port, family=0, type=0, proto=0,
                                                                            flags=0):
                                                                <

                                                            / pre > < / li >

                                                        < li
                                                        onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > & quot; & quot; & quot;
                                                        Resolve
                                                        host and port
                                                        into
                                                        list
                                                        of
                                                        address
                                                        info
                                                        entries. < / pre > < / li >

                                                        < li
                                                        onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > < / pre > < / li >

                                                        < / ol >

                                                        < / div >

                                                        < div

                                                        class ="commands" >

                                                        < a
                                                        href = "#"
                                                        onclick = "return varToggle(this, '140655233625992')" > < span > &  # x25b6;</span> Local vars</a>

                                                        < / div >
                                                        < table

                                                        class ="vars" id="v140655233625992" >

                                                        < thead >
                                                        < tr >
                                                        < th > Variable < / th >
                                                        < th > Value < / th >
                                                        < / tr >
                                                        < / thead >
                                                        < tbody >

                                                        < tr >
                                                        < td > address < / td >
                                                        < td

                                                        class ="code" > < pre > ( &  # 39;127.0.0.1&#39;, 3306)</pre></td>
                                                        < / tr >

                                                        < tr >
                                                        < td > af < / td >
                                                        < td

                                                        class ="code" > < pre > & lt;AddressFamily.AF_INET: 2 & gt; <

                                                        / pre > < / td >

                                                    < / tr >

                                                    < tr >
                                                    < td > canonname < / td >
                                                    < td

                                                    class ="code" > < pre > &  # 39;&#39;</pre></td>

                                                    < / tr >

                                                    < tr >
                                                    < td > err < / td >
                                                    < td

                                                    class ="code" > < pre > ConnectionRefusedError(111, &  # 39;Connection refused&#39;)</pre></td>
                                                    < / tr >

                                                    < tr >
                                                    < td > host < / td >
                                                    < td

                                                    class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

                                                    < / tr >

                                                    < tr >
                                                    < td > port < / td >
                                                    < td

                                                    class ="code" > < pre > 3306 < / pre > < / td >

                                                    < / tr >

                                                    < tr >
                                                    < td > proto < / td >
                                                    < td

                                                    class ="code" > < pre > 6 < / pre > < / td >

                                                    < / tr >

                                                    < tr >
                                                    < td > res < / td >
                                                    < td

                                                    class ="code" > < pre > ( & lt;AddressFamily.AF_INET: 2 & gt;,

                                                    & lt;
                                                    SocketKind.SOCK_STREAM: 1 & gt;,
                                                    6,
                                                    &  # 39;&#39;,
                                                    (&  # 39;127.0.0.1&#39;, 3306))</pre></td>
                                                    < / tr >

                                                    < tr >
                                                    < td > sa < / td >
                                                    < td

                                                    class ="code" > < pre > ( &  # 39;127.0.0.1&#39;, 3306)</pre></td>
                                                    < / tr >

                                                    < tr >
                                                    < td > sock < / td >
                                                    < td

                                                    class ="code" > < pre > & lt;socket.socket[closed] fd=-1, family=AddressFamily.AF_INET, type=2049, proto=6 & gt; < / pre > < / td >

                                                    < / tr >

                                                    < tr >
                                                    < td > socktype < / td >
                                                    < td

                                                    class ="code" > < pre > & lt;SocketKind.SOCK_STREAM: 1 & gt; <

                                                    / pre > < / td >

< / tr >

< tr >
< td > source_address < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > timeout < / td >
< td


class ="code" > < pre > 10 < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame user" >

< code > / usr / local / anaconda3 / lib / python3
.6 / socket.py < / code > in < code > create_connection < / code >

< div


class ="context" id="c140655233623624" >

< ol
start = "706"


class ="pre-context" id="pre140655233623624" >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > sock = None < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >
try: < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > sock = socket(af, socktype,
                                                                                        proto) < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >
if timeout is not _GLOBAL_DEFAULT_TIMEOUT: < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > sock.settimeout(timeout) < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >
if source_address: < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > sock.bind(source_address) < / pre > < / li >

< / ol >

< ol
start = "713"


class ="context-line" >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >
sock.connect(sa) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '714'


class ="post-context" id="post140655233623624" >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >  # Break explicitly a reference cycle</pre></li>

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > err = None < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >
return sock < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >        except error as _: < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > err = _ < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233623624')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233623624" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > address < / td >
< td


class ="code" > < pre > ( &  # 39;127.0.0.1&#39;, 3306)</pre></td>
< / tr >

< tr >
< td > af < / td >
< td


class ="code" > < pre > & lt;AddressFamily.AF_INET: 2 & gt; <

/ pre > < / td >
< / tr >

< tr >
< td > canonname < / td >
< td


class ="code" > < pre > &  # 39;&#39;</pre></td>

< / tr >

< tr >
< td > err < / td >
< td


class ="code" > < pre > ConnectionRefusedError(111, &  # 39;Connection refused&#39;)</pre></td>
< / tr >

< tr >
< td > host < / td >
< td


class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

< / tr >

< tr >
< td > port < / td >
< td


class ="code" > < pre > 3306 < / pre > < / td >

< / tr >

< tr >
< td > proto < / td >
< td


class ="code" > < pre > 6 < / pre > < / td >

< / tr >

< tr >
< td > res < / td >
< td


class ="code" > < pre > ( & lt;AddressFamily.AF_INET: 2 & gt;,

& lt;
SocketKind.SOCK_STREAM: 1 & gt;,
6,
&  # 39;&#39;,
(&  # 39;127.0.0.1&#39;, 3306))</pre></td>
< / tr >

< tr >
< td > sa < / td >
< td


class ="code" > < pre > ( &  # 39;127.0.0.1&#39;, 3306)</pre></td>
< / tr >

< tr >
< td > sock < / td >
< td


class ="code" > < pre > & lt;socket.socket[closed] fd=-1, family=AddressFamily.AF_INET, type=2049, proto=6 & gt; < / pre > < / td >

< / tr >

< tr >
< td > socktype < / td >
< td


class ="code" > < pre > & lt;SocketKind.SOCK_STREAM: 1 & gt; <

/ pre > < / td >
< / tr >

< tr >
< td > source_address < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > timeout < / td >
< td


class ="code" > < pre > 10 < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li > < h3 >

During
handling
of
the
above
exception([Errno 111]
Connection
refused), another
exception
occurred:

< / h3 > < / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / base / base.py < / code > in < code > ensure_connection < / code >

< div


class ="context" id="c140655233626056" >

< ol
start = "192"


class ="pre-context" id="pre140655233626056" >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >


def ensure_connection(self): <

/ pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > Guarantees
that
a
connection
to
the
database is established. < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
if self.connection is None: < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
with self.wrap_database_errors: < / pre > < / li >

< / ol >

< ol
start = "199"


class ="context-line" >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
self.connect() < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '200'


class ="post-context" id="post140655233626056" >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >  # ##### Backend-specific wrappers for PEP-249 connection methods #####</pre></li>

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >


def _cursor(self): <

/ pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > self.ensure_connection() < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
with self.wrap_database_errors: < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233626056')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233626056" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / base / base.py < / code > in < code > connect < / code >

< div


class ="context" id="c140655233624904" >

< ol
start = "164"


class ="pre-context" id="pre140655233624904" >

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >  # Reset parameters defining when to close the connection</pre></li>

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > max_age =
self.settings_dict[ &  # 39;CONN_MAX_AGE&#39;]</pre></li>

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.close_at = None if max_age is None else time.time() + max_age < / pre > < / li >

                                                                                                                                                           < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.closed_in_transaction = False < / pre > < / li >

                                                                                                                           < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.errors_occurred = False < / pre > < / li >

                                                                                                                     < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >  # Establish the connection</pre></li>

          < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > conn_params = self.get_connection_params() < / pre > < / li >

                                                                                                                                   < / ol >

                                                                                                                                       < ol
start = "171"


class ="context-line" >

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >
self.connection = self.get_new_connection(conn_params) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '172'


class ="post-context" id="post140655233624904" >

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.set_autocommit(
    self.settings_dict[ &  # 39;AUTOCOMMIT&#39;])</pre></li>

    < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.init_connection_state() < / pre > < / li >

                                                                                                                     < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > connection_created.send(sender=self.__class__,
                                                                                                  connection=self) < / pre > < / li >

                                                                                                                                 < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > < / pre > < / li >

                                                                                        < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.run_on_commit = [] < / pre > < / li >

                                                                                                                < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > < / pre > < / li >

                                                                                        < / ol >

                                                                                            < / div >

                                                                                                < div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233624904')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233624904" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > conn_params < / td >
< td


class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
&  # 39;client_flag&#39;: 2,
&  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
1: &


lt;


class &  # 39;int&#39;&gt;,
    2: & lt;

    class &  # 39;int&#39;&gt;,
        3: & lt;

        class &  # 39;int&#39;&gt;,

            4: & lt;

        class &  # 39;float&#39;&gt;,

            5: & lt;

        class &  # 39;float&#39;&gt;,

            7: & lt;

        function
        convert_mysql_timestamp
        at
        0x7fecdb3d7bf8 & gt;,
        8: & lt;

        class &  # 39;int&#39;&gt;,
            9: & lt;

            class &  # 39;int&#39;&gt;,

                10: & lt;

            function
            convert_date
            at
            0x7fecdb3d7b70 & gt;,
            11: & lt;
            function
            typecast_time
            at
            0x7fecdd779bf8 & gt;,
            12: & lt;
            function
            convert_datetime
            at
            0x7fecdb3d79d8 & gt;,
            13: & lt;

            class &  # 39;int&#39;&gt;,
                15: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                16: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                246: & lt;
                function
                typecast_decimal
                at
                0x7fecdd779d08 & gt;,
                248: & lt;
                function
                convert_set
                at
                0x7fecdb3d7c80 & gt;,
                249: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                250: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                251: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                252: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                253: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                254: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                & lt;

                class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                    & lt;

                    class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                        & lt;

                    class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                        & lt;

                    class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                        & lt;

                    class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                        & lt;

                    class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                        & lt;

                    class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                        & lt;

                    class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                        & lt;

                    class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                        & lt;

                    class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                        & lt;

                    class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                        & lt;

                    class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                        & lt;

                    class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

            &  # 39;db&#39;: &#39;main&#39;,
            &  # 39;host&#39;: &#39;127.0.0.1&#39;,
            &  # 39;passwd&#39;: &#39;123456&#39;,
            &  # 39;port&#39;: 3306,
            &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
            < / tr >

            < tr >
            < td > max_age < / td >
            < td

            class ="code" > < pre > 0 < / pre > < / td >

            < / tr >

            < tr >
            < td > self < / td >
            < td

            class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

            < / tr >

            < / tbody >
            < / table >

            < / li >

            < li

            class ="frame django" >

            < code > / usr / local / anaconda3 / lib / python3
            .6 / site - packages / django / db / backends / mysql / base.py < / code > in < code > get_new_connection < / code >

            < div

            class ="context" id="c140655233624776" >

            < ol
            start = "258"

            class ="pre-context" id="pre140655233624776" >

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >  # We need the number of potentially affected rows after an</pre></li>

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >  # &quot;UPDATE&quot;, not the number of changed rows.</pre></li>

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
            kwargs[ &  # 39;client_flag&#39;] = CLIENT.FOUND_ROWS</pre></li>

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > kwargs.update(
                settings_dict[ &  # 39;OPTIONS&#39;])</pre></li>

                < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >

        return kwargs < / pre > < / li >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > < / pre > < / li >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >

        def get_new_connection(self, conn_params):
            <

            / pre > < / li >

        < / ol >

        < ol
        start = "265"

        class ="context-line" >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
        conn = Database.connect(**conn_params) < / pre > < span > ... < / span > < / li > < / ol >

        < ol
        start = '266'

        class ="post-context" id="post140655233624776" >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > conn.encoders[SafeText] =
        conn.encoders[six.text_type] < / pre > < / li >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > conn.encoders[SafeBytes] =
        conn.encoders[bytes] < / pre > < / li >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
        return conn < / pre > < / li >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > < / pre > < / li >

        < li

    onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >

    def init_connection_state(self):
        <

        / pre > < / li >

    < li


onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
if self.features.is_sql_auto_is_null_enabled: < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233624776')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233624776" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > conn_params < / td >
< td


class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
&  # 39;client_flag&#39;: 2,
&  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
1: &


lt;


class &  # 39;int&#39;&gt;,
    2: & lt;

    class &  # 39;int&#39;&gt;,
        3: & lt;

        class &  # 39;int&#39;&gt;,

            4: & lt;

        class &  # 39;float&#39;&gt;,

            5: & lt;

        class &  # 39;float&#39;&gt;,

            7: & lt;

        function
        convert_mysql_timestamp
        at
        0x7fecdb3d7bf8 & gt;,
        8: & lt;

        class &  # 39;int&#39;&gt;,
            9: & lt;

            class &  # 39;int&#39;&gt;,

                10: & lt;

            function
            convert_date
            at
            0x7fecdb3d7b70 & gt;,
            11: & lt;
            function
            typecast_time
            at
            0x7fecdd779bf8 & gt;,
            12: & lt;
            function
            convert_datetime
            at
            0x7fecdb3d79d8 & gt;,
            13: & lt;

            class &  # 39;int&#39;&gt;,
                15: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                16: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                246: & lt;
                function
                typecast_decimal
                at
                0x7fecdd779d08 & gt;,
                248: & lt;
                function
                convert_set
                at
                0x7fecdb3d7c80 & gt;,
                249: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                250: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                251: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                252: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                253: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                254: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                & lt;

                class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                    & lt;

                    class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                        & lt;

                    class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                        & lt;

                    class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                        & lt;

                    class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                        & lt;

                    class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                        & lt;

                    class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                        & lt;

                    class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                        & lt;

                    class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                        & lt;

                    class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                        & lt;

                    class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                        & lt;

                    class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                        & lt;

                    class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

            &  # 39;db&#39;: &#39;main&#39;,
            &  # 39;host&#39;: &#39;127.0.0.1&#39;,
            &  # 39;passwd&#39;: &#39;123456&#39;,
            &  # 39;port&#39;: 3306,
            &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
            < / tr >

            < tr >
            < td > self < / td >
            < td

            class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

            < / tr >

            < / tbody >
            < / table >

            < / li >

            < li

            class ="frame user" >

            < code > / usr / local / anaconda3 / lib / python3
            .6 / site - packages / pymysql / __init__.py < / code > in < code > Connect < / code >

            < div

            class ="context" id="c140655233622600" >

            < ol
            start = "87"

            class ="pre-context" id="pre140655233622600" >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >

            def Connect(*args, **kwargs):
                <

                / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > & quot; & quot; & quot; < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > Connect
            to
            the
            database;
            see
            connections.Connection.__init__()
            for < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > more
            information. < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > & quot; & quot; & quot; < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
            from .connections import Connection < / pre > < / li >

            < / ol >

            < ol
            start = "94"

            class ="context-line" >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
            return Connection(*args, **kwargs) < / pre > < span > ... < / span > < / li > < / ol >

            < ol
            start = '95'

            class ="post-context" id="post140655233622600" >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
            from . import connections as _orig_conn < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
            if _orig_conn.Connection.__init__.__doc__ is not None: < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > Connect.__doc__ = _orig_conn.Connection.__init__.__doc__ < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
            del _orig_conn < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

            < / ol >

            < / div >

            < div

            class ="commands" >

            < a
            href = "#"
            onclick = "return varToggle(this, '140655233622600')" > < span > &  # x25b6;</span> Local vars</a>

            < / div >
            < table

            class ="vars" id="v140655233622600" >

            < thead >
            < tr >
            < th > Variable < / th >
            < th > Value < / th >
            < / tr >
            < / thead >
            < tbody >

            < tr >
            < td > Connection < / td >
            < td

            class ="code" > < pre > & lt; class &  # 39;pymysql.connections.Connection&#39;&gt;</pre></td>

            < / tr >

            < tr >
            < td > args < / td >
            < td

            class ="code" > < pre > () < / pre > < / td >

            < / tr >

            < tr >
            < td > kwargs < / td >
            < td

            class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
            &  # 39;client_flag&#39;: 2,
            &  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
            1: &

            lt;

            class &  # 39;int&#39;&gt;,
                2: & lt;

                class &  # 39;int&#39;&gt;,
                    3: & lt;

                    class &  # 39;int&#39;&gt;,

                        4: & lt;

                    class &  # 39;float&#39;&gt;,

                        5: & lt;

                    class &  # 39;float&#39;&gt;,

                        7: & lt;

                    function
                    convert_mysql_timestamp
                    at
                    0x7fecdb3d7bf8 & gt;,
                    8: & lt;

                    class &  # 39;int&#39;&gt;,
                        9: & lt;

                        class &  # 39;int&#39;&gt;,

                            10: & lt;

                        function
                        convert_date
                        at
                        0x7fecdb3d7b70 & gt;,
                        11: & lt;
                        function
                        typecast_time
                        at
                        0x7fecdd779bf8 & gt;,
                        12: & lt;
                        function
                        convert_datetime
                        at
                        0x7fecdb3d79d8 & gt;,
                        13: & lt;

                        class &  # 39;int&#39;&gt;,
                            15: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            16: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            246: & lt;
                            function
                            typecast_decimal
                            at
                            0x7fecdd779d08 & gt;,
                            248: & lt;
                            function
                            convert_set
                            at
                            0x7fecdb3d7c80 & gt;,
                            249: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            250: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            251: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            252: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            253: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            254: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            & lt;

                            class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                                & lt;

                                class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                                    & lt;

                                class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                                    & lt;

                                class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                                    & lt;

                                class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                                    & lt;

                                class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                                    & lt;

                                class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                                    & lt;

                                class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                                    & lt;

                                class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                                    & lt;

                                class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                                    & lt;

                                class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                                    & lt;

                                class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                                    & lt;

                                class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

                        &  # 39;db&#39;: &#39;main&#39;,
                        &  # 39;host&#39;: &#39;127.0.0.1&#39;,
                        &  # 39;passwd&#39;: &#39;123456&#39;,
                        &  # 39;port&#39;: 3306,
                        &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
                        < / tr >

                        < / tbody >
                        < / table >

                        < / li >

                        < li

                        class ="frame user" >

                        < code > / usr / local / anaconda3 / lib / python3
                        .6 / site - packages / pymysql / connections.py < / code > in < code > __init__ < / code >

                        < div

                        class ="context" id="c140655233624456" >

                        < ol
                        start = "318"

                        class ="pre-context" id="pre140655233624456" >

                        < li
                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                        if program_name: < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                        self._connect_attrs[ & quot;
                        program_name & quot;] = program_name < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                    if defer_connect: < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > self._sock = None < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > else: < / pre > < / li >

                    < / ol >

                    < ol
                    start = "325"

                    class ="context-line" >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                    self.connect() < / pre > < span > ... < / span > < / li > < / ol >

                    < ol
                    start = '326'

                    class ="post-context" id="post140655233624456" >

                < li
                onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                < li

            onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >

            def _create_ssl_ctx(self, sslp):
                <

                / pre > < / li >

            < li
            onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >

        if isinstance(sslp, ssl.SSLContext): < / pre > < / li >

        < li
        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
        return sslp < / pre > < / li >

        < li
        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > ca = sslp.get( &  # 39;ca&#39;)</pre></li>

                                                                                       < li
        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > capath = sslp.get( &  # 39;capath&#39;)</pre></li>

                                                                                           < / ol >

                                                                                               < / div >

                                                                                                   < div

        class ="commands" >

        < a
        href = "#"
        onclick = "return varToggle(this, '140655233624456')" > < span > &  # x25b6;</span> Local vars</a>

        < / div >
        < table

    class ="vars" id="v140655233624456" >

    < thead >
    < tr >
    < th > Variable < / th >
    < th > Value < / th >
    < / tr >
    < / thead >
    < tbody >

< tr >
< td > auth_plugin_map < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > autocommit < / td >
< td


class ="code" > < pre > False < / pre > < / td >

< / tr >

< tr >
< td > binary_prefix < / td >
< td


class ="code" > < pre > False < / pre > < / td >

< / tr >

< tr >
< td > bind_address < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > charset < / td >
< td


class ="code" > < pre > &  # 39;utf8&#39;</pre></td>

< / tr >

< tr >
< td > client_flag < / td >
< td


class ="code" > < pre > 3842575 < / pre > < / td >

< / tr >

< tr >
< td > compress < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > connect_timeout < / td >
< td


class ="code" > < pre > 10 < / pre > < / td >

< / tr >

< tr >
< td > conv < / td >
< td


class ="code" > < pre > {0: &


lt;
function
typecast_decimal
at
0x7fecdd779d08 & gt;,
1: & lt;


class &  # 39;int&#39;&gt;,
    2: & lt;

    class &  # 39;int&#39;&gt;,


3: & lt;


class &  # 39;int&#39;&gt;,

    4: & lt;


class &  # 39;float&#39;&gt;,

    5: & lt;


class &  # 39;float&#39;&gt;,

    7: & lt;


function
convert_mysql_timestamp
at
0x7fecdb3d7bf8 & gt;,
8: & lt;


class &  # 39;int&#39;&gt;,

    9: & lt;


class &  # 39;int&#39;&gt;,

    10: & lt;


function
convert_date
at
0x7fecdb3d7b70 & gt;,
11: & lt;
function
typecast_time
at
0x7fecdd779bf8 & gt;,
12: & lt;
function
convert_datetime
at
0x7fecdb3d79d8 & gt;,
13: & lt;


class &  # 39;int&#39;&gt;,

    15: & lt;


function
through
at
0x7fecdb3d7d08 & gt;,
16: & lt;
function
through
at
0x7fecdb3d7d08 & gt;,
246: & lt;
function
typecast_decimal
at
0x7fecdd779d08 & gt;,
248: & lt;
function
convert_set
at
0x7fecdb3d7c80 & gt;,
249: & lt;
function
through
at
0x7fecdb3d7d08 & gt;,
250: & lt;
function
through
at
0x7fecdb3d7d08 & gt;,
251: & lt;
function
through
at
0x7fecdb3d7d08 & gt;,
252: & lt;
function
through
at
0x7fecdb3d7d08 & gt;,
253: & lt;
function
through
at
0x7fecdb3d7d08 & gt;,
254: & lt;
function
through
at
0x7fecdb3d7d08 & gt;,
& lt;


class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,

    & lt;


class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

    & lt;


class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

    & lt;


class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

    & lt;


class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

    & lt;


class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

    & lt;


class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

    & lt;


class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

    & lt;


class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

    & lt;


class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

    & lt;


class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

    & lt;


class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

    & lt;


class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

    & lt;


class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

    & lt;


class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

    & lt;


class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

    & lt;


class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;}</pre></td>

    < / tr >

< tr >
< td > cursorclass < / td >
< td


class ="code" > < pre > & lt; class &  # 39;pymysql.cursors.Cursor&#39;&gt;</pre></td>

< / tr >

< tr >
< td > database < / td >
< td


class ="code" > < pre > &  # 39;main&#39;</pre></td>

< / tr >

< tr >
< td > db < / td >
< td


class ="code" > < pre > &  # 39;main&#39;</pre></td>

< / tr >

< tr >
< td > defer_connect < / td >
< td


class ="code" > < pre > False < / pre > < / td >

< / tr >

< tr >
< td > host < / td >
< td


class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

< / tr >

< tr >
< td > init_command < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > local_infile < / td >
< td


class ="code" > < pre > False < / pre > < / td >

< / tr >

< tr >
< td > max_allowed_packet < / td >
< td


class ="code" > < pre > 16777216 < / pre > < / td >

< / tr >

< tr >
< td > named_pipe < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > passwd < / td >
< td


class ="code" > < pre > &  # 39;123456&#39;</pre></td>

< / tr >

< tr >
< td > password < / td >
< td


class ="code" > < pre > &  # 39;123456&#39;</pre></td>

< / tr >

< tr >
< td > port < / td >
< td


class ="code" > < pre > 3306 < / pre > < / td >

< / tr >

< tr >
< td > program_name < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > read_default_file < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > read_default_group < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > read_timeout < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;pymysql.connections.Connection object at 0x7fecd8586828 & gt; < / pre > < / td >

< / tr >

< tr >
< td > server_public_key < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > sql_mode < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > ssl < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > unix_socket < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > use_unicode < / td >
< td


class ="code" > < pre > True < / pre > < / td >

< / tr >

< tr >
< td > user < / td >
< td


class ="code" > < pre > &  # 39;besttest&#39;</pre></td>

< / tr >

< tr >
< td > write_timeout < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame user" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / pymysql / connections.py < / code > in < code > connect < / code >

< div


class ="context" id="c140655233623432" >

< ol
start = "623"


class ="pre-context" id="pre140655233623432" >

< li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > 2003, < / pre > < / li >

< li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > & quot;
Can &  # 39;t connect to MySQL server on %r (%s)&quot; % (</pre></li>

< li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > self.host, e)) < / pre > < / li >

                                                                                                       < li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # Keep original exception and traceback to investigate error.</pre></li>

          < li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > exc.original_exception = e < / pre > < / li >

                                                                                                                   < li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > exc.traceback = traceback.format_exc() < / pre > < / li >

                                                                                                                               < li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
if DEBUG: print(exc.traceback) < / pre > < / li >

                                             < / ol >

                                                 < ol
start = "630"


class ="context-line" >

< li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
raise exc < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '631'


class ="post-context" id="post140655233623432" >

< li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # If e is neither DatabaseError or IOError, It&#39;s a bug.</pre></li>

< li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # But raising AssertionError hides original error.</pre></li>

< li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # So just reraise it.</pre></li>

< li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
raise < / pre > < / li >

< li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233623432')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233623432" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > exc < / td >
< td


class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
< / tr >

< tr >
< td > kwargs < / td >
< td


class ="code" > < pre > {} < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;pymysql.connections.Connection object at 0x7fecd8586828 & gt; < / pre > < / td >

< / tr >

< tr >
< td > sock < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li > < h3 >

The
above
exception((2003,
           "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)"))
was
the
direct
cause
of
the
following
exception:

< / h3 > < / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / core / handlers / exception.py < / code > in < code > inner < / code >

< div


class ="context" id="c140655221039496" >

< ol
start = "32"


class ="pre-context" id="pre140655221039496" >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > This
decorator is automatically
applied
to
all
middleware
to
ensure
that < / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > no
middleware
leaks
an
exception and that
the
next
middleware in the
stack < / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > can
rely
on
getting
a
response
instead
of
an
exception. < / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >


@wraps(get_response, assigned=available_attrs(get_response))

< / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >


def inner(request):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >
try: < / pre > < / li >

< / ol >

< ol
start = "39"


class ="context-line" >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >
response = get_response(request) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '40'


class ="post-context" id="post140655221039496" >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >        except Exception as exc: < / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > response = response_for_exception(
    request, exc) < / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >
return response < / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >
return inner < / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221039496')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221039496" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > exc < / td >
< td


class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
< / tr >

< tr >
< td > get_response < / td >
< td


class ="code" > < pre > & lt;bound method BaseHandler._legacy_get_response of & lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fecdb570f98 & gt; & gt; < / pre > < / td >

< / tr >

< tr >
< td > request < / td >
< td


class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / core / handlers / base.py < / code > in < code > _legacy_get_response < / code >

< div


class ="context" id="c140655221039944" >

< ol
start = "242"


class ="pre-context" id="pre140655221039944" >

< li
onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >  # Apply request middleware</pre></li>

< li
onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
for middleware_method in self._request_middleware: < / pre > < / li >

< li
onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre > response = middleware_method(
    request) < / pre > < / li >

< li
onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
if response: < / pre > < / li >

< li
onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
break < / pre > < / li >

< li
onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
if response is None: < / pre > < / li >

< / ol >

< ol
start = "249"


class ="context-line" >

< li
onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
response = self._get_response(
    request) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '250'


class ="post-context" id="post140655221039944" >

< li
onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
return response < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221039944')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221039944" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > middleware_method < / td >
< td


class ="code" > < pre > & lt;bound method MessageMiddleware.process_request of & lt;django.contrib.messages.middleware.MessageMiddleware object at 0x7fecd972bdd8 & gt; & gt; < / pre > < / td >

< / tr >

< tr >
< td > request < / td >
< td


class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

< / tr >

< tr >
< td > response < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fecdb570f98 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / core / handlers / base.py < / code > in < code > _get_response < / code >

< div


class ="context" id="c140655221039304" >

< ol
start = "180"


class ="pre-context" id="pre140655221039304" >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
break < / pre > < / li >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
if response is None: < / pre > < / li >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > wrapped_callback = self.make_view_atomic(
    callback) < / pre > < / li >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
try: < / pre > < / li >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > response = wrapped_callback(
    request, *callback_args, **callback_kwargs) < / pre > < / li >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >            except Exception as e: < / pre > < / li >

< / ol >

< ol
start = "187"


class ="context-line" >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
response = self.process_exception_by_middleware(e,
                                                request) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '188'


class ="post-context" id="post140655221039304" >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >  # Complain if the view returned None (a common error).</pre></li>

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
if response is None: < / pre > < / li >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
if isinstance(callback, types.FunctionType):  # FBV</pre></li>

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > view_name = callback.__name__ < / pre > < / li >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > else:  # CBV</pre></li>

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221039304')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221039304" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > callback < / td >
< td


class ="code" > < pre > & lt;function method_check.& lt;locals & gt;.decorator.& lt;locals & gt;.war at 0x7fecd9819268 & gt; < / pre > < / td >

< / tr >

< tr >
< td > callback_args < / td >
< td


class ="code" > < pre > () < / pre > < / td >

< / tr >

< tr >
< td > callback_kwargs < / td >
< td


class ="code" > < pre > {} < / pre > < / td >

< / tr >

< tr >
< td > request < / td >
< td


class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

< / tr >

< tr >
< td > resolver < / td >
< td


class ="code" > < pre > & lt;RegexURLResolver &  # 39;choujiang.urls&#39; (None:None) ^/&gt;</pre></td>

< / tr >

< tr >
< td > resolver_match < / td >
< td


class ="code" > < pre > ResolverMatch(func=app.tools.war, args=(), kwargs={}, url_name=None, app_names=[], namespaces=[]) < / pre > < / td >

< / tr >

< tr >
< td > response < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fecdb570f98 & gt; < / pre > < / td >

< / tr >

< tr >
< td > wrapped_callback < / td >
< td


class ="code" > < pre > & lt;function method_check.& lt;locals & gt;.decorator.& lt;locals & gt;.war at 0x7fecd9819268 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / core / handlers / base.py < / code > in < code > _get_response < / code >

< div


class ="context" id="c140655221039368" >

< ol
start = "178"


class ="pre-context" id="pre140655221039368" >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre > response = middleware_method(
    request, callback, callback_args, callback_kwargs) < / pre > < / li >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
if response: < / pre > < / li >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
break < / pre > < / li >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
if response is None: < / pre > < / li >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre > wrapped_callback = self.make_view_atomic(
    callback) < / pre > < / li >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
try: < / pre > < / li >

< / ol >

< ol
start = "185"


class ="context-line" >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
response = wrapped_callback(request, *callback_args,
                            **callback_kwargs) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '186'


class ="post-context" id="post140655221039368" >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >            except Exception as e: < / pre > < / li >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre > response = self.process_exception_by_middleware(
    e, request) < / pre > < / li >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >  # Complain if the view returned None (a common error).</pre></li>

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
if response is None: < / pre > < / li >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
if isinstance(callback, types.FunctionType):  # FBV</pre></li>

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221039368')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221039368" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > callback < / td >
< td


class ="code" > < pre > & lt;function method_check.& lt;locals & gt;.decorator.& lt;locals & gt;.war at 0x7fecd9819268 & gt; < / pre > < / td >

< / tr >

< tr >
< td > callback_args < / td >
< td


class ="code" > < pre > () < / pre > < / td >

< / tr >

< tr >
< td > callback_kwargs < / td >
< td


class ="code" > < pre > {} < / pre > < / td >

< / tr >

< tr >
< td > request < / td >
< td


class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

< / tr >

< tr >
< td > resolver < / td >
< td


class ="code" > < pre > & lt;RegexURLResolver &  # 39;choujiang.urls&#39; (None:None) ^/&gt;</pre></td>

< / tr >

< tr >
< td > resolver_match < / td >
< td


class ="code" > < pre > ResolverMatch(func=app.tools.war, args=(), kwargs={}, url_name=None, app_names=[], namespaces=[]) < / pre > < / td >

< / tr >

< tr >
< td > response < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fecdb570f98 & gt; < / pre > < / td >

< / tr >

< tr >
< td > wrapped_callback < / td >
< td


class ="code" > < pre > & lt;function method_check.& lt;locals & gt;.decorator.& lt;locals & gt;.war at 0x7fecd9819268 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame user" >

< code > / usr / local / choujiang / app / tools.py < / code > in < code > war < / code >

< div


class ="context" id="c140655221040200" >

< ol
start = "40"


class ="pre-context" id="pre140655221040200" >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >


def method_check(method):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >


def decorator(func):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >


def war(*args, **kwargs):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre > req =
args[0] < / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >
if req.method == method: < / pre > < / li >

< / ol >

< ol
start = "47"


class ="context-line" >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >
return func(*args, **kwargs) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '48'


class ="post-context" id="post140655221040200" >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre > else: < / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >
return my_res(msg.METHOD_ERR) < / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >
return war < / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >
return decorator < / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >


def replace_img_url(host, img_list):
    <

    / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221040200')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221040200" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > args < / td >
< td


class ="code" > < pre > ( & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;,)</pre></td>
                                            <

/ tr >

  < tr >
  < td > func < / td >
                  < td


class ="code" > < pre > & lt;function add_stu at 0x7fecd98191e0 & gt; < / pre > < / td >

< / tr >

< tr >
< td > kwargs < / td >
< td


class ="code" > < pre > {} < / pre > < / td >

< / tr >

< tr >
< td > method < / td >
< td


class ="code" > < pre > &  # 39;POST&#39;</pre></td>

< / tr >

< tr >
< td > req < / td >
< td


class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame user" >

< code > / usr / local / choujiang / app / views.py < / code > in < code > add_stu < / code >

< div


class ="context" id="c140655221042632" >

< ol
start = "141"


class ="pre-context" id="pre140655221042632" >

< li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > age = str(
    body.get( &  # 39;age&#39;,18)).strip()</pre></li>

    < li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > addr = body.get( &  # 39;addr&#39;,&#39;&#39;).strip()</pre></li>

                                                                                 < li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre >
if name and grade and phone: < / pre > < / li >

                                           < li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre >
if len(phone) != 11: < / pre > < / li >

                                   < li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > res = { &  # 39;error_code&#39;:5,&#39;msg&#39;:&quot;ææºå·é¿åº¦ä¸æ­£ç¡®&quot;}</pre></li>

                                                                                < li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre >
return my_res(res) < / pre > < / li >

< li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > obj = models.Student.objects.filter(
    phone=phone) < / pre > < / li >

< / ol >

< ol
start = "148"


class ="context-line" >

< li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre >
if obj: < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '149'


class ="post-context" id="post140655221042632" >

< li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > res = { &  # 39;error_code&#39;: 5, &#39;msg&#39;: &quot;ææºå·å·²ç»å­å¨&quot;}</pre></li>

                                                                                < li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre >
return my_res(res) < / pre > < / li >

< li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > models.Student.objects.create(
    **body) < / pre > < / li >

< li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > res = msg.SUCCESS < / pre > < / li >

< li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > else: < / pre > < / li >

< li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > res = msg.NOT_NULL < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221042632')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221042632" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > addr < / td >
< td


class ="code" > < pre > &  # 39;&#39;</pre></td>

< / tr >

< tr >
< td > age < / td >
< td


class ="code" > < pre > &  # 39;18&#39;</pre></td>

< / tr >

< tr >
< td > body < / td >
< td


class ="code" > < pre > {&  # 39;grade&#39;: &#39;äºç­&#39;, &#39;name&#39;: &#39;æå&#39;, &#39;phone&#39;: &#39;13516659123&#39;}</pre></td>
< / tr >

< tr >
< td > grade < / td >
< td


class ="code" > < pre > &  # 39;äºç­&#39;</pre></td>

< / tr >

< tr >
< td > name < / td >
< td


class ="code" > < pre > &  # 39;æå&#39;</pre></td>

< / tr >

< tr >
< td > obj < / td >
< td


class ="code" > < pre > Error in formatting: OperationalError: (2003,
                                                                & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                                                < / tr >

                                                                < tr >
                                                                < td > phone < / td >
                                                                < td


class ="code" > < pre > &  # 39;13516659123&#39;</pre></td>

< / tr >

< tr >
< td > req < / td >
< td


class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

< / tr >

< tr >
< td > sex < / td >
< td


class ="code" > < pre > &  # 39;&#39;</pre></td>

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / query.py < / code > in < code > __bool__ < / code >

< div


class ="context" id="c140655221040840" >

< ol
start = "253"


class ="pre-context" id="pre140655221040840" >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > 3.
self.iterator() < / pre > < / li >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > - Responsible
for turning the rows into model objects.< / pre > < / li >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > self._fetch_all() < / pre > < / li >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >
return iter(self._result_cache) < / pre > < / li >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >


def __bool__(self):
    <

    / pre > < / li >

< / ol >

< ol
start = "260"


class ="context-line" >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >
self._fetch_all() < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '261'


class ="post-context" id="post140655221040840" >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >
return bool(self._result_cache) < / pre > < / li >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >


def __nonzero__(self):  # Python 2 compatibility</pre></li>

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >
return type(self).__bool__(self) < / pre > < / li >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >


def __getitem__(self, k):
    <

    / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221040840')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221040840" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > Error in formatting: OperationalError: (2003,
                                                                & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                                                < / tr >

                                                                < / tbody >
                                                                < / table >

                                                                < / li >

                                                                < li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / query.py < / code > in < code > _fetch_all < / code >

< div


class ="context" id="c140655286580232" >

< ol
start = "1078"


class ="pre-context" id="pre140655286580232" >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > clone._fields = self._fields < / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > clone.__dict__.update(
    kwargs) < / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >
return clone < / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >


def _fetch_all(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >
if self._result_cache is None: < / pre > < / li >

< / ol >

< ol
start = "1085"


class ="context-line" >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >
self._result_cache = list(
    self.iterator()) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '1086'


class ="post-context" id="post140655286580232" >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >
if self._prefetch_related_lookups and not self._prefetch_done: < / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > self._prefetch_related_objects() < / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >


def _next_is_sticky(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > Indicates
that
the
next
filter
call and the
one
following
that
should < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655286580232')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655286580232" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > Error in formatting: OperationalError: (2003,
                                                                & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                                                < / tr >

                                                                < / tbody >
                                                                < / table >

                                                                < / li >

                                                                < li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / query.py < / code > in < code > __iter__ < / code >

< div


class ="context" id="c140655221127816" >

< ol
start = "47"


class ="pre-context" id="pre140655221127816" >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >


def __iter__(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > queryset = self.queryset < / pre > < / li >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > db = queryset.db < / pre > < / li >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > compiler = queryset.query.get_compiler(
    using=db) < / pre > < / li >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >  # Execute the query. This will also fill compiler.select, klass_info,</pre></li>

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >  # and annotations.</pre></li>

< / ol >

< ol
start = "54"


class ="context-line" >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >
results = compiler.execute_sql() < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '55'


class ="post-context" id="post140655221127816" >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > select, klass_info, annotation_col_map = (
                                                                                                                       compiler.select,
                                                                                                                       compiler.klass_info,
                                                                                                                       < / pre > < / li >

                                                                                                                       < li onclick="toggle('pre140655221127816', 'post140655221127816')" > < pre > compiler.annotation_col_map) < / pre > < / li >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >
if klass_info is None: < / pre > < / li >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >
return < / pre > < / li >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > model_cls =
klass_info[ &  # 39;model&#39;]</pre></li>

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > select_fields =
klass_info[ &  # 39;select_fields&#39;]</pre></li>

< / ol >

    < / div >

        < div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221127816')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221127816" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > compiler < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

< / tr >

< tr >
< td > db < / td >
< td


class ="code" > < pre > &  # 39;default&#39;</pre></td>

< / tr >

< tr >
< td > queryset < / td >
< td


class ="code" > < pre > Error in formatting: OperationalError: (2003,
                                                                & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                                                < / tr >

                                                                < tr >
                                                                < td > self < / td >
                                                                < td


class ="code" > < pre > & lt;django.db.models.query.ModelIterable object at 0x7fecd8586518 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / sql / compiler.py < / code > in < code > execute_sql < / code >

< div


class ="context" id="c140655221127432" >

< ol
start = "817"


class ="pre-context" id="pre140655221127432" >

< li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > subclasses
such as InsertQuery).It &  # 39;s possible, however, that no query</pre></li>

                     < li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > is needed, as the
filters
describe
an
empty
set.In
that
case, None is < / pre > < / li >

                            < li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > returned, to
avoid
any
unnecessary
database
interaction. < / pre > < / li >

                           < li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                                                                                                < li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
if not result_type: < / pre > < / li >

                                  < li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > result_type = NO_RESULTS < / pre > < / li >

                                                                                                                 < li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
try: < / pre > < / li >

< / ol >

< ol
start = "824"


class ="context-line" >

< li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
sql, params = self.as_sql() < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '825'


class ="post-context" id="post140655221127432" >

< li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
if not sql: < / pre > < / li >

< li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
raise EmptyResultSet < / pre > < / li >

< li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >        except EmptyResultSet: < / pre > < / li >

< li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
if result_type == MULTI: < / pre > < / li >

< li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
return iter([]) < / pre > < / li >

< li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > else: < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221127432')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221127432" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > result_type < / td >
< td


class ="code" > < pre > &  # 39;multi&#39;</pre></td>

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / sql / compiler.py < / code > in < code > as_sql < / code >

< div


class ="context" id="c140655221125192" >

< ol
start = "369"


class ="pre-context" id="pre140655221125192" >

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > extra_select, order_by, group_by = self.pre_sql_setup() < / pre > < / li >

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > distinct_fields = self.get_distinct() < / pre > < / li >

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre >  # This must come after &#39;select&#39;, &#39;ordering&#39;, and &#39;distinct&#39; -- see</pre></li>

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre >  # docstring of get_from_clause() for details.</pre></li>

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > from_, f_params = self.get_from_clause() < / pre > < / li >

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > < / pre > < / li >

< / ol >

< ol
start = "376"


class ="context-line" >

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre >
where, w_params = self.compile(self.where) if self.where is not None else (
                                                                              & quot; & quot;, []) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '377'


class ="post-context" id="post140655221125192" >

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > having, h_params = self.compile(
    self.having) if self.having is not None else (
                                                     & quot; & quot;, []) < / pre > < / li >

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > params = [] < / pre > < / li >

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > result = [ &  # 39;SELECT&#39;]</pre></li>

                                                                                   < li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > < / pre > < / li >

                                                                                        < li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre >
if self.query.distinct: < / pre > < / li >

                                      < li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > result.append(
    self.connection.ops.distinct_sql(distinct_fields)) < / pre > < / li >

                                                                     < / ol >

                                                                         < / div >

                                                                             < div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221125192')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221125192" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > distinct_fields < / td >
< td


class ="code" > < pre >[] < / pre > < / td >

< / tr >

< tr >
< td > extra_select < / td >
< td


class ="code" > < pre >[] < / pre > < / td >

< / tr >

< tr >
< td > f_params < / td >
< td


class ="code" > < pre >[] < / pre > < / td >

< / tr >

< tr >
< td > from_ < / td >
< td


class ="code" > < pre >[&  # 39;`app_student`&#39;]</pre></td>
< / tr >

< tr >
< td > group_by < / td >
< td


class ="code" > < pre >[] < / pre > < / td >

< / tr >

< tr >
< td > order_by < / td >
< td


class ="code" > < pre >[] < / pre > < / td >

< / tr >

< tr >
< td > refcounts_before < / td >
< td


class ="code" > < pre > {&  # 39;app_student&#39;: 1}</pre></td>
< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

< / tr >

< tr >
< td > subquery < / td >
< td


class ="code" > < pre > False < / pre > < / td >

< / tr >

< tr >
< td > with_col_aliases < / td >
< td


class ="code" > < pre > False < / pre > < / td >

< / tr >

< tr >
< td > with_limits < / td >
< td


class ="code" > < pre > True < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / sql / compiler.py < / code > in < code > compile < / code >

< div


class ="context" id="c140655221127304" >

< ol
start = "346"


class ="pre-context" id="pre140655221127304" >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
return r < / pre > < / li >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >


def compile(self, node, select_format=False):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > vendor_impl = getattr(
    node, &  # 39;as_&#39; + self.connection.vendor, None)</pre></li>

                                                                                        < li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
if vendor_impl: < / pre > < / li >

                              < li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > sql, params = vendor_impl(
    self, self.connection) < / pre > < / li >

                                         < li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > else: < / pre > < / li >

                                                                                              < / ol >

                                                                                                  < ol
start = "353"


class ="context-line" >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
sql, params = node.as_sql(self,
                          self.connection) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '354'


class ="post-context" id="post140655221127304" >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
if select_format and not self.subquery: < / pre > < / li >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
return node.output_field.select_format(self, sql, params) < / pre > < / li >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
return sql, params < / pre > < / li >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >


def as_sql(self, with_limits=True, with_col_aliases=False, subquery=False):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221127304')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221127304" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > node < / td >
< td


class ="code" > < pre > & lt;WhereNode: (AND
                                         : & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt;) & gt; <

/ pre > < / td >

< / tr >

< tr >
< td > select_format < / td >
< td


class ="code" > < pre > False < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

< / tr >

< tr >
< td > vendor_impl < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / sql / where.py < / code > in < code > as_sql < / code >

< div


class ="context" id="c140655221126664" >

< ol
start = "72"


class ="pre-context" id="pre140655221126664" >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >
if self.connector == AND: < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > full_needed, empty_needed = len(
    self.children), 1 < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > else: < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > full_needed, empty_needed = 1, len(
    self.children) < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >
for child in self.children: < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >
try: < / pre > < / li >

< / ol >

< ol
start = "79"


class ="context-line" >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >
sql, params = compiler.compile(
    child) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '80'


class ="post-context" id="post140655221126664" >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >            except EmptyResultSet: < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > empty_needed -= 1 < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > else: < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >
if sql: < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > result.append(
    sql) < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > result_params.extend(
    params) < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221126664')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221126664" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > child < / td >
< td


class ="code" > < pre > & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt; < / pre > < / td >

< / tr >

< tr >
< td > compiler < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

< / tr >

< tr >
< td > connection < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< tr >
< td > empty_needed < / td >
< td


class ="code" > < pre > 1 < / pre > < / td >

< / tr >

< tr >
< td > full_needed < / td >
< td


class ="code" > < pre > 1 < / pre > < / td >

< / tr >

< tr >
< td > result < / td >
< td


class ="code" > < pre >[] < / pre > < / td >

< / tr >

< tr >
< td > result_params < / td >
< td


class ="code" > < pre >[] < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;WhereNode: (AND
                                         : & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt;) & gt; <

/ pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / sql / compiler.py < / code > in < code > compile < / code >

< div


class ="context" id="c140655221126344" >

< ol
start = "346"


class ="pre-context" id="pre140655221126344" >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
return r < / pre > < / li >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >


def compile(self, node, select_format=False):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > vendor_impl = getattr(
    node, &  # 39;as_&#39; + self.connection.vendor, None)</pre></li>

                                                                                        < li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
if vendor_impl: < / pre > < / li >

                              < li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > sql, params = vendor_impl(
    self, self.connection) < / pre > < / li >

                                         < li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > else: < / pre > < / li >

                                                                                              < / ol >

                                                                                                  < ol
start = "353"


class ="context-line" >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
sql, params = node.as_sql(self,
                          self.connection) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '354'


class ="post-context" id="post140655221126344" >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
if select_format and not self.subquery: < / pre > < / li >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
return node.output_field.select_format(self, sql, params) < / pre > < / li >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
return sql, params < / pre > < / li >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >


def as_sql(self, with_limits=True, with_col_aliases=False, subquery=False):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221126344')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221126344" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > node < / td >
< td


class ="code" > < pre > & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt; < / pre > < / td >

< / tr >

< tr >
< td > select_format < / td >
< td


class ="code" > < pre > False < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

< / tr >

< tr >
< td > vendor_impl < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / lookups.py < / code > in < code > as_sql < / code >

< div


class ="context" id="c140655221126920" >

< ol
start = "148"


class ="pre-context" id="pre140655221126920" >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > db_type = self.lhs.output_field.db_type(
    connection=connection) < / pre > < / li >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > lhs_sql = connection.ops.field_cast_sql( < / pre > < / li >

                                                                                                                                 < li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > db_type, field_internal_type) % lhs_sql < / pre > < / li >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > lhs_sql = connection.ops.lookup_cast(
    self.lookup_name, field_internal_type) % lhs_sql < / pre > < / li >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre >
return lhs_sql, list(params) < / pre > < / li >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre >


def as_sql(self, compiler, connection):
    <

    / pre > < / li >

< / ol >

< ol
start = "155"


class ="context-line" >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre >
lhs_sql, params = self.process_lhs(compiler,
                                   connection) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '156'


class ="post-context" id="post140655221126920" >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > rhs_sql, rhs_params = self.process_rhs(
    compiler, connection) < / pre > < / li >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > params.extend(
    rhs_params) < / pre > < / li >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > rhs_sql = self.get_rhs_op(
    connection, rhs_sql) < / pre > < / li >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre >
return &  # 39;%s %s&#39; % (lhs_sql, rhs_sql), params</pre></li>

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre >


def get_rhs_op(self, connection, rhs):
    <

    / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221126920')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221126920" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > compiler < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

< / tr >

< tr >
< td > connection < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / lookups.py < / code > in < code > process_lhs < / code >

< div


class ="context" id="c140655221129096" >

< ol
start = "141"


class ="pre-context" id="pre140655221129096" >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre >


class BuiltinLookup(Lookup):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre >


def process_lhs(self, compiler, connection, lhs=None):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > lhs_sql, params = super(
    BuiltinLookup, self).process_lhs( < / pre > < / li >

                                                    < li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > compiler, connection, lhs) < / pre > < / li >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > field_internal_type = self.lhs.output_field.get_internal_type() < / pre > < / li >

< / ol >

< ol
start = "148"


class ="context-line" >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre >
db_type = self.lhs.output_field.db_type(
    connection=connection) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '149'


class ="post-context" id="post140655221129096" >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > lhs_sql = connection.ops.field_cast_sql( < / pre > < / li >

                                                                                                                                 < li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > db_type, field_internal_type) % lhs_sql < / pre > < / li >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > lhs_sql = connection.ops.lookup_cast(
    self.lookup_name, field_internal_type) % lhs_sql < / pre > < / li >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre >
return lhs_sql, list(params) < / pre > < / li >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre >


def as_sql(self, compiler, connection):
    <

    / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221129096')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221129096" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > __class__ < / td >
< td


class ="code" > < pre > & lt; class &  # 39;django.db.models.lookups.BuiltinLookup&#39;&gt;</pre></td>

< / tr >

< tr >
< td > compiler < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

< / tr >

< tr >
< td > connection < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< tr >
< td > field_internal_type < / td >
< td


class ="code" > < pre > &  # 39;CharField&#39;</pre></td>

< / tr >

< tr >
< td > lhs < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > lhs_sql < / td >
< td


class ="code" > < pre > &  # 39;`app_student`.`phone`&#39;</pre></td>

< / tr >

< tr >
< td > params < / td >
< td


class ="code" > < pre >[] < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / fields / __init__.py < / code > in < code > db_type < / code >

< div


class ="context" id="c140655221129160" >

< ol
start = "622"


class ="pre-context" id="pre140655221129160" >

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >  # But the limitation of the get_internal_type() / data_types approach</pre></li>

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >  # is that it cannot handle database column types that aren&#39;t already</pre></li>

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >  # mapped to one of the built-in Django field types. In this case, you</pre></li>

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >  # can implement db_type() instead of get_internal_type() to specify</pre></li>

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >  # exactly which wacky database column type you want to use.</pre></li>

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre > data = DictWrapper(
    self.__dict__, connection.ops.quote_name, & quot;
qn_ & quot;) < / pre > < / li >

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >
try: < / pre > < / li >

< / ol >

< ol
start = "629"


class ="context-line" >

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >
return connection.data_types[
           self.get_internal_type()] % data < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '630'


class ="post-context" id="post140655221129160" >

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >        except KeyError: < / pre > < / li >

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >
return None < / pre > < / li >

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >


def rel_db_type(self, connection):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre > Return
the
data
type
that
a
related
field
pointing
to
this
field
should < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221129160')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221129160" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > connection < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< tr >
< td > data < / td >
< td


class ="code" > < pre > {&  # 39;_error_messages&#39;: None,
&  # 39;_unique&#39;: False,
&  # 39;_validators&#39;: [],
&  # 39;_verbose_name&#39;: &#39;çµè¯&#39;,
&  # 39;attname&#39;: &#39;phone&#39;,
&  # 39;auto_created&#39;: False,
&  # 39;blank&#39;: False,
&  # 39;cached_col&#39;: Col(app_student, app.Student.phone),
&  # 39;choices&#39;: [],
&  # 39;column&#39;: &#39;phone&#39;,
&  # 39;concrete&#39;: True,
&  # 39;creation_counter&#39;: 50,
&  # 39;db_column&#39;: None,
&  # 39;db_index&#39;: False,
&  # 39;db_tablespace&#39;: &#39;&#39;,
&  # 39;default&#39;: &lt;class &#39;django.db.models.fields.NOT_PROVIDED&#39;&gt;,
&  # 39;editable&#39;: True,
&  # 39;error_messages&#39;: {&#39;blank&#39;: &lt;django.utils.functional.lazy.&lt;locals&gt;.__proxy__ object at 0x7fecdd721cf8&gt;,
&  # 39;invalid_choice&#39;: &lt;django.utils.functional.lazy.&lt;locals&gt;.__proxy__ object at 0x7fecdd721be0&gt;,
&  # 39;null&#39;: &lt;django.utils.functional.lazy.&lt;locals&gt;.__proxy__ object at 0x7fecdd721c18&gt;,
&  # 39;unique&#39;: &lt;django.utils.functional.lazy.&lt;locals&gt;.__proxy__ object at 0x7fecdd6e37f0&gt;,
&  # 39;unique_for_date&#39;: &lt;django.utils.functional.lazy.&lt;locals&gt;.__proxy__ object at 0x7fecdc4fa358&gt;},
&  # 39;help_text&#39;: &#39;&#39;,
&  # 39;is_relation&#39;: False,
&  # 39;max_length&#39;: 11,
&  # 39;model&#39;: &lt;class &#39;app.models.Student&#39;&gt;,
&  # 39;name&#39;: &#39;phone&#39;,
&  # 39;null&#39;: False,
&  # 39;primary_key&#39;: False,
&  # 39;remote_field&#39;: None,
&  # 39;serialize&#39;: True,
&  # 39;unique_for_date&#39;: None,
&  # 39;unique_for_month&#39;: None,
&  # 39;unique_for_year&#39;: None,
&  # 39;validators&#39;: [&lt;django.core.validators.MaxLengthValidator object at 0x7fecdb2fea90&gt;],
&  # 39;verbose_name&#39;: &#39;çµè¯&#39;}</pre></td>
< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.models.fields.CharField: phone & gt; <

/ pre > < / td >
< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / utils / functional.py < / code > in < code > __get__ < / code >

< div


class ="context" id="c140655221125640" >

< ol
start = "28"


class ="pre-context" id="pre140655221125640" >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > self.func = func < / pre > < / li >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > self.__doc__ = getattr(
    func, &  # 39;__doc__&#39;)</pre></li>

                                                                                         < li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > self.name = name or func.__name__ < / pre > < / li >

                                                                                                                          < li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > < / pre > < / li >

                                                                                        < li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >


def __get__(self, instance, cls=None):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >
if instance is None: < / pre > < / li >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >
return self < / pre > < / li >

< / ol >

< ol
start = "35"


class ="context-line" >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >
res = instance.__dict__[self.name] = self.func(
    instance) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '36'


class ="post-context" id="post140655221125640" >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >
return res < / pre > < / li >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >


class Promise(object):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > This is just
a
base


class for the proxy class created in < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221125640')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221125640" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > cls < / td >
< td


class ="code" > < pre > & lt; class &  # 39;django.db.backends.mysql.base.DatabaseWrapper&#39;&gt;</pre></td>

< / tr >

< tr >
< td > instance < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.utils.functional.cached_property object at 0x7fecdb3b14a8 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / mysql / base.py < / code > in < code > data_types < / code >

< div


class ="context" id="c140655221126216" >

< ol
start = "178"


class ="pre-context" id="pre140655221126216" >

< li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > &  # 39;TextField&#39;: &#39;longtext&#39;,</pre></li>

< li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > &  # 39;TimeField&#39;: &#39;time&#39;,</pre></li>

< li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > &  # 39;UUIDField&#39;: &#39;char(32)&#39;,</pre></li>

< li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >} < / pre > < / li >

                                                                                         < li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > < / pre > < / li >

                                                                                        < li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >


@cached_property

< / pre > < / li >

              < li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >


def data_types(self):
    <

    / pre > < / li >

< / ol >

< ol
start = "185"


class ="context-line" >

< li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >
if self.features.supports_microsecond_precision: < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '186'


class ="post-context" id="post140655221126216" >

< li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >
return dict(self._data_types,
            DateTimeField= &  # 39;datetime(6)&#39;, TimeField=&#39;time(6)&#39;)</pre></li>

       < li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > else: < / pre > < / li >

                                                                                              < li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >
return self._data_types < / pre > < / li >

< li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > operators = { < / pre > < / li >

                                                                                                      < li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > &  # 39;exact&#39;: &#39;= %s&#39;,</pre></li>

< / ol >

    < / div >

        < div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221126216')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221126216" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / utils / functional.py < / code > in < code > __get__ < / code >

< div


class ="context" id="c140655221125256" >

< ol
start = "28"


class ="pre-context" id="pre140655221125256" >

< li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > self.func = func < / pre > < / li >

< li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > self.__doc__ = getattr(
    func, &  # 39;__doc__&#39;)</pre></li>

                                                                                         < li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > self.name = name or func.__name__ < / pre > < / li >

                                                                                                                          < li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > < / pre > < / li >

                                                                                        < li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >


def __get__(self, instance, cls=None):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >
if instance is None: < / pre > < / li >

< li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >
return self < / pre > < / li >

< / ol >

< ol
start = "35"


class ="context-line" >

< li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >
res = instance.__dict__[self.name] = self.func(
    instance) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '36'


class ="post-context" id="post140655221125256" >

< li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >
return res < / pre > < / li >

< li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >


class Promise(object):
    <

    / pre > < / li >

    < li


onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > This is just
a
base


class for the proxy class created in < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221125256')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221125256" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > cls < / td >
< td


class ="code" > < pre > & lt; class &  # 39;django.db.backends.mysql.features.DatabaseFeatures&#39;&gt;</pre></td>

< / tr >

< tr >
< td > instance < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.features.DatabaseFeatures object at 0x7fecd94df550 & gt; < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.utils.functional.cached_property object at 0x7fecdb3dc7f0 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / mysql / features.py < / code > in < code > supports_microsecond_precision < / code >

< div


class ="context" id="c140655221128584" >

< ol
start = "47"


class ="pre-context" id="pre140655221128584" >

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre > & quot;
Confirm
support
for introspected foreign keys & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >
return self._mysql_storage_engine != &  # 39;MyISAM&#39;</pre></li>

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >


@cached_property

< / pre > < / li >

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >


def supports_microsecond_precision(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >  # See https://github.com/farcepest/MySQLdb1/issues/24 for the reason</pre></li>

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >  # about requiring MySQLdb 1.2.5</pre></li>

< / ol >

< ol
start = "54"


class ="context-line" >

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >
return self.connection.mysql_version & gt;= (5, 6,
                                             4) and Database.version_info & gt;= (1,
                                                                                  2,
                                                                                  5) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '55'


class ="post-context" id="post140655221128584" >

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >


@cached_property

< / pre > < / li >

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >


def has_zoneinfo_database(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >  # MySQL accepts full time zones names (eg. Africa/Nairobi) but rejects</pre></li>

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >  # abbreviations (eg. EAT). When pytz isn&#39;t installed and the current</pre></li>

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >  # time zone is LocalTimezone (the only sensible value in this</pre></li>

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221128584')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221128584" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.features.DatabaseFeatures object at 0x7fecd94df550 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / utils / functional.py < / code > in < code > __get__ < / code >

< div


class ="context" id="c140655221128648" >

< ol
start = "28"


class ="pre-context" id="pre140655221128648" >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > self.func = func < / pre > < / li >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > self.__doc__ = getattr(
    func, &  # 39;__doc__&#39;)</pre></li>

                                                                                         < li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > self.name = name or func.__name__ < / pre > < / li >

                                                                                                                          < li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > < / pre > < / li >

                                                                                        < li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >


def __get__(self, instance, cls=None):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >
if instance is None: < / pre > < / li >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >
return self < / pre > < / li >

< / ol >

< ol
start = "35"


class ="context-line" >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >
res = instance.__dict__[self.name] = self.func(
    instance) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '36'


class ="post-context" id="post140655221128648" >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >
return res < / pre > < / li >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >


class Promise(object):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > This is just
a
base


class for the proxy class created in < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221128648')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221128648" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > cls < / td >
< td


class ="code" > < pre > & lt; class &  # 39;django.db.backends.mysql.base.DatabaseWrapper&#39;&gt;</pre></td>

< / tr >

< tr >
< td > instance < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.utils.functional.cached_property object at 0x7fecdb3b1358 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / mysql / base.py < / code > in < code > mysql_version < / code >

< div


class ="context" id="c140655221126856" >

< ol
start = "362"


class ="pre-context" id="pre140655221126856" >

< li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >        except Database.Error: < / pre > < / li >

< li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
return False < / pre > < / li >

< li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre > else: < / pre > < / li >

< li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
return True < / pre > < / li >

< li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >


@cached_property

< / pre > < / li >

< li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >


def mysql_version(self):
    <

    / pre > < / li >

< / ol >

< ol
start = "369"


class ="context-line" >

< li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
with self.temporary_connection() as cursor:
    < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '370'


class ="post-context" id="post140655221126856" >

< li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre > cursor.execute( &  # 39;SELECT VERSION()&#39;)</pre></li>

          < li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre > server_info =
cursor.fetchone()[0] < / pre > < / li >

                                   < li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre > match = server_version_re.match(
    server_info) < / pre > < / li >

                               < li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
if not match: < / pre > < / li >

                            < li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
raise Exception( &  # 39;Unable to determine MySQL version from version string %r&#39; % server_info)</pre></li>

      < li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
return tuple(int(x) for x in match.groups()) < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221126856')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221126856" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame user" >

< code > / usr / local / anaconda3 / lib / python3
.6 / contextlib.py < / code > in < code > __enter__ < / code >

< div


class ="context" id="c140655221128520" >

< ol
start = "74"


class ="pre-context" id="pre140655221128520" >

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >  # _GCM instances are one-shot context managers, so the</pre></li>

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >  # CM must be recreated each time a decorated function is</pre></li>

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >  # called</pre></li>

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
return self.__class__(self.func, self.args, self.kwds) < / pre > < / li >

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >


def __enter__(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
try: < / pre > < / li >

< / ol >

< ol
start = "81"


class ="context-line" >

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
return next(self.gen) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '82'


class ="post-context" id="post140655221128520" >

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >        except StopIteration: < / pre > < / li >

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
raise RuntimeError( & quot;
generator
didn &  # 39;t yield&quot;) from None</pre></li>

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre > < / pre > < / li >

                                                                                        < li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >


def __exit__(self, type, value, traceback):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
if type is None: < / pre > < / li >

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
try: < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221128520')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221128520" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;contextlib._GeneratorContextManager object at 0x7fecd8586940 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / base / base.py < / code > in < code > temporary_connection < / code >

< div


class ="context" id="c140655221126984" >

< ol
start = "557"


class ="pre-context" id="pre140655221126984" >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > Context
manager
that
ensures
that
a
connection is established, and < / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > if it
opened
one, closes
it
to
avoid
leaving
a
dangling
connection. < / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > This is useful
for operations outside of the request-response cycle.< / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > Provides
a
cursor:
with self.temporary_connection() as cursor:
    ... < / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > must_close = self.connection is None < / pre > < / li >

< / ol >

< ol
start = "564"


class ="context-line" >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre >
cursor = self.cursor() < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '565'


class ="post-context" id="post140655221126984" >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre >
try: < / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre >
yield cursor < / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre >        finally: < / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > cursor.close() < / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre >
if must_close: < / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > self.close() < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221126984')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221126984" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > must_close < / td >
< td


class ="code" > < pre > True < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / base / base.py < / code > in < code > cursor < / code >

< div


class ="context" id="c140655233624264" >

< ol
start = "224"


class ="pre-context" id="pre140655233624264" >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre >


def cursor(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > Creates
a
cursor, opening
a
connection if necessary. < / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > self.validate_thread_sharing() < / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre >
if self.queries_logged: < / pre > < / li >

< / ol >

< ol
start = "231"


class ="context-line" >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre >
cursor = self.make_debug_cursor(
    self._cursor()) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '232'


class ="post-context" id="post140655233624264" >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > else: < / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > cursor = self.make_cursor(
    self._cursor()) < / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre >
return cursor < / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre >


def commit(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233624264')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233624264" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / base / base.py < / code > in < code > _cursor < / code >

< div


class ="context" id="c140655233625224" >

< ol
start = "197"


class ="pre-context" id="pre140655233625224" >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
if self.connection is None: < / pre > < / li >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
with self.wrap_database_errors:
    < / pre > < / li >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre > self.connect() < / pre > < / li >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >  # ##### Backend-specific wrappers for PEP-249 connection methods #####</pre></li>

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >


def _cursor(self):
    <

    / pre > < / li >

< / ol >

< ol
start = "204"


class ="context-line" >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
self.ensure_connection() < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '205'


class ="post-context" id="post140655233625224" >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
with self.wrap_database_errors:
    < / pre > < / li >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
return self.create_cursor() < / pre > < / li >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >


def _commit(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
if self.connection is not None: < / pre > < / li >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
with self.wrap_database_errors:
    < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233625224')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233625224" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / base / base.py < / code > in < code > ensure_connection < / code >

< div


class ="context" id="c140655233624136" >

< ol
start = "192"


class ="pre-context" id="pre140655233624136" >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >


def ensure_connection(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > Guarantees
that
a
connection
to
the
database is established. < / pre > < / li >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >
if self.connection is None: < / pre > < / li >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >
with self.wrap_database_errors:
    < / pre > < / li >

< / ol >

< ol
start = "199"


class ="context-line" >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >
self.connect() < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '200'


class ="post-context" id="post140655233624136" >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >  # ##### Backend-specific wrappers for PEP-249 connection methods #####</pre></li>

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >


def _cursor(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > self.ensure_connection() < / pre > < / li >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >
with self.wrap_database_errors:
    < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233624136')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233624136" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / utils.py < / code > in < code > __exit__ < / code >

< div


class ="context" id="c140655233623368" >

< ol
start = "87"


class ="pre-context" id="pre140655233623368" >

< li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre > dj_exc_value.__cause__ = exc_value < / pre > < / li >

< li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre > if not hasattr(
    exc_value, &  # 39;__traceback__&#39;):</pre></li>

                                                                                 < li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre > exc_value.__traceback__ = traceback < / pre > < / li >

                                                                                                                            < li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >  # Only set the &#39;errors_occurred&#39; flag for errors that may make</pre></li>

          < li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >  # the connection unusable.</pre></li>

          < li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >
if dj_exc_type not in (DataError, IntegrityError): < / pre > < / li >

                                                                 < li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre > self.wrapper.errors_occurred = True < / pre > < / li >

                                                                                                                            < / ol >

                                                                                                                                < ol
start = "94"


class ="context-line" >

< li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >
six.reraise(dj_exc_type, dj_exc_value,
            traceback) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '95'


class ="post-context" id="post140655233623368" >

< li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >


def __call__(self, func):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >  # Note that we are intentionally not using @wraps here for performance</pre></li>

< li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >  # reasons. Refs #21109.</pre></li>

< li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >


def inner(*args, **kwargs):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >
with self:
    < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233623368')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233623368" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > db_exc_type < / td >
< td


class ="code" > < pre > & lt; class &  # 39;pymysql.err.OperationalError&#39;&gt;</pre></td>

< / tr >

< tr >
< td > dj_exc_type < / td >
< td


class ="code" > < pre > & lt; class &  # 39;django.db.utils.OperationalError&#39;&gt;</pre></td>

< / tr >

< tr >
< td > dj_exc_value < / td >
< td


class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
< / tr >

< tr >
< td > exc_type < / td >
< td


class ="code" > < pre > & lt; class &  # 39;pymysql.err.OperationalError&#39;&gt;</pre></td>

< / tr >

< tr >
< td > exc_value < / td >
< td


class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.utils.DatabaseErrorWrapper object at 0x7fecd8586a90 & gt; < / pre > < / td >

< / tr >

< tr >
< td > traceback < / td >
< td


class ="code" > < pre > & lt;traceback object at 0x7fecd93c6fc8 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / utils / six.py < / code > in < code > reraise < / code >

< div


class ="context" id="c140655233625032" >

< ol
start = "678"


class ="pre-context" id="pre140655233625032" >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
if PY3: < / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > exec_ = getattr(
    moves.builtins, & quot;
exec & quot;) < / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >


def reraise(tp, value, tb=None):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
if value is None: < / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > value = tp() < / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
if value.__traceback__ is not tb: < / pre > < / li >

< / ol >

< ol
start = "685"


class ="context-line" >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
raise value.with_traceback(tb) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '686'


class ="post-context" id="post140655233625032" >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
raise value < / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > else: < / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >


def exec_(_code_, _globs_=None, _locs_=None):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > & quot; & quot; & quot;
Execute
code in a
namespace. & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
if _globs_ is None: < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233625032')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233625032" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > tb < / td >
< td


class ="code" > < pre > & lt;traceback object at 0x7fecd93c6fc8 & gt; < / pre > < / td >

< / tr >

< tr >
< td > tp < / td >
< td


class ="code" > < pre > & lt; class &  # 39;django.db.utils.OperationalError&#39;&gt;</pre></td>

< / tr >

< tr >
< td > value < / td >
< td


class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / base / base.py < / code > in < code > ensure_connection < / code >

< div


class ="context" id="c140655233626056" >

< ol
start = "192"


class ="pre-context" id="pre140655233626056" >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >


def ensure_connection(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > Guarantees
that
a
connection
to
the
database is established. < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
if self.connection is None: < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
with self.wrap_database_errors:
    < / pre > < / li >

< / ol >

< ol
start = "199"


class ="context-line" >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
self.connect() < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '200'


class ="post-context" id="post140655233626056" >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >  # ##### Backend-specific wrappers for PEP-249 connection methods #####</pre></li>

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >


def _cursor(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > self.ensure_connection() < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
with self.wrap_database_errors:
    < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233626056')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233626056" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / base / base.py < / code > in < code > connect < / code >

< div


class ="context" id="c140655233624904" >

< ol
start = "164"


class ="pre-context" id="pre140655233624904" >

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >  # Reset parameters defining when to close the connection</pre></li>

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > max_age =
self.settings_dict[ &  # 39;CONN_MAX_AGE&#39;]</pre></li>

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.close_at = None if max_age is None else time.time() + max_age < / pre > < / li >

                                                                                                                                                           < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.closed_in_transaction = False < / pre > < / li >

                                                                                                                           < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.errors_occurred = False < / pre > < / li >

                                                                                                                     < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >  # Establish the connection</pre></li>

          < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > conn_params = self.get_connection_params() < / pre > < / li >

                                                                                                                                   < / ol >

                                                                                                                                       < ol
start = "171"


class ="context-line" >

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >
self.connection = self.get_new_connection(
    conn_params) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '172'


class ="post-context" id="post140655233624904" >

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.set_autocommit(
    self.settings_dict[ &  # 39;AUTOCOMMIT&#39;])</pre></li>

    < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.init_connection_state() < / pre > < / li >

                                                                                                                     < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > connection_created.send(
    sender=self.__class__, connection=self) < / pre > < / li >

                                                          < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > < / pre > < / li >

                                                                                        < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.run_on_commit = [] < / pre > < / li >

                                                                                                                < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > < / pre > < / li >

                                                                                        < / ol >

                                                                                            < / div >

                                                                                                < div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233624904')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233624904" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > conn_params < / td >
< td


class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
&  # 39;client_flag&#39;: 2,
&  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
1: &


lt;


class &  # 39;int&#39;&gt;,
    2: & lt;

    class &  # 39;int&#39;&gt;,
        3: & lt;

        class &  # 39;int&#39;&gt;,

            4: & lt;

        class &  # 39;float&#39;&gt;,

            5: & lt;

        class &  # 39;float&#39;&gt;,

            7: & lt;

        function
        convert_mysql_timestamp
        at
        0x7fecdb3d7bf8 & gt;,
        8: & lt;

        class &  # 39;int&#39;&gt;,
            9: & lt;

            class &  # 39;int&#39;&gt;,

                10: & lt;

            function
            convert_date
            at
            0x7fecdb3d7b70 & gt;,
            11: & lt;
            function
            typecast_time
            at
            0x7fecdd779bf8 & gt;,
            12: & lt;
            function
            convert_datetime
            at
            0x7fecdb3d79d8 & gt;,
            13: & lt;

            class &  # 39;int&#39;&gt;,
                15: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                16: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                246: & lt;
                function
                typecast_decimal
                at
                0x7fecdd779d08 & gt;,
                248: & lt;
                function
                convert_set
                at
                0x7fecdb3d7c80 & gt;,
                249: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                250: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                251: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                252: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                253: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                254: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                & lt;

                class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                    & lt;

                    class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                        & lt;

                    class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                        & lt;

                    class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                        & lt;

                    class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                        & lt;

                    class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                        & lt;

                    class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                        & lt;

                    class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                        & lt;

                    class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                        & lt;

                    class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                        & lt;

                    class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                        & lt;

                    class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                        & lt;

                    class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

            &  # 39;db&#39;: &#39;main&#39;,
            &  # 39;host&#39;: &#39;127.0.0.1&#39;,
            &  # 39;passwd&#39;: &#39;123456&#39;,
            &  # 39;port&#39;: 3306,
            &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
            < / tr >

            < tr >
            < td > max_age < / td >
            < td

            class ="code" > < pre > 0 < / pre > < / td >

            < / tr >

            < tr >
            < td > self < / td >
            < td

            class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

            < / tr >

            < / tbody >
            < / table >

            < / li >

            < li

            class ="frame django" >

            < code > / usr / local / anaconda3 / lib / python3
            .6 / site - packages / django / db / backends / mysql / base.py < / code > in < code > get_new_connection < / code >

            < div

            class ="context" id="c140655233624776" >

            < ol
            start = "258"

            class ="pre-context" id="pre140655233624776" >

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >  # We need the number of potentially affected rows after an</pre></li>

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >  # &quot;UPDATE&quot;, not the number of changed rows.</pre></li>

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
            kwargs[ &  # 39;client_flag&#39;] = CLIENT.FOUND_ROWS</pre></li>

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > kwargs.update(
                settings_dict[ &  # 39;OPTIONS&#39;])</pre></li>

                < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >

        return kwargs < / pre > < / li >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > < / pre > < / li >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >

        def get_new_connection(self, conn_params):
            <

            / pre > < / li >

        < / ol >

        < ol
        start = "265"

        class ="context-line" >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
        conn = Database.connect(
            **conn_params) < / pre > < span > ... < / span > < / li > < / ol >

        < ol
        start = '266'

        class ="post-context" id="post140655233624776" >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
        conn.encoders[SafeText] = conn.encoders[
                                      six.text_type] < / pre > < / li >

    < li
    onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
    conn.encoders[SafeBytes] = conn.encoders[
                                   bytes] < / pre > < / li >

< li
onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
return conn < / pre > < / li >

< li
onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >


def init_connection_state(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
if self.features.is_sql_auto_is_null_enabled: < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233624776')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233624776" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > conn_params < / td >
< td


class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
&  # 39;client_flag&#39;: 2,
&  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
1: &


lt;


class &  # 39;int&#39;&gt;,
    2: & lt;

    class &  # 39;int&#39;&gt;,
        3: & lt;

        class &  # 39;int&#39;&gt;,

            4: & lt;

        class &  # 39;float&#39;&gt;,

            5: & lt;

        class &  # 39;float&#39;&gt;,

            7: & lt;

        function
        convert_mysql_timestamp
        at
        0x7fecdb3d7bf8 & gt;,
        8: & lt;

        class &  # 39;int&#39;&gt;,
            9: & lt;

            class &  # 39;int&#39;&gt;,

                10: & lt;

            function
            convert_date
            at
            0x7fecdb3d7b70 & gt;,
            11: & lt;
            function
            typecast_time
            at
            0x7fecdd779bf8 & gt;,
            12: & lt;
            function
            convert_datetime
            at
            0x7fecdb3d79d8 & gt;,
            13: & lt;

            class &  # 39;int&#39;&gt;,
                15: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                16: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                246: & lt;
                function
                typecast_decimal
                at
                0x7fecdd779d08 & gt;,
                248: & lt;
                function
                convert_set
                at
                0x7fecdb3d7c80 & gt;,
                249: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                250: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                251: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                252: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                253: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                254: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                & lt;

                class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                    & lt;

                    class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                        & lt;

                    class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                        & lt;

                    class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                        & lt;

                    class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                        & lt;

                    class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                        & lt;

                    class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                        & lt;

                    class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                        & lt;

                    class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                        & lt;

                    class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                        & lt;

                    class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                        & lt;

                    class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                        & lt;

                    class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

            &  # 39;db&#39;: &#39;main&#39;,
            &  # 39;host&#39;: &#39;127.0.0.1&#39;,
            &  # 39;passwd&#39;: &#39;123456&#39;,
            &  # 39;port&#39;: 3306,
            &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
            < / tr >

            < tr >
            < td > self < / td >
            < td

            class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

            < / tr >

            < / tbody >
            < / table >

            < / li >

            < li

            class ="frame user" >

            < code > / usr / local / anaconda3 / lib / python3
            .6 / site - packages / pymysql / __init__.py < / code > in < code > Connect < / code >

            < div

            class ="context" id="c140655233622600" >

            < ol
            start = "87"

            class ="pre-context" id="pre140655233622600" >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >

            def Connect(*args, **kwargs):
                <

                / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > & quot; & quot; & quot; < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > Connect
            to
            the
            database;
            see
            connections.Connection.__init__()
            for < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > more
            information. < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > & quot; & quot; & quot; < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
            from .connections import Connection < / pre > < / li >

            < / ol >

            < ol
            start = "94"

            class ="context-line" >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
            return Connection(*args,
                              **kwargs) < / pre > < span > ... < / span > < / li > < / ol >

            < ol
            start = '95'

            class ="post-context" id="post140655233622600" >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
            from . import connections as _orig_conn < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
            if _orig_conn.Connection.__init__.__doc__ is not None: < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > Connect.__doc__ = _orig_conn.Connection.__init__.__doc__ < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
            del _orig_conn < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

            < / ol >

            < / div >

            < div

            class ="commands" >

            < a
            href = "#"
            onclick = "return varToggle(this, '140655233622600')" > < span > &  # x25b6;</span> Local vars</a>

            < / div >
            < table

            class ="vars" id="v140655233622600" >

            < thead >
            < tr >
            < th > Variable < / th >
            < th > Value < / th >
            < / tr >
            < / thead >
            < tbody >

            < tr >
            < td > Connection < / td >
            < td

            class ="code" > < pre > & lt; class &  # 39;pymysql.connections.Connection&#39;&gt;</pre></td>

            < / tr >

            < tr >
            < td > args < / td >
            < td

            class ="code" > < pre > () < / pre > < / td >

            < / tr >

            < tr >
            < td > kwargs < / td >
            < td

            class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
            &  # 39;client_flag&#39;: 2,
            &  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
            1: &

            lt;

            class &  # 39;int&#39;&gt;,
                2: & lt;

                class &  # 39;int&#39;&gt;,
                    3: & lt;

                    class &  # 39;int&#39;&gt;,

                        4: & lt;

                    class &  # 39;float&#39;&gt;,

                        5: & lt;

                    class &  # 39;float&#39;&gt;,

                        7: & lt;

                    function
                    convert_mysql_timestamp
                    at
                    0x7fecdb3d7bf8 & gt;,
                    8: & lt;

                    class &  # 39;int&#39;&gt;,
                        9: & lt;

                        class &  # 39;int&#39;&gt;,

                            10: & lt;

                        function
                        convert_date
                        at
                        0x7fecdb3d7b70 & gt;,
                        11: & lt;
                        function
                        typecast_time
                        at
                        0x7fecdd779bf8 & gt;,
                        12: & lt;
                        function
                        convert_datetime
                        at
                        0x7fecdb3d79d8 & gt;,
                        13: & lt;

                        class &  # 39;int&#39;&gt;,
                            15: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            16: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            246: & lt;
                            function
                            typecast_decimal
                            at
                            0x7fecdd779d08 & gt;,
                            248: & lt;
                            function
                            convert_set
                            at
                            0x7fecdb3d7c80 & gt;,
                            249: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            250: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            251: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            252: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            253: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            254: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            & lt;

                            class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                                & lt;

                                class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                                    & lt;

                                class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                                    & lt;

                                class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                                    & lt;

                                class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                                    & lt;

                                class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                                    & lt;

                                class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                                    & lt;

                                class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                                    & lt;

                                class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                                    & lt;

                                class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                                    & lt;

                                class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                                    & lt;

                                class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                                    & lt;

                                class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

                        &  # 39;db&#39;: &#39;main&#39;,
                        &  # 39;host&#39;: &#39;127.0.0.1&#39;,
                        &  # 39;passwd&#39;: &#39;123456&#39;,
                        &  # 39;port&#39;: 3306,
                        &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
                        < / tr >

                        < / tbody >
                        < / table >

                        < / li >

                        < li

                        class ="frame user" >

                        < code > / usr / local / anaconda3 / lib / python3
                        .6 / site - packages / pymysql / connections.py < / code > in < code > __init__ < / code >

                        < div

                        class ="context" id="c140655233624456" >

                        < ol
                        start = "318"

                        class ="pre-context" id="pre140655233624456" >

                        < li
                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                        if program_name: < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                        self._connect_attrs[ & quot;
                        program_name & quot;] = program_name < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                    if defer_connect: < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > self._sock = None < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > else: < / pre > < / li >

                    < / ol >

                    < ol
                    start = "325"

                    class ="context-line" >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                    self.connect() < / pre > < span > ... < / span > < / li > < / ol >

                    < ol
                    start = '326'

                    class ="post-context" id="post140655233624456" >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >

                    def _create_ssl_ctx(self, sslp):
                        <

                        / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                    if isinstance(sslp,
                                  ssl.SSLContext): < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                    return sslp < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > ca = sslp.get( &  # 39;ca&#39;)</pre></li>

                                                                                                   < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > capath = sslp.get( &  # 39;capath&#39;)</pre></li>

                                                                                                       < / ol >

                                                                                                           < / div >

                                                                                                               < div

                    class ="commands" >

                    < a
                    href = "#"
                    onclick = "return varToggle(this, '140655233624456')" > < span > &  # x25b6;</span> Local vars</a>

                    < / div >
                    < table

                    class ="vars" id="v140655233624456" >

                    < thead >
                    < tr >
                    < th > Variable < / th >
                    < th > Value < / th >
                    < / tr >
                    < / thead >
                    < tbody >

                    < tr >
                    < td > auth_plugin_map < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > autocommit < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > binary_prefix < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > bind_address < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > charset < / td >
                    < td

                    class ="code" > < pre > &  # 39;utf8&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > client_flag < / td >
                    < td

                    class ="code" > < pre > 3842575 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > compress < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > connect_timeout < / td >
                    < td

                    class ="code" > < pre > 10 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > conv < / td >
                    < td

                    class ="code" > < pre > {0: &

                    lt;
                    function
                    typecast_decimal
                    at
                    0x7fecdd779d08 & gt;,
                    1: & lt;

                    class &  # 39;int&#39;&gt;,
                        2: & lt;

                        class &  # 39;int&#39;&gt;,

                    3: & lt;

                    class &  # 39;int&#39;&gt;,

                        4: & lt;

                    class &  # 39;float&#39;&gt;,

                        5: & lt;

                    class &  # 39;float&#39;&gt;,

                        7: & lt;

                    function
                    convert_mysql_timestamp
                    at
                    0x7fecdb3d7bf8 & gt;,
                    8: & lt;

                    class &  # 39;int&#39;&gt;,

                        9: & lt;

                    class &  # 39;int&#39;&gt;,

                        10: & lt;

                    function
                    convert_date
                    at
                    0x7fecdb3d7b70 & gt;,
                    11: & lt;
                    function
                    typecast_time
                    at
                    0x7fecdd779bf8 & gt;,
                    12: & lt;
                    function
                    convert_datetime
                    at
                    0x7fecdb3d79d8 & gt;,
                    13: & lt;

                    class &  # 39;int&#39;&gt;,

                        15: & lt;

                    function
                    through
                    at
                    0x7fecdb3d7d08 & gt;,
                    16: & lt;
                    function
                    through
                    at
                    0x7fecdb3d7d08 & gt;,
                    246: & lt;
                    function
                    typecast_decimal
                    at
                    0x7fecdd779d08 & gt;,
                    248: & lt;
                    function
                    convert_set
                    at
                    0x7fecdb3d7c80 & gt;,
                    249: & lt;
                    function
                    through
                    at
                    0x7fecdb3d7d08 & gt;,
                    250: & lt;
                    function
                    through
                    at
                    0x7fecdb3d7d08 & gt;,
                    251: & lt;
                    function
                    through
                    at
                    0x7fecdb3d7d08 & gt;,
                    252: & lt;
                    function
                    through
                    at
                    0x7fecdb3d7d08 & gt;,
                    253: & lt;
                    function
                    through
                    at
                    0x7fecdb3d7d08 & gt;,
                    254: & lt;
                    function
                    through
                    at
                    0x7fecdb3d7d08 & gt;,
                    & lt;

                    class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,

                        & lt;

                    class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                        & lt;

                    class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                        & lt;

                    class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                        & lt;

                    class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                        & lt;

                    class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                        & lt;

                    class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                        & lt;

                    class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                        & lt;

                    class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                        & lt;

                    class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                        & lt;

                    class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                        & lt;

                    class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                        & lt;

                    class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;}</pre></td>

                        < / tr >

                    < tr >
                    < td > cursorclass < / td >
                    < td

                    class ="code" > < pre > & lt; class &  # 39;pymysql.cursors.Cursor&#39;&gt;</pre></td>

                    < / tr >

                    < tr >
                    < td > database < / td >
                    < td

                    class ="code" > < pre > &  # 39;main&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > db < / td >
                    < td

                    class ="code" > < pre > &  # 39;main&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > defer_connect < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > host < / td >
                    < td

                    class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > init_command < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > local_infile < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > max_allowed_packet < / td >
                    < td

                    class ="code" > < pre > 16777216 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > named_pipe < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > passwd < / td >
                    < td

                    class ="code" > < pre > &  # 39;123456&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > password < / td >
                    < td

                    class ="code" > < pre > &  # 39;123456&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > port < / td >
                    < td

                    class ="code" > < pre > 3306 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > program_name < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > read_default_file < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > read_default_group < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > read_timeout < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > self < / td >
                    < td

                    class ="code" > < pre > & lt;pymysql.connections.Connection object at 0x7fecd8586828 & gt; < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > server_public_key < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > sql_mode < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > ssl < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > unix_socket < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > use_unicode < / td >
                    < td

                    class ="code" > < pre > True < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > user < / td >
                    < td

                    class ="code" > < pre > &  # 39;besttest&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > write_timeout < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < / tbody >
                    < / table >

                    < / li >

                    < li

                    class ="frame user" >

                    < code > / usr / local / anaconda3 / lib / python3
                    .6 / site - packages / pymysql / connections.py < / code > in < code > connect < / code >

                    < div

                    class ="context" id="c140655233623432" >

                    < ol
                    start = "623"

                    class ="pre-context" id="pre140655233623432" >

                    < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > 2003, < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > & quot;
                    Can &  # 39;t connect to MySQL server on %r (%s)&quot; % (</pre></li>

                    < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > self.host, e)) < / pre > < / li >

                                                                                                                           < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # Keep original exception and traceback to investigate error.</pre></li>

                              < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > exc.original_exception = e < / pre > < / li >

                                                                                                                                       < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > exc.traceback = traceback.format_exc() < / pre > < / li >

                                                                                                                                                   < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
                    if DEBUG: print(
                        exc.traceback) < / pre > < / li >

                                                     < / ol >

                                                         < ol
                    start = "630"

                    class ="context-line" >

                    < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
                    raise exc < / pre > < span > ... < / span > < / li > < / ol >

                    < ol
                    start = '631'

                    class ="post-context" id="post140655233623432" >

                    < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # If e is neither DatabaseError or IOError, It&#39;s a bug.</pre></li>

                    < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # But raising AssertionError hides original error.</pre></li>

                    < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # So just reraise it.</pre></li>

                    < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
                    raise < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > < / pre > < / li >

                    < / ol >

                    < / div >

                    < div

                    class ="commands" >

                    < a
                    href = "#"
                    onclick = "return varToggle(this, '140655233623432')" > < span > &  # x25b6;</span> Local vars</a>

                    < / div >
                    < table

                    class ="vars" id="v140655233623432" >

                    < thead >
                    < tr >
                    < th > Variable < / th >
                    < th > Value < / th >
                    < / tr >
                    < / thead >
                    < tbody >

                    < tr >
                    < td > exc < / td >
                    < td

                    class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                    < / tr >

                    < tr >
                    < td > kwargs < / td >
                    < td

                    class ="code" > < pre > {} < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > self < / td >
                    < td

                    class ="code" > < pre > & lt;pymysql.connections.Connection object at 0x7fecd8586828 & gt; < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > sock < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < / tbody >
                    < / table >

                    < / li >

                    < / ul >
                    < / div >

                    < form
                    action = "http://dpaste.com/"
                    name = "pasteform"
                    id = "pasteform"
                    method = "post" >

                    < div
                    id = "pastebinTraceback"

                    class ="pastebin" >

                    < input
                    type = "hidden"
                    name = "language"
                    value = "PythonConsole" >
                    < input
                    type = "hidden"
                    name = "title"
                    value = "OperationalError at /api/user/add_stu" >
                    < input
                    type = "hidden"
                    name = "source"
                    value = "Django Dpaste Agent" >
                    < input
                    type = "hidden"
                    name = "poster"
                    value = "Django" >
                    < textarea
                    name = "content"
                    id = "traceback_area"
                    cols = "140"
                    rows = "25" >
                    Environment:

                    Request
                    Method: POST
                    Request
                    URL: http: // api.nnzhp.cn: 80 / api / user / add_stu

                    Django
                    Version: 1.10
                    Python
                    Version: 3.6
                    .4
                    Installed
                    Applications:
                    [ &  # 39;django.contrib.admin&#39;,
                    &  # 39;django.contrib.auth&#39;,
                    &  # 39;django.contrib.contenttypes&#39;,
                    &  # 39;django.contrib.sessions&#39;,
                    &  # 39;django.contrib.messages&#39;,
                    &  # 39;django.contrib.staticfiles&#39;,
                    &  # 39;app.apps.AppConfig&#39;]
                    Installed
                    Middleware:
                    [ &  # 39;django.middleware.security.SecurityMiddleware&#39;,
                    &  # 39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
                    &  # 39;django.middleware.common.CommonMiddleware&#39;,
                    &  # 39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
                    &  # 39;django.contrib.auth.middleware.SessionAuthenticationMiddleware&#39;,
                    &  # 39;django.contrib.messages.middleware.MessageMiddleware&#39;,
                    &  # 39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]

                    Traceback:

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/connections.py" in connect
                    583. ** kwargs)

                    File
                    "/usr/local/anaconda3/lib/python3.6/socket.py" in create_connection
                    724.
                    raise err

                    File
                    "/usr/local/anaconda3/lib/python3.6/socket.py" in create_connection
                    713.
                    sock.connect(sa)

                    During
                    handling
                    of
                    the
                    above
                    exception([Errno 111]
                    Connection
                    refused), another
                    exception
                    occurred:

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in ensure_connection
                    199.
                    self.connect()

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in connect
                    171.
                    self.connection = self.get_new_connection(
                        conn_params)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/mysql/base.py" in get_new_connection
                    265.
                    conn = Database.connect(**conn_params)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/__init__.py" in Connect
                    94.
                    return Connection(*args, **kwargs)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/connections.py" in __init__
                    325.
                    self.connect()

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/connections.py" in connect
                    630.
                    raise exc

                    The
                    above
                    exception((2003,
                               & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)) was the direct cause of the following exception:

                               File "/usr/local/anaconda3/lib/python3.6/site-packages/django/core/handlers/exception.py" in inner
                               39.             response = get_response(request)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/core/handlers/base.py" in _legacy_get_response
                    249.
                    response = self._get_response(request)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
                    187.
                    response = self.process_exception_by_middleware(
                        e, request)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
                    185.
                    response = wrapped_callback(request,
                                                *callback_args,
                                                **callback_kwargs)

                    File
                    "/usr/local/choujiang/app/tools.py" in war
                    47.
                    return func(*args, **kwargs)

                    File
                    "/usr/local/choujiang/app/views.py" in add_stu
                    148.
                    if obj:

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/query.py" in __bool__
                    260.
                    self._fetch_all()

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/query.py" in _fetch_all
                    1085.
                    self._result_cache = list(self.iterator())

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/query.py" in __iter__
                    54.
                    results = compiler.execute_sql()

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/sql/compiler.py" in execute_sql
                    824.
                    sql, params = self.as_sql()

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/sql/compiler.py" in as_sql
                    376.
                    where, w_params = self.compile(
                        self.where) if self.where is not None else (
                        & quot; & quot;, [])

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/sql/compiler.py" in compile
                    353.
                    sql, params = node.as_sql(self, self.connection)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/sql/where.py" in as_sql
                    79.
                    sql, params = compiler.compile(child)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/sql/compiler.py" in compile
                    353.
                    sql, params = node.as_sql(self, self.connection)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/lookups.py" in as_sql
                    155.
                    lhs_sql, params = self.process_lhs(compiler,
                                                       connection)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/lookups.py" in process_lhs
                    148.
                    db_type = self.lhs.output_field.db_type(
                        connection=connection)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/fields/__init__.py" in db_type
                    629.
                    return connection.data_types[
                               self.get_internal_type()] % data

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/utils/functional.py" in __get__
                    35.
                    res = instance.__dict__[self.name] = self.func(
                        instance)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/mysql/base.py" in data_types
                    185.
                    if self.features.supports_microsecond_precision:

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/utils/functional.py" in __get__
                    35.
                    res = instance.__dict__[self.name] = self.func(
                        instance)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/mysql/features.py" in supports_microsecond_precision
                    54.
                    return self.connection.mysql_version & gt;= (5,
                                                                 6,
                                                                 4) and Database.version_info & gt;= (
                        1, 2, 5)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/utils/functional.py" in __get__
                    35.
                    res = instance.__dict__[self.name] = self.func(
                        instance)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/mysql/base.py" in mysql_version
                    369.
                    with self.temporary_connection() as cursor:

                    File
                    "/usr/local/anaconda3/lib/python3.6/contextlib.py" in __enter__
                    81.
                    return next(self.gen)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in temporary_connection
                    564.
                    cursor = self.cursor()

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in cursor
                    231.
                    cursor = self.make_debug_cursor(self._cursor())

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in _cursor
                    204.
                    self.ensure_connection()

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in ensure_connection
                    199.
                    self.connect()

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/utils.py" in __exit__
                    94.
                    six.reraise(dj_exc_type, dj_exc_value,
                                traceback)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/utils/six.py" in reraise
                    685.
                    raise value.with_traceback(tb)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in ensure_connection
                    199.
                    self.connect()

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in connect
                    171.
                    self.connection = self.get_new_connection(
                        conn_params)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/mysql/base.py" in get_new_connection
                    265.
                    conn = Database.connect(**conn_params)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/__init__.py" in Connect
                    94.
                    return Connection(*args, **kwargs)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/connections.py" in __init__
                    325.
                    self.connect()

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/connections.py" in connect
                    630.
                    raise exc

                    Exception
                    Type: OperationalError
                    at / api / user / add_stu
                    Exception
                    Value: (2003,
                            & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)
                            < / textarea >
                            < br > < br >
                            < input type="submit" value="Share this traceback on a public website" >
                            < / div >
                            < / form >
                            < / div >

                            < div id="requestinfo" >
                            < h2 > Request information < / h2 >

                            < h3 id="user-info" > USER < / h3 >
                            < p > AnonymousUser < / p >

                            < h3 id="get-info" > GET < / h3 >

                            < p > No GET data < / p >

                            < h3 id="post-info" > POST < / h3 >

                            < p > No POST data < / p >

                            < h3 id="files-info" > FILES < / h3 >

                            < p > No FILES data < / p >

                            < h3 id="cookie-info" > COOKIES < / h3 >

                            < p > No cookie data < / p >

                            < h3 id="meta-info" > META < / h3 >
                            < table

                    class ="req" >

                    < thead >
                    < tr >
                    < th > Variable < / th >
                    < th > Value < / th >
                    < / tr >
                    < / thead >
                    < tbody >

                    < tr >
                    < td > CONTENT_LENGTH < / td >
                    < td

                    class ="code" > < pre > &  # 39;73&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > CONTENT_TYPE < / td >
                    < td

                    class ="code" > < pre > &  # 39;text/plain&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DJANGO_SETTINGS_MODULE < / td >
                    < td

                    class ="code" > < pre > &  # 39;choujiang.settings&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > GATEWAY_INTERFACE < / td >
                    < td

                    class ="code" > < pre > &  # 39;CGI/1.1&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > G_BROKEN_FILENAMES < / td >
                    < td

                    class ="code" > < pre > &  # 39;1&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HISTCONTROL < / td >
                    < td

                    class ="code" > < pre > &  # 39;ignoredups&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HISTSIZE < / td >
                    < td

                    class ="code" > < pre > &  # 39;3000&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HISTTIMEFORMAT < / td >
                    < td

                    class ="code" > < pre > &  # 39;%F %T &#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HOME < / td >
                    < td

                    class ="code" > < pre > &  # 39;/root&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HOSTNAME < / td >
                    < td

                    class ="code" > < pre > &  # 39;VM_152_28_centos&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HTTP_ACCEPT < / td >
                    < td

                    class ="code" > < pre > &  # 39;*/*&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HTTP_ACCEPT_ENCODING < / td >
                    < td

                    class ="code" > < pre > &  # 39;gzip, deflate&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HTTP_CONNECTION < / td >
                    < td

                    class ="code" > < pre > &  # 39;close&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HTTP_HOST < / td >
                    < td

                    class ="code" > < pre > &  # 39;api.nnzhp.cn:80&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HTTP_USER_AGENT < / td >
                    < td

                    class ="code" > < pre > &  # 39;python-requests/2.21.0&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HTTP_VIA < / td >
                    < td

                    class ="code" > < pre > &  # 39;nginx&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HTTP_X_FORWARDED_FOR < / td >
                    < td

                    class ="code" > < pre > &  # 39;117.75.179.13&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HTTP_X_REAL_IP < / td >
                    < td

                    class ="code" > < pre > &  # 39;117.75.179.13&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > LANG < / td >
                    < td

                    class ="code" > < pre > &  # 39;zh_CN.UTF-8&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > LESSOPEN < / td >
                    < td

                    class ="code" > < pre > &  # 39;||/usr/bin/lesspipe.sh %s&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > LOGNAME < / td >
                    < td

                    class ="code" > < pre > &  # 39;root&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > LS_COLORS < / td >
                    < td

                    class ="code" > < pre > &  # 39;rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lz=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.bz=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.rar=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > MAIL < / td >
                    < td

                    class ="code" > < pre > &  # 39;/var/spool/mail/root&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > PATH < / td >
                    < td

                    class ="code" > < pre > &  # 39;/usr/local/anaconda3/bin:/usr/local/anaconda3/bin:/usr/local/anaconda3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/opt/lampp/bin:/usr/local/jdk1.8.0_131/bin:/root/bin:/opt/lampp/bin:/usr/local/jdk1.8.0_131/bin:/usr/local/node/bin&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > PATH_INFO < / td >
                    < td

                    class ="code" > < pre > &  # 39;/api/user/add_stu&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > PROMPT_COMMAND < / td >
                    < td

                    class ="code" > < pre > ( &  # 39;history -a; printf &quot;\\033]0;%s@%s:%s\\007&quot; &quot;${USER}&quot; &quot;${HOSTNAME%%.*}&quot; &#39;
                    &  # 39;&quot;${PWD/#$HOME/~}&quot;&#39;)</pre></td>
                    < / tr >

                    < tr >
                    < td > PWD < / td >
                    < td

                    class ="code" > < pre > &  # 39;/usr/local/choujiang/bin&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > QUERY_STRING < / td >
                    < td

                    class ="code" > < pre > &  # 39;&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > REMOTE_ADDR < / td >
                    < td

                    class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > REMOTE_HOST < / td >
                    < td

                    class ="code" > < pre > &  # 39;&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > REQUEST_METHOD < / td >
                    < td

                    class ="code" > < pre > &  # 39;POST&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > RUN_MAIN < / td >
                    < td

                    class ="code" > < pre > &  # 39;true&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SCRIPT_NAME < / td >
                    < td

                    class ="code" > < pre > &  # 39;&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SERVER_NAME < / td >
                    < td

                    class ="code" > < pre > &  # 39;localhost.localdomain&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SERVER_PORT < / td >
                    < td

                    class ="code" > < pre > &  # 39;8000&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SERVER_PROTOCOL < / td >
                    < td

                    class ="code" > < pre > &  # 39;HTTP/1.0&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SERVER_SOFTWARE < / td >
                    < td

                    class ="code" > < pre > &  # 39;WSGIServer/0.2&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SHELL < / td >
                    < td

                    class ="code" > < pre > &  # 39;/bin/bash&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SHLVL < / td >
                    < td

                    class ="code" > < pre > &  # 39;2&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SSH_CLIENT < / td >
                    < td

                    class ="code" > < pre > &  # 39;111.199.93.183 64257 22333&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SSH_CONNECTION < / td >
                    < td

                    class ="code" > < pre > &  # 39;111.199.93.183 64257 10.139.152.28 22333&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SSH_TTY < / td >
                    < td

                    class ="code" > < pre > &  # 39;/dev/pts/1&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > TERM < / td >
                    < td

                    class ="code" > < pre > &  # 39;xterm-256color&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > TZ < / td >
                    < td

                    class ="code" > < pre > &  # 39;Asia/Shanghai&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > USER < / td >
                    < td

                    class ="code" > < pre > &  # 39;root&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > VIRTUALENVWRAPPER_HOOK_DIR < / td >
                    < td

                    class ="code" > < pre > &  # 39;/root/.virtualenvs&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > VIRTUALENVWRAPPER_PROJECT_FILENAME < / td >
                    < td

                    class ="code" > < pre > &  # 39;.project&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > VIRTUALENVWRAPPER_SCRIPT < / td >
                    < td

                    class ="code" > < pre > &  # 39;/usr/local/anaconda3/bin/virtualenvwrapper.sh&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > VIRTUALENVWRAPPER_WORKON_CD < / td >
                    < td

                    class ="code" > < pre > &  # 39;1&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > WORKON_HOME < / td >
                    < td

                    class ="code" > < pre > &  # 39;/root/.virtualenvs&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > _ < / td >
                    < td

                    class ="code" > < pre > &  # 39;/usr/bin/nohup&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > wsgi.errors < / td >
                    < td

                    class ="code" > < pre > & lt;_io.TextIOWrapper name= &  # 39;&lt;stderr&gt;&#39; mode=&#39;w&#39; encoding=&#39;UTF-8&#39;&gt;</pre></td>

                    < / tr >

                    < tr >
                    < td > wsgi.file_wrapper < / td >
                    < td

                    class ="code" > < pre > &  # 39;&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > wsgi.input < / td >
                    < td

                    class ="code" > < pre > & lt;_io.BufferedReader name=6 & gt; < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > wsgi.multiprocess < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > wsgi.multithread < / td >
                    < td

                    class ="code" > < pre > True < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > wsgi.run_once < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > wsgi.url_scheme < / td >
                    < td

                    class ="code" > < pre > &  # 39;http&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > wsgi.version < / td >
                    < td

                    class ="code" > < pre > (1, 0) < / pre > < / td >

                    < / tr >

                    < / tbody >
                    < / table >

                    < h3
                    id = "settings-info" > Settings < / h3 >
                    < h4 > Using
                    settings
                    module < code > choujiang.settings < / code > < / h4 >
                    < table

                    class ="req" >

                    < thead >
                    < tr >
                    < th > Setting < / th >
                    < th > Value < / th >
                    < / tr >
                    < / thead >
                    < tbody >

                    < tr >
                    < td > ABSOLUTE_URL_OVERRIDES < / td >
                    < td

                    class ="code" > < pre > {} < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > ADMINS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > ALLOWED_HOSTS < / td >
                    < td

                    class ="code" > < pre >[&  # 39;*&#39;]</pre></td>
                    < / tr >

                    < tr >
                    < td > APPEND_SLASH < / td >
                    < td

                    class ="code" > < pre > True < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > AUTHENTICATION_BACKENDS < / td >
                    < td

                    class ="code" > < pre >[&  # 39;django.contrib.auth.backends.ModelBackend&#39;]</pre></td>
                    < / tr >

                    < tr >
                    < td > AUTH_PASSWORD_VALIDATORS < / td >
                    < td

                    class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > AUTH_USER_MODEL < / td >
                    < td

                    class ="code" > < pre > &  # 39;auth.User&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > BASE_DIR < / td >
                    < td

                    class ="code" > < pre > &  # 39;/usr/local/choujiang&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > CACHES < / td >
                    < td

                    class ="code" > < pre > {&  # 39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>
                    < / tr >

                    < tr >
                    < td > CACHE_MIDDLEWARE_ALIAS < / td >
                    < td

                    class ="code" > < pre > &  # 39;default&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > CACHE_MIDDLEWARE_KEY_PREFIX < / td >
                    < td

                    class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > CACHE_MIDDLEWARE_SECONDS < / td >
                    < td

                    class ="code" > < pre > 600 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > CSRF_COOKIE_AGE < / td >
                    < td

                    class ="code" > < pre > 31449600 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > CSRF_COOKIE_DOMAIN < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > CSRF_COOKIE_HTTPONLY < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > CSRF_COOKIE_NAME < / td >
                    < td

                    class ="code" > < pre > &  # 39;csrftoken&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > CSRF_COOKIE_PATH < / td >
                    < td

                    class ="code" > < pre > &  # 39;/&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > CSRF_COOKIE_SECURE < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > CSRF_FAILURE_VIEW < / td >
                    < td

                    class ="code" > < pre > &  # 39;django.views.csrf.csrf_failure&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > CSRF_HEADER_NAME < / td >
                    < td

                    class ="code" > < pre > &  # 39;HTTP_X_CSRFTOKEN&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > CSRF_TRUSTED_ORIGINS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > DATABASES < / td >
                    < td

                    class ="code" > < pre > {&  # 39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,
                    &  # 39;AUTOCOMMIT&#39;: True,
                    &  # 39;CONN_MAX_AGE&#39;: 0,
                    &  # 39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;,
                    &  # 39;HOST&#39;: &#39;127.0.0.1&#39;,
                    &  # 39;NAME&#39;: &#39;main&#39;,
                    &  # 39;OPTIONS&#39;: {},
                    &  # 39;PASSWORD&#39;: &#39;********************&#39;,
                    &  # 39;PORT&#39;: &#39;3306&#39;,
                    &  # 39;TEST&#39;: {&#39;CHARSET&#39;: None,
                    &  # 39;COLLATION&#39;: None,
                    &  # 39;MIRROR&#39;: None,
                    &  # 39;NAME&#39;: None},
                    &  # 39;TIME_ZONE&#39;: None,
                    &  # 39;USER&#39;: &#39;besttest&#39;}}</pre></td>
                    < / tr >

                    < tr >
                    < td > DATABASE_ROUTERS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > DATA_UPLOAD_MAX_MEMORY_SIZE < / td >
                    < td

                    class ="code" > < pre > 2621440 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > DATA_UPLOAD_MAX_NUMBER_FIELDS < / td >
                    < td

                    class ="code" > < pre > 1000 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > DATETIME_FORMAT < / td >
                    < td

                    class ="code" > < pre > &  # 39;N j, Y, P&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DATETIME_INPUT_FORMATS < / td >
                    < td

                    class ="code" > < pre >[&  # 39;%Y-%m-%d %H:%M:%S&#39;,
                    &  # 39;%Y-%m-%d %H:%M:%S.%f&#39;,
                    &  # 39;%Y-%m-%d %H:%M&#39;,
                    &  # 39;%Y-%m-%d&#39;,
                    &  # 39;%m/%d/%Y %H:%M:%S&#39;,
                    &  # 39;%m/%d/%Y %H:%M:%S.%f&#39;,
                    &  # 39;%m/%d/%Y %H:%M&#39;,
                    &  # 39;%m/%d/%Y&#39;,
                    &  # 39;%m/%d/%y %H:%M:%S&#39;,
                    &  # 39;%m/%d/%y %H:%M:%S.%f&#39;,
                    &  # 39;%m/%d/%y %H:%M&#39;,
                    &  # 39;%m/%d/%y&#39;]</pre></td>
                    < / tr >

                    < tr >
                    < td > DATE_FORMAT < / td >
                    < td

                    class ="code" > < pre > &  # 39;N j, Y&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DATE_INPUT_FORMATS < / td >
                    < td

                    class ="code" > < pre >[&  # 39;%Y-%m-%d&#39;,
                    &  # 39;%m/%d/%Y&#39;,
                    &  # 39;%m/%d/%y&#39;,
                    &  # 39;%b %d %Y&#39;,
                    &  # 39;%b %d, %Y&#39;,
                    &  # 39;%d %b %Y&#39;,
                    &  # 39;%d %b, %Y&#39;,
                    &  # 39;%B %d %Y&#39;,
                    &  # 39;%B %d, %Y&#39;,
                    &  # 39;%d %B %Y&#39;,
                    &  # 39;%d %B, %Y&#39;]</pre></td>
                    < / tr >

                    < tr >
                    < td > DEBUG < / td >
                    < td

                    class ="code" > < pre > True < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > DEBUG_PROPAGATE_EXCEPTIONS < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > DECIMAL_SEPARATOR < / td >
                    < td

                    class ="code" > < pre > &  # 39;.&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DEFAULT_CHARSET < / td >
                    < td

                    class ="code" > < pre > &  # 39;utf-8&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DEFAULT_CONTENT_TYPE < / td >
                    < td

                    class ="code" > < pre > &  # 39;text/html&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DEFAULT_EXCEPTION_REPORTER_FILTER < / td >
                    < td

                    class ="code" > < pre > &  # 39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DEFAULT_FILE_STORAGE < / td >
                    < td

                    class ="code" > < pre > &  # 39;django.core.files.storage.FileSystemStorage&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DEFAULT_FROM_EMAIL < / td >
                    < td

                    class ="code" > < pre > &  # 39;webmaster@localhost&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DEFAULT_INDEX_TABLESPACE < / td >
                    < td

                    class ="code" > < pre > &  # 39;&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DEFAULT_TABLESPACE < / td >
                    < td

                    class ="code" > < pre > &  # 39;&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DISALLOWED_USER_AGENTS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > EMAIL_BACKEND < / td >
                    < td

                    class ="code" > < pre > &  # 39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > EMAIL_HOST < / td >
                    < td

                    class ="code" > < pre > &  # 39;localhost&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > EMAIL_HOST_PASSWORD < / td >
                    < td

                    class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > EMAIL_HOST_USER < / td >
                    < td

                    class ="code" > < pre > &  # 39;&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > EMAIL_PORT < / td >
                    < td

                    class ="code" > < pre > 25 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > EMAIL_SSL_CERTFILE < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > EMAIL_SSL_KEYFILE < / td >
                    < td

                    class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > EMAIL_SUBJECT_PREFIX < / td >
                    < td

                    class ="code" > < pre > &  # 39;[Django] &#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > EMAIL_TIMEOUT < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > EMAIL_USE_SSL < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > EMAIL_USE_TLS < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > EX_TIME < / td >
                    < td

                    class ="code" > < pre > 60000 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > FILE_CHARSET < / td >
                    < td

                    class ="code" > < pre > &  # 39;utf-8&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > FILE_UPLOAD_DIRECTORY_PERMISSIONS < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > FILE_UPLOAD_HANDLERS < / td >
                    < td

                    class ="code" > < pre >[&  # 39;django.core.files.uploadhandler.MemoryFileUploadHandler&#39;,
                    &  # 39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;]</pre></td>
                    < / tr >

                    < tr >
                    < td > FILE_UPLOAD_MAX_MEMORY_SIZE < / td >
                    < td

                    class ="code" > < pre > 2621440 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > FILE_UPLOAD_PERMISSIONS < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > FILE_UPLOAD_TEMP_DIR < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > FIRST_DAY_OF_WEEK < / td >
                    < td

                    class ="code" > < pre > 0 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > FIXTURE_DIRS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > FORCE_SCRIPT_NAME < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > FORMAT_MODULE_PATH < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > IGNORABLE_404_URLS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > INSTALLED_APPS < / td >
                    < td

                    class ="code" > < pre >[&  # 39;django.contrib.admin&#39;,
                    &  # 39;django.contrib.auth&#39;,
                    &  # 39;django.contrib.contenttypes&#39;,
                    &  # 39;django.contrib.sessions&#39;,
                    &  # 39;django.contrib.messages&#39;,
                    &  # 39;django.contrib.staticfiles&#39;,
                    &  # 39;app.apps.AppConfig&#39;]</pre></td>
                    < / tr >

                    < tr >
                    < td > INTERNAL_IPS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > LANGUAGES < / td >
                    < td

                    class ="code" > < pre >[( &  # 39;af&#39;, &#39;Afrikaans&#39;),
                    ( &  # 39;ar&#39;, &#39;Arabic&#39;),
                    ( &  # 39;ast&#39;, &#39;Asturian&#39;),
                    ( &  # 39;az&#39;, &#39;Azerbaijani&#39;),
                    ( &  # 39;bg&#39;, &#39;Bulgarian&#39;),
                    ( &  # 39;be&#39;, &#39;Belarusian&#39;),
                    ( &  # 39;bn&#39;, &#39;Bengali&#39;),
                    ( &  # 39;br&#39;, &#39;Breton&#39;),
                    ( &  # 39;bs&#39;, &#39;Bosnian&#39;),
                    ( &  # 39;ca&#39;, &#39;Catalan&#39;),
                    ( &  # 39;cs&#39;, &#39;Czech&#39;),
                    ( &  # 39;cy&#39;, &#39;Welsh&#39;),
                    ( &  # 39;da&#39;, &#39;Danish&#39;),
                    ( &  # 39;de&#39;, &#39;German&#39;),
                    ( &  # 39;dsb&#39;, &#39;Lower Sorbian&#39;),
                    ( &  # 39;el&#39;, &#39;Greek&#39;),
                    ( &  # 39;en&#39;, &#39;English&#39;),
                    ( &  # 39;en-au&#39;, &#39;Australian English&#39;),
                    ( &  # 39;en-gb&#39;, &#39;British English&#39;),
                    ( &  # 39;eo&#39;, &#39;Esperanto&#39;),
                    ( &  # 39;es&#39;, &#39;Spanish&#39;),
                    ( &  # 39;es-ar&#39;, &#39;Argentinian Spanish&#39;),
                    ( &  # 39;es-co&#39;, &#39;Colombian Spanish&#39;),
                    ( &  # 39;es-mx&#39;, &#39;Mexican Spanish&#39;),
                    ( &  # 39;es-ni&#39;, &#39;Nicaraguan Spanish&#39;),
                    ( &  # 39;es-ve&#39;, &#39;Venezuelan Spanish&#39;),
                    ( &  # 39;et&#39;, &#39;Estonian&#39;),
                    ( &  # 39;eu&#39;, &#39;Basque&#39;),
                    ( &  # 39;fa&#39;, &#39;Persian&#39;),
                    ( &  # 39;fi&#39;, &#39;Finnish&#39;),
                    ( &  # 39;fr&#39;, &#39;French&#39;),
                    ( &  # 39;fy&#39;, &#39;Frisian&#39;),
                    ( &  # 39;ga&#39;, &#39;Irish&#39;),
                    ( &  # 39;gd&#39;, &#39;Scottish Gaelic&#39;),
                    ( &  # 39;gl&#39;, &#39;Galician&#39;),
                    ( &  # 39;he&#39;, &#39;Hebrew&#39;),
                    ( &  # 39;hi&#39;, &#39;Hindi&#39;),
                    ( &  # 39;hr&#39;, &#39;Croatian&#39;),
                    ( &  # 39;hsb&#39;, &#39;Upper Sorbian&#39;),
                    ( &  # 39;hu&#39;, &#39;Hungarian&#39;),
                    ( &  # 39;ia&#39;, &#39;Interlingua&#39;),
                    ( &  # 39;id&#39;, &#39;Indonesian&#39;),
                    ( &  # 39;io&#39;, &#39;Ido&#39;),
                    ( &  # 39;is&#39;, &#39;Icelandic&#39;),
                    ( &  # 39;it&#39;, &#39;Italian&#39;),
                    ( &  # 39;ja&#39;, &#39;Japanese&#39;),
                    ( &  # 39;ka&#39;, &#39;Georgian&#39;),
                    ( &  # 39;kk&#39;, &#39;Kazakh&#39;),
                    ( &  # 39;km&#39;, &#39;Khmer&#39;),
                    ( &  # 39;kn&#39;, &#39;Kannada&#39;),
                    ( &  # 39;ko&#39;, &#39;Korean&#39;),
                    ( &  # 39;lb&#39;, &#39;Luxembourgish&#39;),
                    ( &  # 39;lt&#39;, &#39;Lithuanian&#39;),
                    ( &  # 39;lv&#39;, &#39;Latvian&#39;),
                    ( &  # 39;mk&#39;, &#39;Macedonian&#39;),
                    ( &  # 39;ml&#39;, &#39;Malayalam&#39;),
                    ( &  # 39;mn&#39;, &#39;Mongolian&#39;),
                    ( &  # 39;mr&#39;, &#39;Marathi&#39;),
                    ( &  # 39;my&#39;, &#39;Burmese&#39;),
                    ( &  # 39;nb&#39;, &#39;Norwegian BokmÃ¥l&#39;),
                    ( &  # 39;ne&#39;, &#39;Nepali&#39;),
                    ( &  # 39;nl&#39;, &#39;Dutch&#39;),
                    ( &  # 39;nn&#39;, &#39;Norwegian Nynorsk&#39;),
                    ( &  # 39;os&#39;, &#39;Ossetic&#39;),
                    ( &  # 39;pa&#39;, &#39;Punjabi&#39;),
                    ( &  # 39;pl&#39;, &#39;Polish&#39;),
                    ( &  # 39;pt&#39;, &#39;Portuguese&#39;),
                    ( &  # 39;pt-br&#39;, &#39;Brazilian Portuguese&#39;),
                    ( &  # 39;ro&#39;, &#39;Romanian&#39;),
                    ( &  # 39;ru&#39;, &#39;Russian&#39;),
                    ( &  # 39;sk&#39;, &#39;Slovak&#39;),
                    ( &  # 39;sl&#39;, &#39;Slovenian&#39;),
                    ( &  # 39;sq&#39;, &#39;Albanian&#39;),
                    ( &  # 39;sr&#39;, &#39;Serbian&#39;),
                    ( &  # 39;sr-latn&#39;, &#39;Serbian Latin&#39;),
                    ( &  # 39;sv&#39;, &#39;Swedish&#39;),
                    ( &  # 39;sw&#39;, &#39;Swahili&#39;),
                    ( &  # 39;ta&#39;, &#39;Tamil&#39;),
                    ( &  # 39;te&#39;, &#39;Telugu&#39;),
                    ( &  # 39;th&#39;, &#39;Thai&#39;),
                    ( &  # 39;tr&#39;, &#39;Turkish&#39;),
                    ( &  # 39;tt&#39;, &#39;Tatar&#39;),
                    ( &  # 39;udm&#39;, &#39;Udmurt&#39;),
                    ( &  # 39;uk&#39;, &#39;Ukrainian&#39;),
                    ( &  # 39;ur&#39;, &#39;Urdu&#39;),
                    ( &  # 39;vi&#39;, &#39;Vietnamese&#39;),
                    ( &  # 39;zh-hans&#39;, &#39;Simplified Chinese&#39;),
                    ( &  # 39;zh-hant&#39;, &#39;Traditional Chinese&#39;)]</pre></td>
                    < / tr >

                    < tr >
                    < td > LANGUAGES_BIDI < / td >
                    < td

                    class ="code" > < pre >[&  # 39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>
                    < / tr >

                    < tr >
                    < td > LANGUAGE_CODE < / td >
                    < td

                    class ="code" > < pre > &  # 39;zh-Hans&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > LANGUAGE_COOKIE_AGE < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > LANGUAGE_COOKIE_DOMAIN < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > LANGUAGE_COOKIE_NAME < / td >
                    < td

                    class ="code" > < pre > &  # 39;django_language&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > LANGUAGE_COOKIE_PATH < / td >
                    < td

                    class ="code" > < pre > &  # 39;/&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > LOCALE_PATHS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > LOGGING < / td >
                    < td

                    class ="code" > < pre > {} < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > LOGGING_CONFIG < / td >
                    < td

                    class ="code" > < pre > &  # 39;logging.config.dictConfig&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > LOGIN_REDIRECT_URL < / td >
                    < td

                    class ="code" > < pre > &  # 39;/accounts/profile/&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > LOGIN_URL < / td >
                    < td

                    class ="code" > < pre > &  # 39;/accounts/login/&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > LOGOUT_REDIRECT_URL < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > MANAGERS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > MEDIA_ROOT < / td >
                    < td

                    class ="code" > < pre > &  # 39;/usr/local/choujiang/static/img&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > MEDIA_URL < / td >
                    < td

                    class ="code" > < pre > &  # 39;/static/img/&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > MESSAGE_STORAGE < / td >
                    < td

                    class ="code" > < pre > &  # 39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > MIDDLEWARE < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > MIDDLEWARE_CLASSES < / td >
                    < td

                    class ="code" > < pre >[&  # 39;django.middleware.security.SecurityMiddleware&#39;,
                    &  # 39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
                    &  # 39;django.middleware.common.CommonMiddleware&#39;,
                    &  # 39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
                    &  # 39;django.contrib.auth.middleware.SessionAuthenticationMiddleware&#39;,
                    &  # 39;django.contrib.messages.middleware.MessageMiddleware&#39;,
                    &  # 39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]</pre></td>
                    < / tr >

                    < tr >
                    < td > MIGRATION_MODULES < / td >
                    < td

                    class ="code" > < pre > {} < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > MONTH_DAY_FORMAT < / td >
                    < td

                    class ="code" > < pre > &  # 39;F j&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > NUMBER_GROUPING < / td >
                    < td

                    class ="code" > < pre > 0 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > PASSWORD_HASHERS < / td >
                    < td

                    class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > PASSWORD_RESET_TIMEOUT_DAYS < / td >
                    < td

                    class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > PREPEND_WWW < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > REDIS_HOST < / td >
                    < td

                    class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > REDIS_PASSWD < / td >
                    < td

                    class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > REDIS_PORT < / td >
                    < td

                    class ="code" > < pre > &  # 39;6379&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > ROOT_URLCONF < / td >
                    < td

                    class ="code" > < pre > &  # 39;choujiang.urls&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SECRET_KEY < / td >
                    < td

                    class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SECURE_BROWSER_XSS_FILTER < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SECURE_CONTENT_TYPE_NOSNIFF < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SECURE_HSTS_INCLUDE_SUBDOMAINS < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SECURE_HSTS_SECONDS < / td >
                    < td

                    class ="code" > < pre > 0 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SECURE_PROXY_SSL_HEADER < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SECURE_REDIRECT_EXEMPT < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SECURE_SSL_HOST < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SECURE_SSL_REDIRECT < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SERVER_EMAIL < / td >
                    < td

                    class ="code" > < pre > &  # 39;root@localhost&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SESSION_CACHE_ALIAS < / td >
                    < td

                    class ="code" > < pre > &  # 39;default&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SESSION_COOKIE_AGE < / td >
                    < td

                    class ="code" > < pre > 1209600 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SESSION_COOKIE_DOMAIN < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SESSION_COOKIE_HTTPONLY < / td >
                    < td

                    class ="code" > < pre > True < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SESSION_COOKIE_NAME < / td >
                    < td

                    class ="code" > < pre > &  # 39;sessionid&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SESSION_COOKIE_PATH < / td >
                    < td

                    class ="code" > < pre > &  # 39;/&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SESSION_COOKIE_SECURE < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SESSION_ENGINE < / td >
                    < td

                    class ="code" > < pre > &  # 39;django.contrib.sessions.backends.db&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SESSION_EXPIRE_AT_BROWSER_CLOSE < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SESSION_FILE_PATH < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SESSION_SAVE_EVERY_REQUEST < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SESSION_SERIALIZER < / td >
                    < td

                    class ="code" > < pre > &  # 39;django.contrib.sessions.serializers.JSONSerializer&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SETTINGS_MODULE < / td >
                    < td

                    class ="code" > < pre > &  # 39;choujiang.settings&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SHORT_DATETIME_FORMAT < / td >
                    < td

                    class ="code" > < pre > &  # 39;m/d/Y P&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SHORT_DATE_FORMAT < / td >
                    < td

                    class ="code" > < pre > &  # 39;m/d/Y&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SIGNING_BACKEND < / td >
                    < td

                    class ="code" > < pre > &  # 39;django.core.signing.TimestampSigner&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SILENCED_SYSTEM_CHECKS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > STATICFILES_DIRS < / td >
                    < td

                    class ="code" > < pre > ( &  # 39;/usr/local/choujiang/static&#39;,)</pre></td>
                    < / tr >

                    < tr >
                    < td > STATICFILES_FINDERS < / td >
                    < td

                    class ="code" > < pre >[&  # 39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,
                    &  # 39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>
                    < / tr >

                    < tr >
                    < td > STATICFILES_STORAGE < / td >
                    < td

                    class ="code" > < pre > &  # 39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > STATIC_ROOT < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > STATIC_URL < / td >
                    < td

                    class ="code" > < pre > &  # 39;/static/&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > TEMPLATES < / td >
                    < td

                    class ="code" > < pre >[{&  # 39;APP_DIRS&#39;: True,
                    &  # 39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,
                    &  # 39;DIRS&#39;: [&#39;/usr/local/choujiang/templates&#39;],
                    &  # 39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.template.context_processors.debug&#39;,
                    &  # 39;django.template.context_processors.request&#39;,
                    &  # 39;django.contrib.auth.context_processors.auth&#39;,
                    &  # 39;django.contrib.messages.context_processors.messages&#39;]}}]</pre></td>
                    < / tr >

                    < tr >
                    < td > TEST_NON_SERIALIZED_APPS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > TEST_RUNNER < / td >
                    < td

                    class ="code" > < pre > &  # 39;django.test.runner.DiscoverRunner&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > THOUSAND_SEPARATOR < / td >
                    < td

                    class ="code" > < pre > &  # 39;,&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > TIME_FORMAT < / td >
                    < td

                    class ="code" > < pre > &  # 39;P&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > TIME_INPUT_FORMATS < / td >
                    < td

                    class ="code" > < pre >[&  # 39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>
                    < / tr >

                    < tr >
                    < td > TIME_ZONE < / td >
                    < td

                    class ="code" > < pre > &  # 39;Asia/Shanghai&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > USE_ETAGS < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > USE_I18N < / td >
                    < td

                    class ="code" > < pre > True < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > USE_L10N < / td >
                    < td

                    class ="code" > < pre > True < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > USE_THOUSAND_SEPARATOR < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > USE_TZ < / td >
                    < td

                    class ="code" > < pre > True < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > USE_X_FORWARDED_HOST < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > USE_X_FORWARDED_PORT < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > WSGI_APPLICATION < / td >
                    < td

                    class ="code" > < pre > &  # 39;choujiang.wsgi.application&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > X_FRAME_OPTIONS < / td >
                    < td

                    class ="code" > < pre > &  # 39;SAMEORIGIN&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > YEAR_MONTH_FORMAT < / td >
                    < td

                    class ="code" > < pre > &  # 39;F Y&#39;</pre></td>

                    < / tr >

                    < / tbody >
                    < / table >

                    < / div >

                    < div
                    id = "explanation" >
                    < p >
                    You
                    're seeing this error because you have <code>DEBUG = True</code> in your
                    Django
                    settings
                    file.Change
                    that
                    to < code > False < / code >, and Django
                    will
                    display
                    a
                    standard
                    page
                    generated
                    by
                    the
                    handler

            C:\Users\Administrator\AppData\Local\Programs\Python\Python36 - 32\Scripts\python.exe
            C: / Users / Administrator / PycharmProjects / untitled / 123
            test / lianxi02.py

            < !DOCTYPE
            html >
            < html
            lang = "en" >
            < head >
            < meta
            http - equiv = "content-type"
            content = "text/html; charset=utf-8" >
            < meta
            name = "robots"
            content = "NONE,NOARCHIVE" >
            < title > OperationalError

        at / api / user / add_stu < / title >
        < style
        type = "text/css" >
        html * {padding: 0;
        margin: 0;}
        body * {padding: 10px 20px;}
        body * * {padding: 0;}
        body
        {font: small sans - serif;}
        body > div

    {border - bottom: 1px solid  # ddd; }
     h1 {font - weight: normal;}
    h2
    {margin - bottom: .8em;}
    h2
    span
    {font - size: 80 %;
    color:  # 666; font-weight:normal; }
    h3
    {margin: 1em 0 .5em 0;}
    h4
    {margin: 0 0 .5em 0;
    font - weight: normal;}
    code, pre
    {font - size: 100 %;
    white - space: pre - wrap;}
    table
    {border: 1px solid
     # ccc; border-collapse: collapse; width:100%; background:white; }
     tbody td, tbody th {vertical - align: top;
    padding: 2
    px
    3
    px;}
    thead
    th
    {
        padding: 1px 6px 1px 3px;
    background:  # fefefe; text-align:left;
    font - weight:normal;
    font - size: 11
    px;
    border: 1
    px
    solid  # ddd;
    }
    tbody
    th
    {width: 12em;
    text - align: right;
    color:  # 666; padding-right:.5em; }
    table.vars
    {margin: 5px 0 2px 40px;}
    table.vars
    td, table.req
    td
    {font - family: monospace;}
    table
    td.code
    {width: 100 %;}
    table
    td.code
    pre
    {overflow: hidden;}
    table.source
    th
    {color:  # 666; }
         table.source td {font - family: monospace;
    white - space: pre;
    border - bottom: 1
    px
    solid  # eee; }
    ul.traceback
    {list - style - type: none;
    color:  # 222; }
    ul.traceback
    li.frame
    {padding - bottom: 1em;
    color:  # 666; }
    ul.traceback
    li.user
    {background - color:  # e0e0e0; color:#000 }
         div.context {padding: 10px 0;
    overflow: hidden;}
    div.context
    ol
    {padding - left: 30px;
    margin: 0
    10
    px;
    list - style - position: inside;}
    div.context
    ol
    li
    {font - family: monospace;
    white - space: pre;
    color:  # 777; cursor:pointer; padding-left: 2px; }
    div.context
    ol
    li
    pre
    {display: inline;}
    div.context
    ol.context - line
    li
    {
        color:  # 505050; background-color:#dfdfdf; padding: 3px 2px; }
            div.context ol.context - line li
        span {position: absolute;
    right: 32
    px;}
    .user
    div.context
    ol.context - line
    li
    {background - color:  # bbb; color:#000; }
        .user
    div.context
    ol
    li
    {color:  # 666; }
         div.commands {margin - left: 40px;}
    div.commands
    a
    {color:  # 555; text-decoration:none; }
        .user
    div.commands
    a
    {color: black;}
    # summary { background: #ffc; }
    # summary h2 { font-weight: normal; color: #666; }
    # explanation { background:#eee; }
    # template, #template-not-exist { background:#f6f6f6; }
    # template-not-exist ul { margin: 0 0 10px 20px; }
    # template-not-exist .postmortem-section { margin-bottom: 3px; }
    # unicode-hint { background:#eee; }
    # traceback { background:#eee; }
    # requestinfo { background:#f6f6f6; padding-left:120px; }
    # summary table { border:none; background:transparent; }
    # requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    # requestinfo h3 { margin-bottom:-1em; }
    .error
    {background:  # ffc; }
        .specific
    {color:  # cc3300; font-weight:bold; }
         h2 span.commands {font - size: .7em;}
    span.commands
    a: link
    {color:  # 5E5694;}
         pre.exception_value {font - family: sans - serif;
    color:  # 666; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append - bottom
    {margin - bottom: 10px;}
    < / style >

        < script
    type = "text/javascript" >
    // < !--
    function
    getElementsByClassName(oElm, strTagName, strClassName)
    {
    // Written
    by
    Jonathan
    Snook, http: // www.snook.ca / jon;
    Add - ons
    by
    Robert
    Nyman, http: // www.robertnyman.com
    var
    arrElements = (
            strTagName == "*" & & document.all)? document.all: \
        oElm.getElementsByTagName(strTagName);
    var
    arrReturnElements = new
    Array();
    strClassName = strClassName.replace( /\- / g, "\-");
    var
    oRegExp = new
    RegExp("(^|\s)" + strClassName + "(\s|$)");
    var
    oElement;
    for (var i=0; i < arrElements.length; i++){
        oElement = arrElements[i];
    if (oRegExp.test(oElement.className)){
    arrReturnElements.push(oElement);
    }
    }
    return (arrReturnElements)
    }
    function
    hideAll(elems)
    {
    for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
    }

}
window.onload = function()
{
hideAll(getElementsByClassName(document, 'table', 'vars'));
hideAll(
    getElementsByClassName(document, 'ol', 'pre-context'));
hideAll(
    getElementsByClassName(document, 'ol', 'post-context'));
hideAll(
    getElementsByClassName(document, 'div', 'pastebin'));

}
function
toggle()
{
for (var i = 0; i < arguments.length; i++) {
    var e = document.getElementById(arguments[i]);
if (e) {
e.style.display = e.style.display == 'none' ? 'block': 'none';
}
}
return false;

}
function
varToggle(link, id)
{
toggle('v' + id);
var
s = link.getElementsByTagName('span')[0];
var
uarr = String.fromCharCode(0x25b6);
var
darr = String.fromCharCode(0x25bc);
s.textContent = s.textContent == uarr ? darr: uarr;
return false;

}
function
switchPastebinFriendly(link)
{
s1 = "Switch to copy-and-paste view";
s2 = "Switch back to interactive view";
link.textContent = link.textContent.trim() == s1 ? s2: s1;
toggle('browserTraceback', 'pastebinTraceback');
return false;
}
// -->
< / script >

    < / head >
        < body >
        < div
id = "summary" >
     < h1 > OperationalError
at / api / user / add_stu < / h1 >
                              < pre


class ="exception_value" > (2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre>
< table


class ="meta" >

< tr >
< th > Request
Method: < / th >
< td > POST < / td >
< / tr >
< tr >
< th > Request
URL: < / th >
< td > http: // api.nnzhp.cn: 80 / api / user / add_stu < / td >
< / tr >

< tr >
< th > Django
Version: < / th >
< td > 1.10 < / td >
< / tr >

< tr >
< th > Exception
Type: < / th >
< td > OperationalError < / td >
< / tr >

< tr >
< th > Exception
Value: < / th >
< td > < pre > (2003,
                & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                < / tr >

                < tr >
                < th > Exception Location: < / th >
                < td > / usr / local / anaconda3 / lib / python3.6 / site-packages / pymysql / connections.py in connect, line 630 < / td >
                < / tr >

                < tr >
                < th > Python Executable: < / th >
                < td > / usr / local / anaconda3 / bin / python < / td >
                < / tr >
                < tr >
                < th > Python Version: < / th >
                < td > 3.6.4 < / td >
                < / tr >
                < tr >
                < th > Python Path: < / th >
                < td > < pre >[&  # 39;/usr/local/choujiang&#39;,
                &  # 39;/usr/local/anaconda3/lib/python36.zip&#39;,
                &  # 39;/usr/local/anaconda3/lib/python3.6&#39;,
                &  # 39;/usr/local/anaconda3/lib/python3.6/lib-dynload&#39;,
                &  # 39;/usr/local/anaconda3/lib/python3.6/site-packages&#39;]</pre></td>
                < / tr >
                < tr >
                < th > Server time: < / th >
                < td > ææå­, 11 äºæ 2019 21:41:34 +0800 < / td >
                < / tr >
                < / table >
                < / div >

                < div id="traceback" >
                < h2 > Traceback < span


class ="commands" > < a href="#" onclick="return switchPastebinFriendly(this);" >


Switch
to
copy - and -paste
view < / a > < / span >
< / h2 >

< div
id = "browserTraceback" >
< ul


class ="traceback" >

< li


class ="frame user" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / pymysql / connections.py < / code > in < code > connect < / code >

< div


class ="context" id="c140655233622152" >

< ol
start = "576"


class ="pre-context" id="pre140655233622152" >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre > kwargs = {} < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
if self.bind_address is not None: < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
kwargs[ &  # 39;source_address&#39;] = (self.bind_address, 0)</pre></li>

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
while True: < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
try: < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre > sock = socket.create_connection( < / pre > < / li >

                                                                                                                         < li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre > (
    self.host, self.port), self.connect_timeout, < / pre > < / li >

                                                               < / ol >

                                                                   < ol
start = "583"


class ="context-line" >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
** kwargs) < / pre > < span > ... < / span > < / li > < / ol >

                                                          < ol
start = '584'


class ="post-context" id="post140655233622152" >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
break < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >                        except (
    OSError, IOError) as e: < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
if e.errno == errno.EINTR: < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
continue < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre >
raise < / pre > < / li >

< li
onclick = "toggle('pre140655233622152', 'post140655233622152')" > < pre > self.host_info = & quot;
socket % s: % d & quot; % (self.host, self.port) < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233622152')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233622152" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > exc < / td >
< td


class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
< / tr >

< tr >
< td > kwargs < / td >
< td


class ="code" > < pre > {} < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;pymysql.connections.Connection object at 0x7fecd8586828 & gt; < / pre > < / td >

< / tr >

< tr >
< td > sock < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame user" >

< code > / usr / local / anaconda3 / lib / python3
.6 / socket.py < / code > in < code > create_connection < / code >

< div


class ="context" id="c140655233625992" >

< ol
start = "717"


class ="pre-context" id="pre140655233625992" >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >        except error as _: < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > err = _ < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >
if sock is not None: < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > sock.close() < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >
if err is not None: < / pre > < / li >

< / ol >

< ol
start = "724"


class ="context-line" >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >
raise err < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '725'


class ="post-context" id="post140655233625992" >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > else: < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >
raise error( & quot;
getaddrinfo
returns
an
empty
list & quot;) < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre >


def getaddrinfo(host, port, family=0, type=0, proto=0, flags=0): <

/ pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > & quot; & quot; & quot;
Resolve
host and port
into
list
of
address
info
entries. < / pre > < / li >

< li
onclick = "toggle('pre140655233625992', 'post140655233625992')" > < pre > < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233625992')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233625992" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > address < / td >
< td


class ="code" > < pre > ( &  # 39;127.0.0.1&#39;, 3306)</pre></td>
< / tr >

< tr >
< td > af < / td >
< td


class ="code" > < pre > & lt;AddressFamily.AF_INET: 2 & gt; <

/ pre > < / td >
< / tr >

< tr >
< td > canonname < / td >
< td


class ="code" > < pre > &  # 39;&#39;</pre></td>

< / tr >

< tr >
< td > err < / td >
< td


class ="code" > < pre > ConnectionRefusedError(111, &  # 39;Connection refused&#39;)</pre></td>
< / tr >

< tr >
< td > host < / td >
< td


class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

< / tr >

< tr >
< td > port < / td >
< td


class ="code" > < pre > 3306 < / pre > < / td >

< / tr >

< tr >
< td > proto < / td >
< td


class ="code" > < pre > 6 < / pre > < / td >

< / tr >

< tr >
< td > res < / td >
< td


class ="code" > < pre > ( & lt;AddressFamily.AF_INET: 2 & gt;,

& lt;
SocketKind.SOCK_STREAM: 1 & gt;,
6,
&  # 39;&#39;,
(&  # 39;127.0.0.1&#39;, 3306))</pre></td>
< / tr >

< tr >
< td > sa < / td >
< td


class ="code" > < pre > ( &  # 39;127.0.0.1&#39;, 3306)</pre></td>
< / tr >

< tr >
< td > sock < / td >
< td


class ="code" > < pre > & lt;socket.socket[closed] fd=-1, family=AddressFamily.AF_INET, type=2049, proto=6 & gt; < / pre > < / td >

< / tr >

< tr >
< td > socktype < / td >
< td


class ="code" > < pre > & lt;SocketKind.SOCK_STREAM: 1 & gt; <

/ pre > < / td >
< / tr >

< tr >
< td > source_address < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > timeout < / td >
< td


class ="code" > < pre > 10 < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame user" >

< code > / usr / local / anaconda3 / lib / python3
.6 / socket.py < / code > in < code > create_connection < / code >

< div


class ="context" id="c140655233623624" >

< ol
start = "706"


class ="pre-context" id="pre140655233623624" >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > sock = None < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >
try: < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > sock = socket(af, socktype,
                                                                                        proto) < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >
if timeout is not _GLOBAL_DEFAULT_TIMEOUT: < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > sock.settimeout(timeout) < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >
if source_address: < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > sock.bind(source_address) < / pre > < / li >

< / ol >

< ol
start = "713"


class ="context-line" >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >
sock.connect(sa) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '714'


class ="post-context" id="post140655233623624" >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >  # Break explicitly a reference cycle</pre></li>

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > err = None < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >
return sock < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre >        except error as _: < / pre > < / li >

< li
onclick = "toggle('pre140655233623624', 'post140655233623624')" > < pre > err = _ < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233623624')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233623624" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > address < / td >
< td


class ="code" > < pre > ( &  # 39;127.0.0.1&#39;, 3306)</pre></td>
< / tr >

< tr >
< td > af < / td >
< td


class ="code" > < pre > & lt;AddressFamily.AF_INET: 2 & gt; <

/ pre > < / td >
< / tr >

< tr >
< td > canonname < / td >
< td


class ="code" > < pre > &  # 39;&#39;</pre></td>

< / tr >

< tr >
< td > err < / td >
< td


class ="code" > < pre > ConnectionRefusedError(111, &  # 39;Connection refused&#39;)</pre></td>
< / tr >

< tr >
< td > host < / td >
< td


class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

< / tr >

< tr >
< td > port < / td >
< td


class ="code" > < pre > 3306 < / pre > < / td >

< / tr >

< tr >
< td > proto < / td >
< td


class ="code" > < pre > 6 < / pre > < / td >

< / tr >

< tr >
< td > res < / td >
< td


class ="code" > < pre > ( & lt;AddressFamily.AF_INET: 2 & gt;,

& lt;
SocketKind.SOCK_STREAM: 1 & gt;,
6,
&  # 39;&#39;,
(&  # 39;127.0.0.1&#39;, 3306))</pre></td>
< / tr >

< tr >
< td > sa < / td >
< td


class ="code" > < pre > ( &  # 39;127.0.0.1&#39;, 3306)</pre></td>
< / tr >

< tr >
< td > sock < / td >
< td


class ="code" > < pre > & lt;socket.socket[closed] fd=-1, family=AddressFamily.AF_INET, type=2049, proto=6 & gt; < / pre > < / td >

< / tr >

< tr >
< td > socktype < / td >
< td


class ="code" > < pre > & lt;SocketKind.SOCK_STREAM: 1 & gt; <

/ pre > < / td >
< / tr >

< tr >
< td > source_address < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > timeout < / td >
< td


class ="code" > < pre > 10 < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li > < h3 >

During
handling
of
the
above
exception([Errno 111]
Connection
refused), another
exception
occurred:

< / h3 > < / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / base / base.py < / code > in < code > ensure_connection < / code >

< div


class ="context" id="c140655233626056" >

< ol
start = "192"


class ="pre-context" id="pre140655233626056" >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >


def ensure_connection(self): <

/ pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > Guarantees
that
a
connection
to
the
database is established. < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
if self.connection is None: < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
with self.wrap_database_errors: < / pre > < / li >

< / ol >

< ol
start = "199"


class ="context-line" >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
self.connect() < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '200'


class ="post-context" id="post140655233626056" >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >  # ##### Backend-specific wrappers for PEP-249 connection methods #####</pre></li>

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >


def _cursor(self): <

/ pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > self.ensure_connection() < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
with self.wrap_database_errors: < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233626056')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233626056" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / base / base.py < / code > in < code > connect < / code >

< div


class ="context" id="c140655233624904" >

< ol
start = "164"


class ="pre-context" id="pre140655233624904" >

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >  # Reset parameters defining when to close the connection</pre></li>

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > max_age =
self.settings_dict[ &  # 39;CONN_MAX_AGE&#39;]</pre></li>

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.close_at = None if max_age is None else time.time() + max_age < / pre > < / li >

                                                                                                                                                           < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.closed_in_transaction = False < / pre > < / li >

                                                                                                                           < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.errors_occurred = False < / pre > < / li >

                                                                                                                     < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >  # Establish the connection</pre></li>

          < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > conn_params = self.get_connection_params() < / pre > < / li >

                                                                                                                                   < / ol >

                                                                                                                                       < ol
start = "171"


class ="context-line" >

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >
self.connection = self.get_new_connection(conn_params) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '172'


class ="post-context" id="post140655233624904" >

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.set_autocommit(
    self.settings_dict[ &  # 39;AUTOCOMMIT&#39;])</pre></li>

    < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.init_connection_state() < / pre > < / li >

                                                                                                                     < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > connection_created.send(sender=self.__class__,
                                                                                                  connection=self) < / pre > < / li >

                                                                                                                                 < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > < / pre > < / li >

                                                                                        < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.run_on_commit = [] < / pre > < / li >

                                                                                                                < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > < / pre > < / li >

                                                                                        < / ol >

                                                                                            < / div >

                                                                                                < div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233624904')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233624904" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > conn_params < / td >
< td


class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
&  # 39;client_flag&#39;: 2,
&  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
1: &


lt;


class &  # 39;int&#39;&gt;,
    2: & lt;

    class &  # 39;int&#39;&gt;,
        3: & lt;

        class &  # 39;int&#39;&gt;,

            4: & lt;

        class &  # 39;float&#39;&gt;,

            5: & lt;

        class &  # 39;float&#39;&gt;,

            7: & lt;

        function
        convert_mysql_timestamp
        at
        0x7fecdb3d7bf8 & gt;,
        8: & lt;

        class &  # 39;int&#39;&gt;,
            9: & lt;

            class &  # 39;int&#39;&gt;,

                10: & lt;

            function
            convert_date
            at
            0x7fecdb3d7b70 & gt;,
            11: & lt;
            function
            typecast_time
            at
            0x7fecdd779bf8 & gt;,
            12: & lt;
            function
            convert_datetime
            at
            0x7fecdb3d79d8 & gt;,
            13: & lt;

            class &  # 39;int&#39;&gt;,
                15: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                16: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                246: & lt;
                function
                typecast_decimal
                at
                0x7fecdd779d08 & gt;,
                248: & lt;
                function
                convert_set
                at
                0x7fecdb3d7c80 & gt;,
                249: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                250: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                251: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                252: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                253: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                254: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                & lt;

                class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                    & lt;

                    class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                        & lt;

                    class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                        & lt;

                    class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                        & lt;

                    class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                        & lt;

                    class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                        & lt;

                    class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                        & lt;

                    class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                        & lt;

                    class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                        & lt;

                    class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                        & lt;

                    class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                        & lt;

                    class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                        & lt;

                    class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

            &  # 39;db&#39;: &#39;main&#39;,
            &  # 39;host&#39;: &#39;127.0.0.1&#39;,
            &  # 39;passwd&#39;: &#39;123456&#39;,
            &  # 39;port&#39;: 3306,
            &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
            < / tr >

            < tr >
            < td > max_age < / td >
            < td

            class ="code" > < pre > 0 < / pre > < / td >

            < / tr >

            < tr >
            < td > self < / td >
            < td

            class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

            < / tr >

            < / tbody >
            < / table >

            < / li >

            < li

            class ="frame django" >

            < code > / usr / local / anaconda3 / lib / python3
            .6 / site - packages / django / db / backends / mysql / base.py < / code > in < code > get_new_connection < / code >

            < div

            class ="context" id="c140655233624776" >

            < ol
            start = "258"

            class ="pre-context" id="pre140655233624776" >

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >  # We need the number of potentially affected rows after an</pre></li>

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >  # &quot;UPDATE&quot;, not the number of changed rows.</pre></li>

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
            kwargs[ &  # 39;client_flag&#39;] = CLIENT.FOUND_ROWS</pre></li>

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > kwargs.update(
                settings_dict[ &  # 39;OPTIONS&#39;])</pre></li>

                < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >

        return kwargs < / pre > < / li >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > < / pre > < / li >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >

    def get_new_connection(self, conn_params):
        <

        / pre > < / li >

    < / ol >

    < ol
    start = "265"

    class ="context-line" >

    < li
    onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
    conn = Database.connect(**conn_params) < / pre > < span > ... < / span > < / li > < / ol >

    < ol
    start = '266'

    class ="post-context" id="post140655233624776" >

    < li
    onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > conn.encoders[SafeText] =


conn.encoders[six.text_type] < / pre > < / li >

< li
onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > conn.encoders[SafeBytes] =
conn.encoders[bytes] < / pre > < / li >

< li
onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
return conn < / pre > < / li >

< li
onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >


def init_connection_state(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
if self.features.is_sql_auto_is_null_enabled: < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233624776')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233624776" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > conn_params < / td >
< td


class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
&  # 39;client_flag&#39;: 2,
&  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
1: &


lt;


class &  # 39;int&#39;&gt;,
    2: & lt;

    class &  # 39;int&#39;&gt;,
        3: & lt;

        class &  # 39;int&#39;&gt;,

            4: & lt;

        class &  # 39;float&#39;&gt;,

            5: & lt;

        class &  # 39;float&#39;&gt;,

            7: & lt;

        function
        convert_mysql_timestamp
        at
        0x7fecdb3d7bf8 & gt;,
        8: & lt;

        class &  # 39;int&#39;&gt;,
            9: & lt;

            class &  # 39;int&#39;&gt;,

                10: & lt;

            function
            convert_date
            at
            0x7fecdb3d7b70 & gt;,
            11: & lt;
            function
            typecast_time
            at
            0x7fecdd779bf8 & gt;,
            12: & lt;
            function
            convert_datetime
            at
            0x7fecdb3d79d8 & gt;,
            13: & lt;

            class &  # 39;int&#39;&gt;,
                15: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                16: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                246: & lt;
                function
                typecast_decimal
                at
                0x7fecdd779d08 & gt;,
                248: & lt;
                function
                convert_set
                at
                0x7fecdb3d7c80 & gt;,
                249: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                250: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                251: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                252: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                253: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                254: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                & lt;

                class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                    & lt;

                    class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                        & lt;

                    class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                        & lt;

                    class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                        & lt;

                    class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                        & lt;

                    class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                        & lt;

                    class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                        & lt;

                    class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                        & lt;

                    class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                        & lt;

                    class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                        & lt;

                    class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                        & lt;

                    class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                        & lt;

                    class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

            &  # 39;db&#39;: &#39;main&#39;,
            &  # 39;host&#39;: &#39;127.0.0.1&#39;,
            &  # 39;passwd&#39;: &#39;123456&#39;,
            &  # 39;port&#39;: 3306,
            &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
            < / tr >

            < tr >
            < td > self < / td >
            < td

            class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

            < / tr >

            < / tbody >
            < / table >

            < / li >

            < li

            class ="frame user" >

            < code > / usr / local / anaconda3 / lib / python3
            .6 / site - packages / pymysql / __init__.py < / code > in < code > Connect < / code >

            < div

            class ="context" id="c140655233622600" >

            < ol
            start = "87"

            class ="pre-context" id="pre140655233622600" >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >

            def Connect(*args, **kwargs):
                <

                / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > & quot; & quot; & quot; < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > Connect
            to
            the
            database;
            see
            connections.Connection.__init__()
            for < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > more
            information. < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > & quot; & quot; & quot; < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
            from .connections import Connection < / pre > < / li >

            < / ol >

            < ol
            start = "94"

            class ="context-line" >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
            return Connection(*args, **kwargs) < / pre > < span > ... < / span > < / li > < / ol >

            < ol
            start = '95'

            class ="post-context" id="post140655233622600" >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
            from . import connections as _orig_conn < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
            if _orig_conn.Connection.__init__.__doc__ is not None: < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > Connect.__doc__ = _orig_conn.Connection.__init__.__doc__ < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
            del _orig_conn < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

            < / ol >

            < / div >

            < div

            class ="commands" >

            < a
            href = "#"
            onclick = "return varToggle(this, '140655233622600')" > < span > &  # x25b6;</span> Local vars</a>

            < / div >
            < table

            class ="vars" id="v140655233622600" >

            < thead >
            < tr >
            < th > Variable < / th >
            < th > Value < / th >
            < / tr >
            < / thead >
            < tbody >

            < tr >
            < td > Connection < / td >
            < td

            class ="code" > < pre > & lt; class &  # 39;pymysql.connections.Connection&#39;&gt;</pre></td>

            < / tr >

            < tr >
            < td > args < / td >
            < td

            class ="code" > < pre > () < / pre > < / td >

            < / tr >

            < tr >
            < td > kwargs < / td >
            < td

            class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
            &  # 39;client_flag&#39;: 2,
            &  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
            1: &

            lt;

            class &  # 39;int&#39;&gt;,
                2: & lt;

                class &  # 39;int&#39;&gt;,
                    3: & lt;

                    class &  # 39;int&#39;&gt;,

                        4: & lt;

                    class &  # 39;float&#39;&gt;,

                        5: & lt;

                    class &  # 39;float&#39;&gt;,

                        7: & lt;

                    function
                    convert_mysql_timestamp
                    at
                    0x7fecdb3d7bf8 & gt;,
                    8: & lt;

                    class &  # 39;int&#39;&gt;,
                        9: & lt;

                        class &  # 39;int&#39;&gt;,

                            10: & lt;

                        function
                        convert_date
                        at
                        0x7fecdb3d7b70 & gt;,
                        11: & lt;
                        function
                        typecast_time
                        at
                        0x7fecdd779bf8 & gt;,
                        12: & lt;
                        function
                        convert_datetime
                        at
                        0x7fecdb3d79d8 & gt;,
                        13: & lt;

                        class &  # 39;int&#39;&gt;,
                            15: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            16: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            246: & lt;
                            function
                            typecast_decimal
                            at
                            0x7fecdd779d08 & gt;,
                            248: & lt;
                            function
                            convert_set
                            at
                            0x7fecdb3d7c80 & gt;,
                            249: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            250: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            251: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            252: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            253: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            254: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            & lt;

                            class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                                & lt;

                                class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                                    & lt;

                                class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                                    & lt;

                                class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                                    & lt;

                                class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                                    & lt;

                                class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                                    & lt;

                                class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                                    & lt;

                                class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                                    & lt;

                                class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                                    & lt;

                                class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                                    & lt;

                                class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                                    & lt;

                                class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                                    & lt;

                                class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

                        &  # 39;db&#39;: &#39;main&#39;,
                        &  # 39;host&#39;: &#39;127.0.0.1&#39;,
                        &  # 39;passwd&#39;: &#39;123456&#39;,
                        &  # 39;port&#39;: 3306,
                        &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
                        < / tr >

                        < / tbody >
                        < / table >

                        < / li >

                        < li

                        class ="frame user" >

                        < code > / usr / local / anaconda3 / lib / python3
                        .6 / site - packages / pymysql / connections.py < / code > in < code > __init__ < / code >

                        < div

                        class ="context" id="c140655233624456" >

                        < ol
                        start = "318"

                        class ="pre-context" id="pre140655233624456" >

                        < li
                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                        if program_name: < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                        self._connect_attrs[ & quot;
                        program_name & quot;] = program_name < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                    if defer_connect: < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > self._sock = None < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > else: < / pre > < / li >

                    < / ol >

                    < ol
                    start = "325"

                    class ="context-line" >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                    self.connect() < / pre > < span > ... < / span > < / li > < / ol >

                    < ol
                    start = '326'

                    class ="post-context" id="post140655233624456" >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >

                    def _create_ssl_ctx(self, sslp):
                        <

                        / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                    if isinstance(sslp, ssl.SSLContext): < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                    return sslp < / pre > < / li >

                < li
                onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > ca = sslp.get( &  # 39;ca&#39;)</pre></li>

                                                                                               < li
                onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > capath = sslp.get( &  # 39;capath&#39;)</pre></li>

                                                                                                   < / ol >

                                                                                                       < / div >

                                                                                                           < div

                class ="commands" >

                < a
                href = "#"
                onclick = "return varToggle(this, '140655233624456')" > < span > &  # x25b6;</span> Local vars</a>

                < / div >
                < table

                class ="vars" id="v140655233624456" >

                < thead >
                < tr >
                < th > Variable < / th >
                < th > Value < / th >
                < / tr >
                < / thead >
                < tbody >

                < tr >
                < td > auth_plugin_map < / td >
                < td

                class ="code" > < pre > None < / pre > < / td >

                < / tr >

                < tr >
                < td > autocommit < / td >
                < td

                class ="code" > < pre > False < / pre > < / td >

                < / tr >

                < tr >
                < td > binary_prefix < / td >
                < td

                class ="code" > < pre > False < / pre > < / td >

                < / tr >

                < tr >
                < td > bind_address < / td >
                < td

                class ="code" > < pre > None < / pre > < / td >

                < / tr >

                < tr >
                < td > charset < / td >
                < td

                class ="code" > < pre > &  # 39;utf8&#39;</pre></td>

                < / tr >

                < tr >
                < td > client_flag < / td >

            < td

            class ="code" > < pre > 3842575 < / pre > < / td >

            < / tr >

        < tr >
        < td > compress < / td >
        < td

        class ="code" > < pre > None < / pre > < / td >

        < / tr >

        < tr >
        < td > connect_timeout < / td >
        < td

        class ="code" > < pre > 10 < / pre > < / td >

        < / tr >

    < tr >
    < td > conv < / td >
    < td

    class ="code" > < pre > {0: &

    lt;
    function
    typecast_decimal
    at
    0x7fecdd779d08 & gt;,
    1: & lt;

    class &  # 39;int&#39;&gt;,
        2: & lt;

        class &  # 39;int&#39;&gt;,

    3: & lt;

    class &  # 39;int&#39;&gt;,

        4: & lt;

    class &  # 39;float&#39;&gt;,

        5: & lt;

    class &  # 39;float&#39;&gt;,

        7: & lt;

    function
    convert_mysql_timestamp
    at
    0x7fecdb3d7bf8 & gt;,
    8: & lt;

    class &  # 39;int&#39;&gt;,

        9: & lt;

    class &  # 39;int&#39;&gt;,

        10: & lt;

    function
    convert_date
    at
    0x7fecdb3d7b70 & gt;,
    11: & lt;
    function
    typecast_time
    at


0x7fecdd779bf8 & gt;,
12: & lt;
function
convert_datetime
at
0x7fecdb3d79d8 & gt;,
13: & lt;


class &  # 39;int&#39;&gt;,

    15: & lt;


function
through
at
0x7fecdb3d7d08 & gt;,
16: & lt;
function
through
at
0x7fecdb3d7d08 & gt;,
246: & lt;
function
typecast_decimal
at
0x7fecdd779d08 & gt;,
248: & lt;
function
convert_set
at
0x7fecdb3d7c80 & gt;,
249: & lt;
function
through
at
0x7fecdb3d7d08 & gt;,
250: & lt;
function
through
at
0x7fecdb3d7d08 & gt;,
251: & lt;
function
through
at
0x7fecdb3d7d08 & gt;,
252: & lt;
function
through
at
0x7fecdb3d7d08 & gt;,
253: & lt;
function
through
at
0x7fecdb3d7d08 & gt;,
254: & lt;
function
through
at
0x7fecdb3d7d08 & gt;,
& lt;


class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,

    & lt;


class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

    & lt;


class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

    & lt;


class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

    & lt;


class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

    & lt;


class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

    & lt;


class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

    & lt;


class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

    & lt;


class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

    & lt;


class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

    & lt;


class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

    & lt;


class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

    & lt;


class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

    & lt;


class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

    & lt;


class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

    & lt;


class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

    & lt;


class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;}</pre></td>

    < / tr >

< tr >
< td > cursorclass < / td >
< td


class ="code" > < pre > & lt; class &  # 39;pymysql.cursors.Cursor&#39;&gt;</pre></td>

< / tr >

< tr >
< td > database < / td >
< td


class ="code" > < pre > &  # 39;main&#39;</pre></td>

< / tr >

< tr >
< td > db < / td >
< td


class ="code" > < pre > &  # 39;main&#39;</pre></td>

< / tr >

< tr >
< td > defer_connect < / td >
< td


class ="code" > < pre > False < / pre > < / td >

< / tr >

< tr >
< td > host < / td >
< td


class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

< / tr >

< tr >
< td > init_command < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > local_infile < / td >
< td


class ="code" > < pre > False < / pre > < / td >

< / tr >

< tr >
< td > max_allowed_packet < / td >
< td


class ="code" > < pre > 16777216 < / pre > < / td >

< / tr >

< tr >
< td > named_pipe < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > passwd < / td >
< td


class ="code" > < pre > &  # 39;123456&#39;</pre></td>

< / tr >

< tr >
< td > password < / td >
< td


class ="code" > < pre > &  # 39;123456&#39;</pre></td>

< / tr >

< tr >
< td > port < / td >
< td


class ="code" > < pre > 3306 < / pre > < / td >

< / tr >

< tr >
< td > program_name < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > read_default_file < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > read_default_group < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > read_timeout < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;pymysql.connections.Connection object at 0x7fecd8586828 & gt; < / pre > < / td >

< / tr >

< tr >
< td > server_public_key < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > sql_mode < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > ssl < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > unix_socket < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > use_unicode < / td >
< td


class ="code" > < pre > True < / pre > < / td >

< / tr >

< tr >
< td > user < / td >
< td


class ="code" > < pre > &  # 39;besttest&#39;</pre></td>

< / tr >

< tr >
< td > write_timeout < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame user" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / pymysql / connections.py < / code > in < code > connect < / code >

< div


class ="context" id="c140655233623432" >

< ol
start = "623"


class ="pre-context" id="pre140655233623432" >

< li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > 2003, < / pre > < / li >

< li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > & quot;
Can &  # 39;t connect to MySQL server on %r (%s)&quot; % (</pre></li>

< li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > self.host, e)) < / pre > < / li >

                                                                                                       < li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # Keep original exception and traceback to investigate error.</pre></li>

          < li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > exc.original_exception = e < / pre > < / li >

                                                                                                                   < li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > exc.traceback = traceback.format_exc() < / pre > < / li >

                                                                                                                               < li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
if DEBUG: print(exc.traceback) < / pre > < / li >

                                             < / ol >

                                                 < ol
start = "630"


class ="context-line" >

< li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
raise exc < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '631'


class ="post-context" id="post140655233623432" >

< li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # If e is neither DatabaseError or IOError, It&#39;s a bug.</pre></li>

< li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # But raising AssertionError hides original error.</pre></li>

< li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # So just reraise it.</pre></li>

< li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
raise < / pre > < / li >

< li
onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233623432')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233623432" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > exc < / td >
< td


class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
< / tr >

< tr >
< td > kwargs < / td >
< td


class ="code" > < pre > {} < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;pymysql.connections.Connection object at 0x7fecd8586828 & gt; < / pre > < / td >

< / tr >

< tr >
< td > sock < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li > < h3 >

The
above
exception((2003,
           "Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)"))
was
the
direct
cause
of
the
following
exception:

< / h3 > < / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / core / handlers / exception.py < / code > in < code > inner < / code >

< div


class ="context" id="c140655221039496" >

< ol
start = "32"


class ="pre-context" id="pre140655221039496" >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > This
decorator is automatically
applied
to
all
middleware
to
ensure
that < / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > no
middleware
leaks
an
exception and that
the
next
middleware in the
stack < / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > can
rely
on
getting
a
response
instead
of
an
exception. < / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >


@wraps(get_response, assigned=available_attrs(get_response))

< / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >


def inner(request):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >
try: < / pre > < / li >

< / ol >

< ol
start = "39"


class ="context-line" >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >
response = get_response(request) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '40'


class ="post-context" id="post140655221039496" >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >        except Exception as exc: < / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > response = response_for_exception(
    request, exc) < / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >
return response < / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre >
return inner < / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221039496', 'post140655221039496')" > < pre > < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221039496')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221039496" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > exc < / td >
< td


class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
< / tr >

< tr >
< td > get_response < / td >
< td


class ="code" > < pre > & lt;bound method BaseHandler._legacy_get_response of & lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fecdb570f98 & gt; & gt; < / pre > < / td >

< / tr >

< tr >
< td > request < / td >
< td


class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / core / handlers / base.py < / code > in < code > _legacy_get_response < / code >

< div


class ="context" id="c140655221039944" >

< ol
start = "242"


class ="pre-context" id="pre140655221039944" >

< li
onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >  # Apply request middleware</pre></li>

< li
onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
for middleware_method in self._request_middleware: < / pre > < / li >

< li
onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre > response = middleware_method(
    request) < / pre > < / li >

< li
onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
if response: < / pre > < / li >

< li
onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
break < / pre > < / li >

< li
onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
if response is None: < / pre > < / li >

< / ol >

< ol
start = "249"


class ="context-line" >

< li
onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
response = self._get_response(
    request) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '250'


class ="post-context" id="post140655221039944" >

< li
onclick = "toggle('pre140655221039944', 'post140655221039944')" > < pre >
return response < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221039944')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221039944" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > middleware_method < / td >
< td


class ="code" > < pre > & lt;bound method MessageMiddleware.process_request of & lt;django.contrib.messages.middleware.MessageMiddleware object at 0x7fecd972bdd8 & gt; & gt; < / pre > < / td >

< / tr >

< tr >
< td > request < / td >
< td


class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

< / tr >

< tr >
< td > response < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fecdb570f98 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / core / handlers / base.py < / code > in < code > _get_response < / code >

< div


class ="context" id="c140655221039304" >

< ol
start = "180"


class ="pre-context" id="pre140655221039304" >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
break < / pre > < / li >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
if response is None: < / pre > < / li >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > wrapped_callback = self.make_view_atomic(
    callback) < / pre > < / li >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
try: < / pre > < / li >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > response = wrapped_callback(
    request, *callback_args, **callback_kwargs) < / pre > < / li >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >            except Exception as e: < / pre > < / li >

< / ol >

< ol
start = "187"


class ="context-line" >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
response = self.process_exception_by_middleware(e,
                                                request) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '188'


class ="post-context" id="post140655221039304" >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >  # Complain if the view returned None (a common error).</pre></li>

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
if response is None: < / pre > < / li >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre >
if isinstance(callback, types.FunctionType):  # FBV</pre></li>

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > view_name = callback.__name__ < / pre > < / li >

< li
onclick = "toggle('pre140655221039304', 'post140655221039304')" > < pre > else:  # CBV</pre></li>

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221039304')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221039304" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > callback < / td >
< td


class ="code" > < pre > & lt;function method_check.& lt;locals & gt;.decorator.& lt;locals & gt;.war at 0x7fecd9819268 & gt; < / pre > < / td >

< / tr >

< tr >
< td > callback_args < / td >
< td


class ="code" > < pre > () < / pre > < / td >

< / tr >

< tr >
< td > callback_kwargs < / td >
< td


class ="code" > < pre > {} < / pre > < / td >

< / tr >

< tr >
< td > request < / td >
< td


class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

< / tr >

< tr >
< td > resolver < / td >
< td


class ="code" > < pre > & lt;RegexURLResolver &  # 39;choujiang.urls&#39; (None:None) ^/&gt;</pre></td>

< / tr >

< tr >
< td > resolver_match < / td >
< td


class ="code" > < pre > ResolverMatch(func=app.tools.war, args=(), kwargs={}, url_name=None, app_names=[], namespaces=[]) < / pre > < / td >

< / tr >

< tr >
< td > response < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fecdb570f98 & gt; < / pre > < / td >

< / tr >

< tr >
< td > wrapped_callback < / td >
< td


class ="code" > < pre > & lt;function method_check.& lt;locals & gt;.decorator.& lt;locals & gt;.war at 0x7fecd9819268 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / core / handlers / base.py < / code > in < code > _get_response < / code >

< div


class ="context" id="c140655221039368" >

< ol
start = "178"


class ="pre-context" id="pre140655221039368" >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre > response = middleware_method(
    request, callback, callback_args, callback_kwargs) < / pre > < / li >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
if response: < / pre > < / li >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
break < / pre > < / li >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
if response is None: < / pre > < / li >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre > wrapped_callback = self.make_view_atomic(
    callback) < / pre > < / li >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
try: < / pre > < / li >

< / ol >

< ol
start = "185"


class ="context-line" >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
response = wrapped_callback(request, *callback_args,
                            **callback_kwargs) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '186'


class ="post-context" id="post140655221039368" >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >            except Exception as e: < / pre > < / li >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre > response = self.process_exception_by_middleware(
    e, request) < / pre > < / li >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >  # Complain if the view returned None (a common error).</pre></li>

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
if response is None: < / pre > < / li >

< li
onclick = "toggle('pre140655221039368', 'post140655221039368')" > < pre >
if isinstance(callback, types.FunctionType):  # FBV</pre></li>

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221039368')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221039368" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > callback < / td >
< td


class ="code" > < pre > & lt;function method_check.& lt;locals & gt;.decorator.& lt;locals & gt;.war at 0x7fecd9819268 & gt; < / pre > < / td >

< / tr >

< tr >
< td > callback_args < / td >
< td


class ="code" > < pre > () < / pre > < / td >

< / tr >

< tr >
< td > callback_kwargs < / td >
< td


class ="code" > < pre > {} < / pre > < / td >

< / tr >

< tr >
< td > request < / td >
< td


class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

< / tr >

< tr >
< td > resolver < / td >
< td


class ="code" > < pre > & lt;RegexURLResolver &  # 39;choujiang.urls&#39; (None:None) ^/&gt;</pre></td>

< / tr >

< tr >
< td > resolver_match < / td >
< td


class ="code" > < pre > ResolverMatch(func=app.tools.war, args=(), kwargs={}, url_name=None, app_names=[], namespaces=[]) < / pre > < / td >

< / tr >

< tr >
< td > response < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.core.handlers.wsgi.WSGIHandler object at 0x7fecdb570f98 & gt; < / pre > < / td >

< / tr >

< tr >
< td > wrapped_callback < / td >
< td


class ="code" > < pre > & lt;function method_check.& lt;locals & gt;.decorator.& lt;locals & gt;.war at 0x7fecd9819268 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame user" >

< code > / usr / local / choujiang / app / tools.py < / code > in < code > war < / code >

< div


class ="context" id="c140655221040200" >

< ol
start = "40"


class ="pre-context" id="pre140655221040200" >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >


def method_check(method):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >


def decorator(func):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >


def war(*args, **kwargs):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre > req =
args[0] < / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >
if req.method == method: < / pre > < / li >

< / ol >

< ol
start = "47"


class ="context-line" >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >
return func(*args, **kwargs) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '48'


class ="post-context" id="post140655221040200" >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre > else: < / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >
return my_res(msg.METHOD_ERR) < / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >
return war < / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >
return decorator < / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221040200', 'post140655221040200')" > < pre >


def replace_img_url(host, img_list):
    <

    / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221040200')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221040200" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > args < / td >
< td


class ="code" > < pre > ( & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;,)</pre></td>
                                            <

/ tr >

  < tr >
  < td > func < / td >
                  < td


class ="code" > < pre > & lt;function add_stu at 0x7fecd98191e0 & gt; < / pre > < / td >

< / tr >

< tr >
< td > kwargs < / td >
< td


class ="code" > < pre > {} < / pre > < / td >

< / tr >

< tr >
< td > method < / td >
< td


class ="code" > < pre > &  # 39;POST&#39;</pre></td>

< / tr >

< tr >
< td > req < / td >
< td


class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame user" >

< code > / usr / local / choujiang / app / views.py < / code > in < code > add_stu < / code >

< div


class ="context" id="c140655221042632" >

< ol
start = "141"


class ="pre-context" id="pre140655221042632" >

< li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > age = str(
    body.get( &  # 39;age&#39;,18)).strip()</pre></li>

    < li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > addr = body.get( &  # 39;addr&#39;,&#39;&#39;).strip()</pre></li>

                                                                                 < li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre >
if name and grade and phone: < / pre > < / li >

                                           < li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre >
if len(phone) != 11: < / pre > < / li >

                                   < li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > res = { &  # 39;error_code&#39;:5,&#39;msg&#39;:&quot;ææºå·é¿åº¦ä¸æ­£ç¡®&quot;}</pre></li>

                                                                                < li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre >
return my_res(res) < / pre > < / li >

< li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > obj = models.Student.objects.filter(
    phone=phone) < / pre > < / li >

< / ol >

< ol
start = "148"


class ="context-line" >

< li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre >
if obj: < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '149'


class ="post-context" id="post140655221042632" >

< li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > res = { &  # 39;error_code&#39;: 5, &#39;msg&#39;: &quot;ææºå·å·²ç»å­å¨&quot;}</pre></li>

                                                                                < li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre >
return my_res(res) < / pre > < / li >

< li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > models.Student.objects.create(
    **body) < / pre > < / li >

< li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > res = msg.SUCCESS < / pre > < / li >

< li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > else: < / pre > < / li >

< li
onclick = "toggle('pre140655221042632', 'post140655221042632')" > < pre > res = msg.NOT_NULL < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221042632')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221042632" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > addr < / td >
< td


class ="code" > < pre > &  # 39;&#39;</pre></td>

< / tr >

< tr >
< td > age < / td >
< td


class ="code" > < pre > &  # 39;18&#39;</pre></td>

< / tr >

< tr >
< td > body < / td >
< td


class ="code" > < pre > {&  # 39;grade&#39;: &#39;äºç­&#39;, &#39;name&#39;: &#39;æå&#39;, &#39;phone&#39;: &#39;13516659123&#39;}</pre></td>
< / tr >

< tr >
< td > grade < / td >
< td


class ="code" > < pre > &  # 39;äºç­&#39;</pre></td>

< / tr >

< tr >
< td > name < / td >
< td


class ="code" > < pre > &  # 39;æå&#39;</pre></td>

< / tr >

< tr >
< td > obj < / td >
< td


class ="code" > < pre > Error in formatting: OperationalError: (2003,
                                                                & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                                                < / tr >

                                                                < tr >
                                                                < td > phone < / td >
                                                                < td


class ="code" > < pre > &  # 39;13516659123&#39;</pre></td>

< / tr >

< tr >
< td > req < / td >
< td


class ="code" > < pre > & lt;WSGIRequest: POST &  # 39;/api/user/add_stu&#39;&gt;</pre></td>

< / tr >

< tr >
< td > sex < / td >
< td


class ="code" > < pre > &  # 39;&#39;</pre></td>

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / query.py < / code > in < code > __bool__ < / code >

< div


class ="context" id="c140655221040840" >

< ol
start = "253"


class ="pre-context" id="pre140655221040840" >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > 3.
self.iterator() < / pre > < / li >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > - Responsible
for turning the rows into model objects.< / pre > < / li >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > self._fetch_all() < / pre > < / li >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >
return iter(self._result_cache) < / pre > < / li >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >


def __bool__(self):
    <

    / pre > < / li >

< / ol >

< ol
start = "260"


class ="context-line" >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >
self._fetch_all() < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '261'


class ="post-context" id="post140655221040840" >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >
return bool(self._result_cache) < / pre > < / li >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >


def __nonzero__(self):  # Python 2 compatibility</pre></li>

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >
return type(self).__bool__(self) < / pre > < / li >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221040840', 'post140655221040840')" > < pre >


def __getitem__(self, k):
    <

    / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221040840')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221040840" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > Error in formatting: OperationalError: (2003,
                                                                & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                                                < / tr >

                                                                < / tbody >
                                                                < / table >

                                                                < / li >

                                                                < li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / query.py < / code > in < code > _fetch_all < / code >

< div


class ="context" id="c140655286580232" >

< ol
start = "1078"


class ="pre-context" id="pre140655286580232" >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > clone._fields = self._fields < / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > clone.__dict__.update(
    kwargs) < / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >
return clone < / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >


def _fetch_all(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >
if self._result_cache is None: < / pre > < / li >

< / ol >

< ol
start = "1085"


class ="context-line" >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >
self._result_cache = list(
    self.iterator()) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '1086'


class ="post-context" id="post140655286580232" >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >
if self._prefetch_related_lookups and not self._prefetch_done: < / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > self._prefetch_related_objects() < / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre >


def _next_is_sticky(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655286580232', 'post140655286580232')" > < pre > Indicates
that
the
next
filter
call and the
one
following
that
should < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655286580232')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655286580232" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > Error in formatting: OperationalError: (2003,
                                                                & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                                                < / tr >

                                                                < / tbody >
                                                                < / table >

                                                                < / li >

                                                                < li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / query.py < / code > in < code > __iter__ < / code >

< div


class ="context" id="c140655221127816" >

< ol
start = "47"


class ="pre-context" id="pre140655221127816" >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >


def __iter__(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > queryset = self.queryset < / pre > < / li >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > db = queryset.db < / pre > < / li >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > compiler = queryset.query.get_compiler(
    using=db) < / pre > < / li >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >  # Execute the query. This will also fill compiler.select, klass_info,</pre></li>

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >  # and annotations.</pre></li>

< / ol >

< ol
start = "54"


class ="context-line" >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >
results = compiler.execute_sql() < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '55'


class ="post-context" id="post140655221127816" >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > select, klass_info, annotation_col_map = (
                                                                                                                       compiler.select,
                                                                                                                       compiler.klass_info,
                                                                                                                       < / pre > < / li >

                                                                                                                       < li onclick="toggle('pre140655221127816', 'post140655221127816')" > < pre > compiler.annotation_col_map) < / pre > < / li >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >
if klass_info is None: < / pre > < / li >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre >
return < / pre > < / li >

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > model_cls =
klass_info[ &  # 39;model&#39;]</pre></li>

< li
onclick = "toggle('pre140655221127816', 'post140655221127816')" > < pre > select_fields =
klass_info[ &  # 39;select_fields&#39;]</pre></li>

< / ol >

    < / div >

        < div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221127816')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221127816" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > compiler < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

< / tr >

< tr >
< td > db < / td >
< td


class ="code" > < pre > &  # 39;default&#39;</pre></td>

< / tr >

< tr >
< td > queryset < / td >
< td


class ="code" > < pre > Error in formatting: OperationalError: (2003,
                                                                & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                                                                < / tr >

                                                                < tr >
                                                                < td > self < / td >
                                                                < td


class ="code" > < pre > & lt;django.db.models.query.ModelIterable object at 0x7fecd8586518 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / sql / compiler.py < / code > in < code > execute_sql < / code >

< div


class ="context" id="c140655221127432" >

< ol
start = "817"


class ="pre-context" id="pre140655221127432" >

< li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > subclasses
such as InsertQuery).It &  # 39;s possible, however, that no query</pre></li>

                     < li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > is needed, as the
filters
describe
an
empty
set.In
that
case, None is < / pre > < / li >

                            < li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > returned, to
avoid
any
unnecessary
database
interaction. < / pre > < / li >

                           < li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > & quot; & quot; & quot; < / pre > < / li >

                                                                                                                < li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
if not result_type: < / pre > < / li >

                                  < li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > result_type = NO_RESULTS < / pre > < / li >

                                                                                                                 < li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
try: < / pre > < / li >

< / ol >

< ol
start = "824"


class ="context-line" >

< li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
sql, params = self.as_sql() < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '825'


class ="post-context" id="post140655221127432" >

< li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
if not sql: < / pre > < / li >

< li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
raise EmptyResultSet < / pre > < / li >

< li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >        except EmptyResultSet: < / pre > < / li >

< li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
if result_type == MULTI: < / pre > < / li >

< li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre >
return iter([]) < / pre > < / li >

< li
onclick = "toggle('pre140655221127432', 'post140655221127432')" > < pre > else: < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221127432')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221127432" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > result_type < / td >
< td


class ="code" > < pre > &  # 39;multi&#39;</pre></td>

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / sql / compiler.py < / code > in < code > as_sql < / code >

< div


class ="context" id="c140655221125192" >

< ol
start = "369"


class ="pre-context" id="pre140655221125192" >

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > extra_select, order_by, group_by = self.pre_sql_setup() < / pre > < / li >

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > distinct_fields = self.get_distinct() < / pre > < / li >

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre >  # This must come after &#39;select&#39;, &#39;ordering&#39;, and &#39;distinct&#39; -- see</pre></li>

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre >  # docstring of get_from_clause() for details.</pre></li>

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > from_, f_params = self.get_from_clause() < / pre > < / li >

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > < / pre > < / li >

< / ol >

< ol
start = "376"


class ="context-line" >

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre >
where, w_params = self.compile(self.where) if self.where is not None else (
                                                                              & quot; & quot;, []) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '377'


class ="post-context" id="post140655221125192" >

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > having, h_params = self.compile(
    self.having) if self.having is not None else (
                                                     & quot; & quot;, []) < / pre > < / li >

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > params = [] < / pre > < / li >

< li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > result = [ &  # 39;SELECT&#39;]</pre></li>

                                                                                   < li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > < / pre > < / li >

                                                                                        < li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre >
if self.query.distinct: < / pre > < / li >

                                      < li
onclick = "toggle('pre140655221125192', 'post140655221125192')" > < pre > result.append(
    self.connection.ops.distinct_sql(distinct_fields)) < / pre > < / li >

                                                                     < / ol >

                                                                         < / div >

                                                                             < div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221125192')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221125192" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > distinct_fields < / td >
< td


class ="code" > < pre >[] < / pre > < / td >

< / tr >

< tr >
< td > extra_select < / td >
< td


class ="code" > < pre >[] < / pre > < / td >

< / tr >

< tr >
< td > f_params < / td >
< td


class ="code" > < pre >[] < / pre > < / td >

< / tr >

< tr >
< td > from_ < / td >
< td


class ="code" > < pre >[&  # 39;`app_student`&#39;]</pre></td>
< / tr >

< tr >
< td > group_by < / td >
< td


class ="code" > < pre >[] < / pre > < / td >

< / tr >

< tr >
< td > order_by < / td >
< td


class ="code" > < pre >[] < / pre > < / td >

< / tr >

< tr >
< td > refcounts_before < / td >
< td


class ="code" > < pre > {&  # 39;app_student&#39;: 1}</pre></td>
< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

< / tr >

< tr >
< td > subquery < / td >
< td


class ="code" > < pre > False < / pre > < / td >

< / tr >

< tr >
< td > with_col_aliases < / td >
< td


class ="code" > < pre > False < / pre > < / td >

< / tr >

< tr >
< td > with_limits < / td >
< td


class ="code" > < pre > True < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / sql / compiler.py < / code > in < code > compile < / code >

< div


class ="context" id="c140655221127304" >

< ol
start = "346"


class ="pre-context" id="pre140655221127304" >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
return r < / pre > < / li >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >


def compile(self, node, select_format=False):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > vendor_impl = getattr(
    node, &  # 39;as_&#39; + self.connection.vendor, None)</pre></li>

                                                                                        < li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
if vendor_impl: < / pre > < / li >

                              < li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > sql, params = vendor_impl(
    self, self.connection) < / pre > < / li >

                                         < li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > else: < / pre > < / li >

                                                                                              < / ol >

                                                                                                  < ol
start = "353"


class ="context-line" >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
sql, params = node.as_sql(self,
                          self.connection) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '354'


class ="post-context" id="post140655221127304" >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
if select_format and not self.subquery: < / pre > < / li >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
return node.output_field.select_format(self, sql, params) < / pre > < / li >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >
return sql, params < / pre > < / li >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre >


def as_sql(self, with_limits=True, with_col_aliases=False, subquery=False):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221127304', 'post140655221127304')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221127304')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221127304" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > node < / td >
< td


class ="code" > < pre > & lt;WhereNode: (AND
                                         : & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt;) & gt; <

/ pre > < / td >
< / tr >

< tr >
< td > select_format < / td >
< td


class ="code" > < pre > False < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

< / tr >

< tr >
< td > vendor_impl < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / sql / where.py < / code > in < code > as_sql < / code >

< div


class ="context" id="c140655221126664" >

< ol
start = "72"


class ="pre-context" id="pre140655221126664" >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >
if self.connector == AND: < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > full_needed, empty_needed = len(
    self.children), 1 < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > else: < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > full_needed, empty_needed = 1, len(
    self.children) < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >
for child in self.children: < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >
try: < / pre > < / li >

< / ol >

< ol
start = "79"


class ="context-line" >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >
sql, params = compiler.compile(
    child) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '80'


class ="post-context" id="post140655221126664" >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >            except EmptyResultSet: < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > empty_needed -= 1 < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > else: < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre >
if sql: < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > result.append(
    sql) < / pre > < / li >

< li
onclick = "toggle('pre140655221126664', 'post140655221126664')" > < pre > result_params.extend(
    params) < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221126664')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221126664" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > child < / td >
< td


class ="code" > < pre > & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt; < / pre > < / td >

< / tr >

< tr >
< td > compiler < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

< / tr >

< tr >
< td > connection < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< tr >
< td > empty_needed < / td >
< td


class ="code" > < pre > 1 < / pre > < / td >

< / tr >

< tr >
< td > full_needed < / td >
< td


class ="code" > < pre > 1 < / pre > < / td >

< / tr >

< tr >
< td > result < / td >
< td


class ="code" > < pre >[] < / pre > < / td >

< / tr >

< tr >
< td > result_params < / td >
< td


class ="code" > < pre >[] < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;WhereNode: (AND
                                         : & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt;) & gt; <

/ pre > < / td >
< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / sql / compiler.py < / code > in < code > compile < / code >

< div


class ="context" id="c140655221126344" >

< ol
start = "346"


class ="pre-context" id="pre140655221126344" >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
return r < / pre > < / li >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >


def compile(self, node, select_format=False):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > vendor_impl = getattr(
    node, &  # 39;as_&#39; + self.connection.vendor, None)</pre></li>

                                                                                        < li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
if vendor_impl: < / pre > < / li >

                              < li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > sql, params = vendor_impl(
    self, self.connection) < / pre > < / li >

                                         < li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > else: < / pre > < / li >

                                                                                              < / ol >

                                                                                                  < ol
start = "353"


class ="context-line" >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
sql, params = node.as_sql(self,
                          self.connection) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '354'


class ="post-context" id="post140655221126344" >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
if select_format and not self.subquery: < / pre > < / li >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
return node.output_field.select_format(self, sql, params) < / pre > < / li >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >
return sql, params < / pre > < / li >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre >


def as_sql(self, with_limits=True, with_col_aliases=False, subquery=False):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221126344', 'post140655221126344')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221126344')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221126344" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > node < / td >
< td


class ="code" > < pre > & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt; < / pre > < / td >

< / tr >

< tr >
< td > select_format < / td >
< td


class ="code" > < pre > False < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

< / tr >

< tr >
< td > vendor_impl < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / lookups.py < / code > in < code > as_sql < / code >

< div


class ="context" id="c140655221126920" >

< ol
start = "148"


class ="pre-context" id="pre140655221126920" >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > db_type = self.lhs.output_field.db_type(
    connection=connection) < / pre > < / li >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > lhs_sql = connection.ops.field_cast_sql( < / pre > < / li >

                                                                                                                                 < li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > db_type, field_internal_type) % lhs_sql < / pre > < / li >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > lhs_sql = connection.ops.lookup_cast(
    self.lookup_name, field_internal_type) % lhs_sql < / pre > < / li >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre >
return lhs_sql, list(params) < / pre > < / li >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre >


def as_sql(self, compiler, connection):
    <

    / pre > < / li >

< / ol >

< ol
start = "155"


class ="context-line" >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre >
lhs_sql, params = self.process_lhs(compiler,
                                   connection) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '156'


class ="post-context" id="post140655221126920" >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > rhs_sql, rhs_params = self.process_rhs(
    compiler, connection) < / pre > < / li >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > params.extend(
    rhs_params) < / pre > < / li >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > rhs_sql = self.get_rhs_op(
    connection, rhs_sql) < / pre > < / li >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre >
return &  # 39;%s %s&#39; % (lhs_sql, rhs_sql), params</pre></li>

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221126920', 'post140655221126920')" > < pre >


def get_rhs_op(self, connection, rhs):
    <

    / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221126920')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221126920" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > compiler < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

< / tr >

< tr >
< td > connection < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / lookups.py < / code > in < code > process_lhs < / code >

< div


class ="context" id="c140655221129096" >

< ol
start = "141"


class ="pre-context" id="pre140655221129096" >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre >


class BuiltinLookup(Lookup):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre >


def process_lhs(self, compiler, connection, lhs=None):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > lhs_sql, params = super(
    BuiltinLookup, self).process_lhs( < / pre > < / li >

                                                    < li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > compiler, connection, lhs) < / pre > < / li >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > field_internal_type = self.lhs.output_field.get_internal_type() < / pre > < / li >

< / ol >

< ol
start = "148"


class ="context-line" >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre >
db_type = self.lhs.output_field.db_type(
    connection=connection) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '149'


class ="post-context" id="post140655221129096" >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > lhs_sql = connection.ops.field_cast_sql( < / pre > < / li >

                                                                                                                                 < li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > db_type, field_internal_type) % lhs_sql < / pre > < / li >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > lhs_sql = connection.ops.lookup_cast(
    self.lookup_name, field_internal_type) % lhs_sql < / pre > < / li >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre >
return lhs_sql, list(params) < / pre > < / li >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221129096', 'post140655221129096')" > < pre >


def as_sql(self, compiler, connection):
    <

    / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221129096')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221129096" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > __class__ < / td >
< td


class ="code" > < pre > & lt; class &  # 39;django.db.models.lookups.BuiltinLookup&#39;&gt;</pre></td>

< / tr >

< tr >
< td > compiler < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.compiler.SQLCompiler object at 0x7fecd8586278 & gt; < / pre > < / td >

< / tr >

< tr >
< td > connection < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< tr >
< td > field_internal_type < / td >
< td


class ="code" > < pre > &  # 39;CharField&#39;</pre></td>

< / tr >

< tr >
< td > lhs < / td >
< td


class ="code" > < pre > None < / pre > < / td >

< / tr >

< tr >
< td > lhs_sql < / td >
< td


class ="code" > < pre > &  # 39;`app_student`.`phone`&#39;</pre></td>

< / tr >

< tr >
< td > params < / td >
< td


class ="code" > < pre >[] < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.models.lookups.Exact object at 0x7fecd8586be0 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / models / fields / __init__.py < / code > in < code > db_type < / code >

< div


class ="context" id="c140655221129160" >

< ol
start = "622"


class ="pre-context" id="pre140655221129160" >

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >  # But the limitation of the get_internal_type() / data_types approach</pre></li>

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >  # is that it cannot handle database column types that aren&#39;t already</pre></li>

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >  # mapped to one of the built-in Django field types. In this case, you</pre></li>

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >  # can implement db_type() instead of get_internal_type() to specify</pre></li>

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >  # exactly which wacky database column type you want to use.</pre></li>

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre > data = DictWrapper(
    self.__dict__, connection.ops.quote_name, & quot;
qn_ & quot;) < / pre > < / li >

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >
try: < / pre > < / li >

< / ol >

< ol
start = "629"


class ="context-line" >

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >
return connection.data_types[
           self.get_internal_type()] % data < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '630'


class ="post-context" id="post140655221129160" >

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >        except KeyError: < / pre > < / li >

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >
return None < / pre > < / li >

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre >


def rel_db_type(self, connection):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655221129160', 'post140655221129160')" > < pre > Return
the
data
type
that
a
related
field
pointing
to
this
field
should < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221129160')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221129160" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > connection < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< tr >
< td > data < / td >
< td


class ="code" > < pre > {&  # 39;_error_messages&#39;: None,
&  # 39;_unique&#39;: False,
&  # 39;_validators&#39;: [],
&  # 39;_verbose_name&#39;: &#39;çµè¯&#39;,
&  # 39;attname&#39;: &#39;phone&#39;,
&  # 39;auto_created&#39;: False,
&  # 39;blank&#39;: False,
&  # 39;cached_col&#39;: Col(app_student, app.Student.phone),
&  # 39;choices&#39;: [],
&  # 39;column&#39;: &#39;phone&#39;,
&  # 39;concrete&#39;: True,
&  # 39;creation_counter&#39;: 50,
&  # 39;db_column&#39;: None,
&  # 39;db_index&#39;: False,
&  # 39;db_tablespace&#39;: &#39;&#39;,
&  # 39;default&#39;: &lt;class &#39;django.db.models.fields.NOT_PROVIDED&#39;&gt;,
&  # 39;editable&#39;: True,
&  # 39;error_messages&#39;: {&#39;blank&#39;: &lt;django.utils.functional.lazy.&lt;locals&gt;.__proxy__ object at 0x7fecdd721cf8&gt;,
&  # 39;invalid_choice&#39;: &lt;django.utils.functional.lazy.&lt;locals&gt;.__proxy__ object at 0x7fecdd721be0&gt;,
&  # 39;null&#39;: &lt;django.utils.functional.lazy.&lt;locals&gt;.__proxy__ object at 0x7fecdd721c18&gt;,
&  # 39;unique&#39;: &lt;django.utils.functional.lazy.&lt;locals&gt;.__proxy__ object at 0x7fecdd6e37f0&gt;,
&  # 39;unique_for_date&#39;: &lt;django.utils.functional.lazy.&lt;locals&gt;.__proxy__ object at 0x7fecdc4fa358&gt;},
&  # 39;help_text&#39;: &#39;&#39;,
&  # 39;is_relation&#39;: False,
&  # 39;max_length&#39;: 11,
&  # 39;model&#39;: &lt;class &#39;app.models.Student&#39;&gt;,
&  # 39;name&#39;: &#39;phone&#39;,
&  # 39;null&#39;: False,
&  # 39;primary_key&#39;: False,
&  # 39;remote_field&#39;: None,
&  # 39;serialize&#39;: True,
&  # 39;unique_for_date&#39;: None,
&  # 39;unique_for_month&#39;: None,
&  # 39;unique_for_year&#39;: None,
&  # 39;validators&#39;: [&lt;django.core.validators.MaxLengthValidator object at 0x7fecdb2fea90&gt;],
&  # 39;verbose_name&#39;: &#39;çµè¯&#39;}</pre></td>
< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.models.fields.CharField: phone & gt; <

/ pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / utils / functional.py < / code > in < code > __get__ < / code >

< div


class ="context" id="c140655221125640" >

< ol
start = "28"


class ="pre-context" id="pre140655221125640" >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > self.func = func < / pre > < / li >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > self.__doc__ = getattr(
    func, &  # 39;__doc__&#39;)</pre></li>

                                                                                         < li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > self.name = name or func.__name__ < / pre > < / li >

                                                                                                                          < li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > < / pre > < / li >

                                                                                        < li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >


def __get__(self, instance, cls=None):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >
if instance is None: < / pre > < / li >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >
return self < / pre > < / li >

< / ol >

< ol
start = "35"


class ="context-line" >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >
res = instance.__dict__[self.name] = self.func(
    instance) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '36'


class ="post-context" id="post140655221125640" >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >
return res < / pre > < / li >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre >


class Promise(object):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655221125640', 'post140655221125640')" > < pre > This is just
a
base


class for the proxy class created in < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221125640')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221125640" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > cls < / td >
< td


class ="code" > < pre > & lt; class &  # 39;django.db.backends.mysql.base.DatabaseWrapper&#39;&gt;</pre></td>

< / tr >

< tr >
< td > instance < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.utils.functional.cached_property object at 0x7fecdb3b14a8 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / mysql / base.py < / code > in < code > data_types < / code >

< div


class ="context" id="c140655221126216" >

< ol
start = "178"


class ="pre-context" id="pre140655221126216" >

< li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > &  # 39;TextField&#39;: &#39;longtext&#39;,</pre></li>

< li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > &  # 39;TimeField&#39;: &#39;time&#39;,</pre></li>

< li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > &  # 39;UUIDField&#39;: &#39;char(32)&#39;,</pre></li>

< li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >} < / pre > < / li >

                                                                                         < li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > < / pre > < / li >

                                                                                        < li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >


@cached_property

< / pre > < / li >

              < li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >


def data_types(self):
    <

    / pre > < / li >

< / ol >

< ol
start = "185"


class ="context-line" >

< li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >
if self.features.supports_microsecond_precision: < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '186'


class ="post-context" id="post140655221126216" >

< li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >
return dict(self._data_types,
            DateTimeField= &  # 39;datetime(6)&#39;, TimeField=&#39;time(6)&#39;)</pre></li>

       < li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > else: < / pre > < / li >

                                                                                              < li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre >
return self._data_types < / pre > < / li >

< li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > operators = { < / pre > < / li >

                                                                                                      < li
onclick = "toggle('pre140655221126216', 'post140655221126216')" > < pre > &  # 39;exact&#39;: &#39;= %s&#39;,</pre></li>

< / ol >

    < / div >

        < div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221126216')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221126216" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / utils / functional.py < / code > in < code > __get__ < / code >

< div


class ="context" id="c140655221125256" >

< ol
start = "28"


class ="pre-context" id="pre140655221125256" >

< li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > self.func = func < / pre > < / li >

< li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > self.__doc__ = getattr(
    func, &  # 39;__doc__&#39;)</pre></li>

                                                                                         < li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > self.name = name or func.__name__ < / pre > < / li >

                                                                                                                          < li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > < / pre > < / li >

                                                                                        < li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >


def __get__(self, instance, cls=None):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >
if instance is None: < / pre > < / li >

< li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >
return self < / pre > < / li >

< / ol >

< ol
start = "35"


class ="context-line" >

< li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >
res = instance.__dict__[self.name] = self.func(
    instance) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '36'


class ="post-context" id="post140655221125256" >

< li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >
return res < / pre > < / li >

< li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre >


class Promise(object):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655221125256', 'post140655221125256')" > < pre > This is just
a
base


class for the proxy class created in < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221125256')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221125256" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > cls < / td >
< td


class ="code" > < pre > & lt; class &  # 39;django.db.backends.mysql.features.DatabaseFeatures&#39;&gt;</pre></td>

< / tr >

< tr >
< td > instance < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.features.DatabaseFeatures object at 0x7fecd94df550 & gt; < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.utils.functional.cached_property object at 0x7fecdb3dc7f0 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / mysql / features.py < / code > in < code > supports_microsecond_precision < / code >

< div


class ="context" id="c140655221128584" >

< ol
start = "47"


class ="pre-context" id="pre140655221128584" >

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre > & quot;
Confirm
support
for introspected foreign keys & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >
return self._mysql_storage_engine != &  # 39;MyISAM&#39;</pre></li>

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >


@cached_property

< / pre > < / li >

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >


def supports_microsecond_precision(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >  # See https://github.com/farcepest/MySQLdb1/issues/24 for the reason</pre></li>

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >  # about requiring MySQLdb 1.2.5</pre></li>

< / ol >

< ol
start = "54"


class ="context-line" >

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >
return self.connection.mysql_version & gt;= (5, 6,
                                             4) and Database.version_info & gt;= (1,
                                                                                  2,
                                                                                  5) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '55'


class ="post-context" id="post140655221128584" >

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >


@cached_property

< / pre > < / li >

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >


def has_zoneinfo_database(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >  # MySQL accepts full time zones names (eg. Africa/Nairobi) but rejects</pre></li>

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >  # abbreviations (eg. EAT). When pytz isn&#39;t installed and the current</pre></li>

< li
onclick = "toggle('pre140655221128584', 'post140655221128584')" > < pre >  # time zone is LocalTimezone (the only sensible value in this</pre></li>

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221128584')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221128584" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.features.DatabaseFeatures object at 0x7fecd94df550 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / utils / functional.py < / code > in < code > __get__ < / code >

< div


class ="context" id="c140655221128648" >

< ol
start = "28"


class ="pre-context" id="pre140655221128648" >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > self.func = func < / pre > < / li >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > self.__doc__ = getattr(
    func, &  # 39;__doc__&#39;)</pre></li>

                                                                                         < li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > self.name = name or func.__name__ < / pre > < / li >

                                                                                                                          < li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > < / pre > < / li >

                                                                                        < li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >


def __get__(self, instance, cls=None):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >
if instance is None: < / pre > < / li >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >
return self < / pre > < / li >

< / ol >

< ol
start = "35"


class ="context-line" >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >
res = instance.__dict__[self.name] = self.func(
    instance) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '36'


class ="post-context" id="post140655221128648" >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >
return res < / pre > < / li >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre >


class Promise(object):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655221128648', 'post140655221128648')" > < pre > This is just
a
base


class for the proxy class created in < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221128648')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221128648" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > cls < / td >
< td


class ="code" > < pre > & lt; class &  # 39;django.db.backends.mysql.base.DatabaseWrapper&#39;&gt;</pre></td>

< / tr >

< tr >
< td > instance < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.utils.functional.cached_property object at 0x7fecdb3b1358 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / mysql / base.py < / code > in < code > mysql_version < / code >

< div


class ="context" id="c140655221126856" >

< ol
start = "362"


class ="pre-context" id="pre140655221126856" >

< li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >        except Database.Error: < / pre > < / li >

< li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
return False < / pre > < / li >

< li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre > else: < / pre > < / li >

< li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
return True < / pre > < / li >

< li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >


@cached_property

< / pre > < / li >

< li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >


def mysql_version(self):
    <

    / pre > < / li >

< / ol >

< ol
start = "369"


class ="context-line" >

< li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
with self.temporary_connection() as cursor:
    < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '370'


class ="post-context" id="post140655221126856" >

< li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre > cursor.execute( &  # 39;SELECT VERSION()&#39;)</pre></li>

          < li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre > server_info =
cursor.fetchone()[0] < / pre > < / li >

                                   < li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre > match = server_version_re.match(
    server_info) < / pre > < / li >

                               < li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
if not match: < / pre > < / li >

                            < li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
raise Exception( &  # 39;Unable to determine MySQL version from version string %r&#39; % server_info)</pre></li>

      < li
onclick = "toggle('pre140655221126856', 'post140655221126856')" > < pre >
return tuple(int(x) for x in match.groups()) < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221126856')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221126856" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame user" >

< code > / usr / local / anaconda3 / lib / python3
.6 / contextlib.py < / code > in < code > __enter__ < / code >

< div


class ="context" id="c140655221128520" >

< ol
start = "74"


class ="pre-context" id="pre140655221128520" >

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >  # _GCM instances are one-shot context managers, so the</pre></li>

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >  # CM must be recreated each time a decorated function is</pre></li>

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >  # called</pre></li>

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
return self.__class__(self.func, self.args, self.kwds) < / pre > < / li >

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >


def __enter__(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
try: < / pre > < / li >

< / ol >

< ol
start = "81"


class ="context-line" >

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
return next(self.gen) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '82'


class ="post-context" id="post140655221128520" >

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >        except StopIteration: < / pre > < / li >

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
raise RuntimeError( & quot;
generator
didn &  # 39;t yield&quot;) from None</pre></li>

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre > < / pre > < / li >

                                                                                        < li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >


def __exit__(self, type, value, traceback):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
if type is None: < / pre > < / li >

< li
onclick = "toggle('pre140655221128520', 'post140655221128520')" > < pre >
try: < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221128520')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221128520" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;contextlib._GeneratorContextManager object at 0x7fecd8586940 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / base / base.py < / code > in < code > temporary_connection < / code >

< div


class ="context" id="c140655221126984" >

< ol
start = "557"


class ="pre-context" id="pre140655221126984" >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > Context
manager
that
ensures
that
a
connection is established, and < / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > if it
opened
one, closes
it
to
avoid
leaving
a
dangling
connection. < / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > This is useful
for operations outside of the request-response cycle.< / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > Provides
a
cursor:
with self.temporary_connection() as cursor:
    ... < / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > must_close = self.connection is None < / pre > < / li >

< / ol >

< ol
start = "564"


class ="context-line" >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre >
cursor = self.cursor() < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '565'


class ="post-context" id="post140655221126984" >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre >
try: < / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre >
yield cursor < / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre >        finally: < / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > cursor.close() < / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre >
if must_close: < / pre > < / li >

< li
onclick = "toggle('pre140655221126984', 'post140655221126984')" > < pre > self.close() < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655221126984')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655221126984" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > must_close < / td >
< td


class ="code" > < pre > True < / pre > < / td >

< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / base / base.py < / code > in < code > cursor < / code >

< div


class ="context" id="c140655233624264" >

< ol
start = "224"


class ="pre-context" id="pre140655233624264" >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre >


def cursor(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > Creates
a
cursor, opening
a
connection if necessary. < / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > self.validate_thread_sharing() < / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre >
if self.queries_logged: < / pre > < / li >

< / ol >

< ol
start = "231"


class ="context-line" >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre >
cursor = self.make_debug_cursor(
    self._cursor()) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '232'


class ="post-context" id="post140655233624264" >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > else: < / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > cursor = self.make_cursor(
    self._cursor()) < / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre >
return cursor < / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre >


def commit(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233624264', 'post140655233624264')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233624264')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233624264" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / base / base.py < / code > in < code > _cursor < / code >

< div


class ="context" id="c140655233625224" >

< ol
start = "197"


class ="pre-context" id="pre140655233625224" >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
if self.connection is None: < / pre > < / li >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
with self.wrap_database_errors:
    < / pre > < / li >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre > self.connect() < / pre > < / li >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >  # ##### Backend-specific wrappers for PEP-249 connection methods #####</pre></li>

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >


def _cursor(self):
    <

    / pre > < / li >

< / ol >

< ol
start = "204"


class ="context-line" >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
self.ensure_connection() < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '205'


class ="post-context" id="post140655233625224" >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
with self.wrap_database_errors:
    < / pre > < / li >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
return self.create_cursor() < / pre > < / li >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >


def _commit(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
if self.connection is not None: < / pre > < / li >

< li
onclick = "toggle('pre140655233625224', 'post140655233625224')" > < pre >
with self.wrap_database_errors:
    < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233625224')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233625224" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / base / base.py < / code > in < code > ensure_connection < / code >

< div


class ="context" id="c140655233624136" >

< ol
start = "192"


class ="pre-context" id="pre140655233624136" >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >


def ensure_connection(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > Guarantees
that
a
connection
to
the
database is established. < / pre > < / li >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >
if self.connection is None: < / pre > < / li >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >
with self.wrap_database_errors:
    < / pre > < / li >

< / ol >

< ol
start = "199"


class ="context-line" >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >
self.connect() < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '200'


class ="post-context" id="post140655233624136" >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >  # ##### Backend-specific wrappers for PEP-249 connection methods #####</pre></li>

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >


def _cursor(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre > self.ensure_connection() < / pre > < / li >

< li
onclick = "toggle('pre140655233624136', 'post140655233624136')" > < pre >
with self.wrap_database_errors:
    < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233624136')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233624136" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / utils.py < / code > in < code > __exit__ < / code >

< div


class ="context" id="c140655233623368" >

< ol
start = "87"


class ="pre-context" id="pre140655233623368" >

< li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre > dj_exc_value.__cause__ = exc_value < / pre > < / li >

< li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre > if not hasattr(
    exc_value, &  # 39;__traceback__&#39;):</pre></li>

                                                                                 < li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre > exc_value.__traceback__ = traceback < / pre > < / li >

                                                                                                                            < li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >  # Only set the &#39;errors_occurred&#39; flag for errors that may make</pre></li>

          < li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >  # the connection unusable.</pre></li>

          < li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >
if dj_exc_type not in (DataError, IntegrityError): < / pre > < / li >

                                                                 < li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre > self.wrapper.errors_occurred = True < / pre > < / li >

                                                                                                                            < / ol >

                                                                                                                                < ol
start = "94"


class ="context-line" >

< li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >
six.reraise(dj_exc_type, dj_exc_value,
            traceback) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '95'


class ="post-context" id="post140655233623368" >

< li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >


def __call__(self, func):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >  # Note that we are intentionally not using @wraps here for performance</pre></li>

< li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >  # reasons. Refs #21109.</pre></li>

< li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >


def inner(*args, **kwargs):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233623368', 'post140655233623368')" > < pre >
with self:
    < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233623368')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233623368" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > db_exc_type < / td >
< td


class ="code" > < pre > & lt; class &  # 39;pymysql.err.OperationalError&#39;&gt;</pre></td>

< / tr >

< tr >
< td > dj_exc_type < / td >
< td


class ="code" > < pre > & lt; class &  # 39;django.db.utils.OperationalError&#39;&gt;</pre></td>

< / tr >

< tr >
< td > dj_exc_value < / td >
< td


class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
< / tr >

< tr >
< td > exc_type < / td >
< td


class ="code" > < pre > & lt; class &  # 39;pymysql.err.OperationalError&#39;&gt;</pre></td>

< / tr >

< tr >
< td > exc_value < / td >
< td


class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
< / tr >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.utils.DatabaseErrorWrapper object at 0x7fecd8586a90 & gt; < / pre > < / td >

< / tr >

< tr >
< td > traceback < / td >
< td


class ="code" > < pre > & lt;traceback object at 0x7fecd93c6fc8 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / utils / six.py < / code > in < code > reraise < / code >

< div


class ="context" id="c140655233625032" >

< ol
start = "678"


class ="pre-context" id="pre140655233625032" >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
if PY3: < / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > exec_ = getattr(
    moves.builtins, & quot;
exec & quot;) < / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >


def reraise(tp, value, tb=None):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
if value is None: < / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > value = tp() < / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
if value.__traceback__ is not tb: < / pre > < / li >

< / ol >

< ol
start = "685"


class ="context-line" >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
raise value.with_traceback(tb) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '686'


class ="post-context" id="post140655233625032" >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
raise value < / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > else: < / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >


def exec_(_code_, _globs_=None, _locs_=None):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre > & quot; & quot; & quot;
Execute
code in a
namespace. & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233625032', 'post140655233625032')" > < pre >
if _globs_ is None: < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233625032')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233625032" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > tb < / td >
< td


class ="code" > < pre > & lt;traceback object at 0x7fecd93c6fc8 & gt; < / pre > < / td >

< / tr >

< tr >
< td > tp < / td >
< td


class ="code" > < pre > & lt; class &  # 39;django.db.utils.OperationalError&#39;&gt;</pre></td>

< / tr >

< tr >
< td > value < / td >
< td


class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / base / base.py < / code > in < code > ensure_connection < / code >

< div


class ="context" id="c140655233626056" >

< ol
start = "192"


class ="pre-context" id="pre140655233626056" >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >


def ensure_connection(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > Guarantees
that
a
connection
to
the
database is established. < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > & quot; & quot; & quot; < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
if self.connection is None: < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
with self.wrap_database_errors:
    < / pre > < / li >

< / ol >

< ol
start = "199"


class ="context-line" >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
self.connect() < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '200'


class ="post-context" id="post140655233626056" >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >  # ##### Backend-specific wrappers for PEP-249 connection methods #####</pre></li>

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >


def _cursor(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre > self.ensure_connection() < / pre > < / li >

< li
onclick = "toggle('pre140655233626056', 'post140655233626056')" > < pre >
with self.wrap_database_errors:
    < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233626056')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233626056" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > self < / td >
< td


class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

< / tr >

< / tbody >
< / table >

< / li >

< li


class ="frame django" >

< code > / usr / local / anaconda3 / lib / python3
.6 / site - packages / django / db / backends / base / base.py < / code > in < code > connect < / code >

< div


class ="context" id="c140655233624904" >

< ol
start = "164"


class ="pre-context" id="pre140655233624904" >

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >  # Reset parameters defining when to close the connection</pre></li>

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > max_age =
self.settings_dict[ &  # 39;CONN_MAX_AGE&#39;]</pre></li>

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.close_at = None if max_age is None else time.time() + max_age < / pre > < / li >

                                                                                                                                                           < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.closed_in_transaction = False < / pre > < / li >

                                                                                                                           < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.errors_occurred = False < / pre > < / li >

                                                                                                                     < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >  # Establish the connection</pre></li>

          < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > conn_params = self.get_connection_params() < / pre > < / li >

                                                                                                                                   < / ol >

                                                                                                                                       < ol
start = "171"


class ="context-line" >

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre >
self.connection = self.get_new_connection(
    conn_params) < / pre > < span > ... < / span > < / li > < / ol >

< ol
start = '172'


class ="post-context" id="post140655233624904" >

< li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.set_autocommit(
    self.settings_dict[ &  # 39;AUTOCOMMIT&#39;])</pre></li>

    < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.init_connection_state() < / pre > < / li >

                                                                                                                     < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > connection_created.send(
    sender=self.__class__, connection=self) < / pre > < / li >

                                                          < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > < / pre > < / li >

                                                                                        < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > self.run_on_commit = [] < / pre > < / li >

                                                                                                                < li
onclick = "toggle('pre140655233624904', 'post140655233624904')" > < pre > < / pre > < / li >

                                                                                        < / ol >

                                                                                            < / div >

                                                                                                < div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233624904')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233624904" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > conn_params < / td >
< td


class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
&  # 39;client_flag&#39;: 2,
&  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
1: &


lt;


class &  # 39;int&#39;&gt;,
    2: & lt;

    class &  # 39;int&#39;&gt;,
        3: & lt;

        class &  # 39;int&#39;&gt;,

            4: & lt;

        class &  # 39;float&#39;&gt;,

            5: & lt;

        class &  # 39;float&#39;&gt;,

            7: & lt;

        function
        convert_mysql_timestamp
        at
        0x7fecdb3d7bf8 & gt;,
        8: & lt;

        class &  # 39;int&#39;&gt;,
            9: & lt;

            class &  # 39;int&#39;&gt;,

                10: & lt;

            function
            convert_date
            at
            0x7fecdb3d7b70 & gt;,
            11: & lt;
            function
            typecast_time
            at
            0x7fecdd779bf8 & gt;,
            12: & lt;
            function
            convert_datetime
            at
            0x7fecdb3d79d8 & gt;,
            13: & lt;

            class &  # 39;int&#39;&gt;,
                15: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                16: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                246: & lt;
                function
                typecast_decimal
                at
                0x7fecdd779d08 & gt;,
                248: & lt;
                function
                convert_set
                at
                0x7fecdb3d7c80 & gt;,
                249: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                250: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                251: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                252: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                253: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                254: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                & lt;

                class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                    & lt;

                    class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                        & lt;

                    class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                        & lt;

                    class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                        & lt;

                    class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                        & lt;

                    class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                        & lt;

                    class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                        & lt;

                    class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                        & lt;

                    class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                        & lt;

                    class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                        & lt;

                    class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                        & lt;

                    class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                        & lt;

                    class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

            &  # 39;db&#39;: &#39;main&#39;,
            &  # 39;host&#39;: &#39;127.0.0.1&#39;,
            &  # 39;passwd&#39;: &#39;123456&#39;,
            &  # 39;port&#39;: 3306,
            &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
            < / tr >

            < tr >
            < td > max_age < / td >
            < td

            class ="code" > < pre > 0 < / pre > < / td >

            < / tr >

            < tr >
            < td > self < / td >
            < td

            class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

            < / tr >

            < / tbody >
            < / table >

            < / li >

            < li

            class ="frame django" >

            < code > / usr / local / anaconda3 / lib / python3
            .6 / site - packages / django / db / backends / mysql / base.py < / code > in < code > get_new_connection < / code >

            < div

            class ="context" id="c140655233624776" >

            < ol
            start = "258"

            class ="pre-context" id="pre140655233624776" >

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >  # We need the number of potentially affected rows after an</pre></li>

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >  # &quot;UPDATE&quot;, not the number of changed rows.</pre></li>

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
            kwargs[ &  # 39;client_flag&#39;] = CLIENT.FOUND_ROWS</pre></li>

            < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > kwargs.update(
                settings_dict[ &  # 39;OPTIONS&#39;])</pre></li>

                < li
            onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >

        return kwargs < / pre > < / li >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > < / pre > < / li >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >

        def get_new_connection(self, conn_params):
            <

            / pre > < / li >

        < / ol >

        < ol
        start = "265"

        class ="context-line" >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
        conn = Database.connect(
            **conn_params) < / pre > < span > ... < / span > < / li > < / ol >

        < ol
        start = '266'

        class ="post-context" id="post140655233624776" >

        < li
        onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
        conn.encoders[SafeText] = conn.encoders[
                                      six.text_type] < / pre > < / li >

    < li
    onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
    conn.encoders[SafeBytes] = conn.encoders[
                                   bytes] < / pre > < / li >

< li
onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
return conn < / pre > < / li >

< li
onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre > < / pre > < / li >

< li
onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >


def init_connection_state(self):
    <

    / pre > < / li >

< li
onclick = "toggle('pre140655233624776', 'post140655233624776')" > < pre >
if self.features.is_sql_auto_is_null_enabled: < / pre > < / li >

< / ol >

< / div >

< div


class ="commands" >

< a
href = "#"
onclick = "return varToggle(this, '140655233624776')" > < span > &  # x25b6;</span> Local vars</a>

< / div >
< table


class ="vars" id="v140655233624776" >

< thead >
< tr >
< th > Variable < / th >
< th > Value < / th >
< / tr >
< / thead >
< tbody >

< tr >
< td > conn_params < / td >
< td


class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
&  # 39;client_flag&#39;: 2,
&  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
1: &


lt;


class &  # 39;int&#39;&gt;,
    2: & lt;

    class &  # 39;int&#39;&gt;,
        3: & lt;

        class &  # 39;int&#39;&gt;,

            4: & lt;

        class &  # 39;float&#39;&gt;,

            5: & lt;

        class &  # 39;float&#39;&gt;,

            7: & lt;

        function
        convert_mysql_timestamp
        at
        0x7fecdb3d7bf8 & gt;,
        8: & lt;

        class &  # 39;int&#39;&gt;,
            9: & lt;

            class &  # 39;int&#39;&gt;,

                10: & lt;

            function
            convert_date
            at
            0x7fecdb3d7b70 & gt;,
            11: & lt;
            function
            typecast_time
            at
            0x7fecdd779bf8 & gt;,
            12: & lt;
            function
            convert_datetime
            at
            0x7fecdb3d79d8 & gt;,
            13: & lt;

            class &  # 39;int&#39;&gt;,
                15: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                16: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                246: & lt;
                function
                typecast_decimal
                at
                0x7fecdd779d08 & gt;,
                248: & lt;
                function
                convert_set
                at
                0x7fecdb3d7c80 & gt;,
                249: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                250: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                251: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                252: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                253: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                254: & lt;
                function
                through
                at
                0x7fecdb3d7d08 & gt;,
                & lt;

                class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                    & lt;

                    class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                        & lt;

                    class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                        & lt;

                    class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                        & lt;

                    class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                        & lt;

                    class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                        & lt;

                    class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                        & lt;

                    class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                        & lt;

                    class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                        & lt;

                    class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                        & lt;

                    class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                        & lt;

                    class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                        & lt;

                    class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

            &  # 39;db&#39;: &#39;main&#39;,
            &  # 39;host&#39;: &#39;127.0.0.1&#39;,
            &  # 39;passwd&#39;: &#39;123456&#39;,
            &  # 39;port&#39;: 3306,
            &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
            < / tr >

            < tr >
            < td > self < / td >
            < td

            class ="code" > < pre > & lt;django.db.backends.mysql.base.DatabaseWrapper object at 0x7fecd94dfc18 & gt; < / pre > < / td >

            < / tr >

            < / tbody >
            < / table >

            < / li >

            < li

            class ="frame user" >

            < code > / usr / local / anaconda3 / lib / python3
            .6 / site - packages / pymysql / __init__.py < / code > in < code > Connect < / code >

            < div

            class ="context" id="c140655233622600" >

            < ol
            start = "87"

            class ="pre-context" id="pre140655233622600" >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >

            def Connect(*args, **kwargs):
                <

                / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > & quot; & quot; & quot; < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > Connect
            to
            the
            database;
            see
            connections.Connection.__init__()
            for < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > more
            information. < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > & quot; & quot; & quot; < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
            from .connections import Connection < / pre > < / li >

            < / ol >

            < ol
            start = "94"

            class ="context-line" >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
            return Connection(*args,
                              **kwargs) < / pre > < span > ... < / span > < / li > < / ol >

            < ol
            start = '95'

            class ="post-context" id="post140655233622600" >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
            from . import connections as _orig_conn < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
            if _orig_conn.Connection.__init__.__doc__ is not None: < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > Connect.__doc__ = _orig_conn.Connection.__init__.__doc__ < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre >
            del _orig_conn < / pre > < / li >

            < li
            onclick = "toggle('pre140655233622600', 'post140655233622600')" > < pre > < / pre > < / li >

            < / ol >

            < / div >

            < div

            class ="commands" >

            < a
            href = "#"
            onclick = "return varToggle(this, '140655233622600')" > < span > &  # x25b6;</span> Local vars</a>

            < / div >
            < table

            class ="vars" id="v140655233622600" >

            < thead >
            < tr >
            < th > Variable < / th >
            < th > Value < / th >
            < / tr >
            < / thead >
            < tbody >

            < tr >
            < td > Connection < / td >
            < td

            class ="code" > < pre > & lt; class &  # 39;pymysql.connections.Connection&#39;&gt;</pre></td>

            < / tr >

            < tr >
            < td > args < / td >
            < td

            class ="code" > < pre > () < / pre > < / td >

            < / tr >

            < tr >
            < td > kwargs < / td >
            < td

            class ="code" > < pre > {&  # 39;charset&#39;: &#39;utf8&#39;,
            &  # 39;client_flag&#39;: 2,
            &  # 39;conv&#39;: {0: &lt;function typecast_decimal at 0x7fecdd779d08&gt;,
            1: &

            lt;

            class &  # 39;int&#39;&gt;,
                2: & lt;

                class &  # 39;int&#39;&gt;,
                    3: & lt;

                    class &  # 39;int&#39;&gt;,

                        4: & lt;

                    class &  # 39;float&#39;&gt;,

                        5: & lt;

                    class &  # 39;float&#39;&gt;,

                        7: & lt;

                    function
                    convert_mysql_timestamp
                    at
                    0x7fecdb3d7bf8 & gt;,
                    8: & lt;

                    class &  # 39;int&#39;&gt;,
                        9: & lt;

                        class &  # 39;int&#39;&gt;,

                            10: & lt;

                        function
                        convert_date
                        at
                        0x7fecdb3d7b70 & gt;,
                        11: & lt;
                        function
                        typecast_time
                        at
                        0x7fecdd779bf8 & gt;,
                        12: & lt;
                        function
                        convert_datetime
                        at
                        0x7fecdb3d79d8 & gt;,
                        13: & lt;

                        class &  # 39;int&#39;&gt;,
                            15: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            16: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            246: & lt;
                            function
                            typecast_decimal
                            at
                            0x7fecdd779d08 & gt;,
                            248: & lt;
                            function
                            convert_set
                            at
                            0x7fecdb3d7c80 & gt;,
                            249: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            250: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            251: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            252: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            253: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            254: & lt;
                            function
                            through
                            at
                            0x7fecdb3d7d08 & gt;,
                            & lt;

                            class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,
                                & lt;

                                class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                                    & lt;

                                class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                                    & lt;

                                class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                                    & lt;

                                class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                                    & lt;

                                class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                                    & lt;

                                class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                                    & lt;

                                class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                                    & lt;

                                class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                                    & lt;

                                class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                                    & lt;

                                class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                                    & lt;

                                class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                                    & lt;

                                class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                                    & lt;

                                class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;},

                        &  # 39;db&#39;: &#39;main&#39;,
                        &  # 39;host&#39;: &#39;127.0.0.1&#39;,
                        &  # 39;passwd&#39;: &#39;123456&#39;,
                        &  # 39;port&#39;: 3306,
                        &  # 39;user&#39;: &#39;besttest&#39;}</pre></td>
                        < / tr >

                        < / tbody >
                        < / table >

                        < / li >

                        < li

                        class ="frame user" >

                        < code > / usr / local / anaconda3 / lib / python3
                        .6 / site - packages / pymysql / connections.py < / code > in < code > __init__ < / code >

                        < div

                        class ="context" id="c140655233624456" >

                        < ol
                        start = "318"

                        class ="pre-context" id="pre140655233624456" >

                        < li
                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                        if program_name: < / pre > < / li >

                        < li
                        onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                        self._connect_attrs[ & quot;
                        program_name & quot;] = program_name < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                    if defer_connect: < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > self._sock = None < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > else: < / pre > < / li >

                    < / ol >

                    < ol
                    start = "325"

                    class ="context-line" >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                    self.connect() < / pre > < span > ... < / span > < / li > < / ol >

                    < ol
                    start = '326'

                    class ="post-context" id="post140655233624456" >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >

                    def _create_ssl_ctx(self, sslp):
                        <

                        / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                    if isinstance(sslp,
                                  ssl.SSLContext): < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre >
                    return sslp < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > ca = sslp.get( &  # 39;ca&#39;)</pre></li>

                                                                                                   < li
                    onclick = "toggle('pre140655233624456', 'post140655233624456')" > < pre > capath = sslp.get( &  # 39;capath&#39;)</pre></li>

                                                                                                       < / ol >

                                                                                                           < / div >

                                                                                                               < div

                    class ="commands" >

                    < a
                    href = "#"
                    onclick = "return varToggle(this, '140655233624456')" > < span > &  # x25b6;</span> Local vars</a>

                    < / div >
                    < table

                    class ="vars" id="v140655233624456" >

                    < thead >
                    < tr >
                    < th > Variable < / th >
                    < th > Value < / th >
                    < / tr >
                    < / thead >
                    < tbody >

                    < tr >
                    < td > auth_plugin_map < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > autocommit < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > binary_prefix < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > bind_address < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > charset < / td >
                    < td

                    class ="code" > < pre > &  # 39;utf8&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > client_flag < / td >
                    < td

                    class ="code" > < pre > 3842575 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > compress < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > connect_timeout < / td >
                    < td

                    class ="code" > < pre > 10 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > conv < / td >
                    < td

                    class ="code" > < pre > {0: &

                    lt;
                    function
                    typecast_decimal
                    at
                    0x7fecdd779d08 & gt;,
                    1: & lt;

                    class &  # 39;int&#39;&gt;,
                        2: & lt;

                        class &  # 39;int&#39;&gt;,

                    3: & lt;

                    class &  # 39;int&#39;&gt;,

                        4: & lt;

                    class &  # 39;float&#39;&gt;,

                        5: & lt;

                    class &  # 39;float&#39;&gt;,

                        7: & lt;

                    function
                    convert_mysql_timestamp
                    at
                    0x7fecdb3d7bf8 & gt;,
                    8: & lt;

                    class &  # 39;int&#39;&gt;,

                        9: & lt;

                    class &  # 39;int&#39;&gt;,

                        10: & lt;

                    function
                    convert_date
                    at
                    0x7fecdb3d7b70 & gt;,
                    11: & lt;
                    function
                    typecast_time
                    at
                    0x7fecdd779bf8 & gt;,
                    12: & lt;
                    function
                    convert_datetime
                    at
                    0x7fecdb3d79d8 & gt;,
                    13: & lt;

                    class &  # 39;int&#39;&gt;,

                        15: & lt;

                    function
                    through
                    at
                    0x7fecdb3d7d08 & gt;,
                    16: & lt;
                    function
                    through
                    at
                    0x7fecdb3d7d08 & gt;,
                    246: & lt;
                    function
                    typecast_decimal
                    at
                    0x7fecdd779d08 & gt;,
                    248: & lt;
                    function
                    convert_set
                    at
                    0x7fecdb3d7c80 & gt;,
                    249: & lt;
                    function
                    through
                    at
                    0x7fecdb3d7d08 & gt;,
                    250: & lt;
                    function
                    through
                    at
                    0x7fecdb3d7d08 & gt;,
                    251: & lt;
                    function
                    through
                    at
                    0x7fecdb3d7d08 & gt;,
                    252: & lt;
                    function
                    through
                    at
                    0x7fecdb3d7d08 & gt;,
                    253: & lt;
                    function
                    through
                    at
                    0x7fecdb3d7d08 & gt;,
                    254: & lt;
                    function
                    through
                    at
                    0x7fecdb3d7d08 & gt;,
                    & lt;

                    class &  # 39;decimal.Decimal&#39;&gt;: &lt;function escape_object at 0x7fecdb3d71e0&gt;,

                        & lt;

                    class &  # 39;datetime.timedelta&#39;&gt;: &lt;function escape_timedelta at 0x7fecdb3d76a8&gt;,

                        & lt;

                    class &  # 39;datetime.datetime&#39;&gt;: &lt;function adapt_datetime_warn_on_aware_datetime at 0x7fecdb3ad598&gt;,

                        & lt;

                    class &  # 39;datetime.time&#39;&gt;: &lt;function escape_time at 0x7fecdb3d7730&gt;,

                        & lt;

                    class &  # 39;datetime.date&#39;&gt;: &lt;function escape_date at 0x7fecdb3d7840&gt;,

                        & lt;

                    class &  # 39;str&#39;&gt;: &lt;function escape_unicode at 0x7fecdb3d7510&gt;,

                        & lt;

                    class &  # 39;tuple&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;frozenset&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;set&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;NoneType&#39;&gt;: &lt;function escape_None at 0x7fecdb3d7620&gt;,

                        & lt;

                    class &  # 39;dict&#39;&gt;: &lt;function escape_dict at 0x7fecdb3c5f28&gt;,

                        & lt;

                    class &  # 39;int&#39;&gt;: &lt;function escape_int at 0x7fecdb3d7268&gt;,

                        & lt;

                    class &  # 39;list&#39;&gt;: &lt;function escape_sequence at 0x7fecdb3d7048&gt;,

                        & lt;

                    class &  # 39;float&#39;&gt;: &lt;function escape_float at 0x7fecdb3d72f0&gt;,

                        & lt;

                    class &  # 39;bytes&#39;&gt;: &lt;function escape_bytes at 0x7fecdb3d7488&gt;,

                        & lt;

                    class &  # 39;bool&#39;&gt;: &lt;function escape_bool at 0x7fecdb3d7158&gt;,

                        & lt;

                    class &  # 39;time.struct_time&#39;&gt;: &lt;function escape_struct_time at 0x7fecdb3d78c8&gt;}</pre></td>

                        < / tr >

                    < tr >
                    < td > cursorclass < / td >
                    < td

                    class ="code" > < pre > & lt; class &  # 39;pymysql.cursors.Cursor&#39;&gt;</pre></td>

                    < / tr >

                    < tr >
                    < td > database < / td >
                    < td

                    class ="code" > < pre > &  # 39;main&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > db < / td >
                    < td

                    class ="code" > < pre > &  # 39;main&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > defer_connect < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > host < / td >
                    < td

                    class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > init_command < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > local_infile < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > max_allowed_packet < / td >
                    < td

                    class ="code" > < pre > 16777216 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > named_pipe < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > passwd < / td >
                    < td

                    class ="code" > < pre > &  # 39;123456&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > password < / td >
                    < td

                    class ="code" > < pre > &  # 39;123456&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > port < / td >
                    < td

                    class ="code" > < pre > 3306 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > program_name < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > read_default_file < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > read_default_group < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > read_timeout < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > self < / td >
                    < td

                    class ="code" > < pre > & lt;pymysql.connections.Connection object at 0x7fecd8586828 & gt; < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > server_public_key < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > sql_mode < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > ssl < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > unix_socket < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > use_unicode < / td >
                    < td

                    class ="code" > < pre > True < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > user < / td >
                    < td

                    class ="code" > < pre > &  # 39;besttest&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > write_timeout < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < / tbody >
                    < / table >

                    < / li >

                    < li

                    class ="frame user" >

                    < code > / usr / local / anaconda3 / lib / python3
                    .6 / site - packages / pymysql / connections.py < / code > in < code > connect < / code >

                    < div

                    class ="context" id="c140655233623432" >

                    < ol
                    start = "623"

                    class ="pre-context" id="pre140655233623432" >

                    < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > 2003, < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > & quot;
                    Can &  # 39;t connect to MySQL server on %r (%s)&quot; % (</pre></li>

                    < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > self.host, e)) < / pre > < / li >

                                                                                                                           < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # Keep original exception and traceback to investigate error.</pre></li>

                              < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > exc.original_exception = e < / pre > < / li >

                                                                                                                                       < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > exc.traceback = traceback.format_exc() < / pre > < / li >

                                                                                                                                                   < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
                    if DEBUG: print(
                        exc.traceback) < / pre > < / li >

                                                     < / ol >

                                                         < ol
                    start = "630"

                    class ="context-line" >

                    < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
                    raise exc < / pre > < span > ... < / span > < / li > < / ol >

                    < ol
                    start = '631'

                    class ="post-context" id="post140655233623432" >

                    < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # If e is neither DatabaseError or IOError, It&#39;s a bug.</pre></li>

                    < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # But raising AssertionError hides original error.</pre></li>

                    < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >  # So just reraise it.</pre></li>

                    < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre >
                    raise < / pre > < / li >

                    < li
                    onclick = "toggle('pre140655233623432', 'post140655233623432')" > < pre > < / pre > < / li >

                    < / ol >

                    < / div >

                    < div

                    class ="commands" >

                    < a
                    href = "#"
                    onclick = "return varToggle(this, '140655233623432')" > < span > &  # x25b6;</span> Local vars</a>

                    < / div >
                    < table

                    class ="vars" id="v140655233623432" >

                    < thead >
                    < tr >
                    < th > Variable < / th >
                    < th > Value < / th >
                    < / tr >
                    < / thead >
                    < tbody >

                    < tr >
                    < td > exc < / td >
                    < td

                    class ="code" > < pre > OperationalError(2003, & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)</pre></td>
                    < / tr >

                    < tr >
                    < td > kwargs < / td >
                    < td

                    class ="code" > < pre > {} < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > self < / td >
                    < td

                    class ="code" > < pre > & lt;pymysql.connections.Connection object at 0x7fecd8586828 & gt; < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > sock < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < / tbody >
                    < / table >

                    < / li >

                    < / ul >
                    < / div >

                    < form
                    action = "http://dpaste.com/"
                    name = "pasteform"
                    id = "pasteform"
                    method = "post" >

                    < div
                    id = "pastebinTraceback"

                    class ="pastebin" >

                    < input
                    type = "hidden"
                    name = "language"
                    value = "PythonConsole" >
                    < input
                    type = "hidden"
                    name = "title"
                    value = "OperationalError at /api/user/add_stu" >
                    < input
                    type = "hidden"
                    name = "source"
                    value = "Django Dpaste Agent" >
                    < input
                    type = "hidden"
                    name = "poster"
                    value = "Django" >
                    < textarea
                    name = "content"
                    id = "traceback_area"
                    cols = "140"
                    rows = "25" >
                    Environment:

                    Request
                    Method: POST
                    Request
                    URL: http: // api.nnzhp.cn: 80 / api / user / add_stu

                    Django
                    Version: 1.10
                    Python
                    Version: 3.6
                    .4
                    Installed
                    Applications:
                    [ &  # 39;django.contrib.admin&#39;,
                    &  # 39;django.contrib.auth&#39;,
                    &  # 39;django.contrib.contenttypes&#39;,
                    &  # 39;django.contrib.sessions&#39;,
                    &  # 39;django.contrib.messages&#39;,
                    &  # 39;django.contrib.staticfiles&#39;,
                    &  # 39;app.apps.AppConfig&#39;]
                    Installed
                    Middleware:
                    [ &  # 39;django.middleware.security.SecurityMiddleware&#39;,
                    &  # 39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
                    &  # 39;django.middleware.common.CommonMiddleware&#39;,
                    &  # 39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
                    &  # 39;django.contrib.auth.middleware.SessionAuthenticationMiddleware&#39;,
                    &  # 39;django.contrib.messages.middleware.MessageMiddleware&#39;,
                    &  # 39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]

                    Traceback:

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/connections.py" in connect
                    583. ** kwargs)

                    File
                    "/usr/local/anaconda3/lib/python3.6/socket.py" in create_connection
                    724.
                    raise err

                    File
                    "/usr/local/anaconda3/lib/python3.6/socket.py" in create_connection
                    713.
                    sock.connect(sa)

                    During
                    handling
                    of
                    the
                    above
                    exception([Errno 111]
                    Connection
                    refused), another
                    exception
                    occurred:

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in ensure_connection
                    199.
                    self.connect()

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in connect
                    171.
                    self.connection = self.get_new_connection(
                        conn_params)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/mysql/base.py" in get_new_connection
                    265.
                    conn = Database.connect(**conn_params)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/__init__.py" in Connect
                    94.
                    return Connection(*args, **kwargs)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/connections.py" in __init__
                    325.
                    self.connect()

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/connections.py" in connect
                    630.
                    raise exc

                    The
                    above
                    exception((2003,
                               & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)) was the direct cause of the following exception:

                               File "/usr/local/anaconda3/lib/python3.6/site-packages/django/core/handlers/exception.py" in inner
                               39.             response = get_response(request)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/core/handlers/base.py" in _legacy_get_response
                    249.
                    response = self._get_response(request)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
                    187.
                    response = self.process_exception_by_middleware(
                        e, request)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
                    185.
                    response = wrapped_callback(request,
                                                *callback_args,
                                                **callback_kwargs)

                    File
                    "/usr/local/choujiang/app/tools.py" in war
                    47.
                    return func(*args, **kwargs)

                    File
                    "/usr/local/choujiang/app/views.py" in add_stu
                    148.
                    if obj:

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/query.py" in __bool__
                    260.
                    self._fetch_all()

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/query.py" in _fetch_all
                    1085.
                    self._result_cache = list(self.iterator())

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/query.py" in __iter__
                    54.
                    results = compiler.execute_sql()

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/sql/compiler.py" in execute_sql
                    824.
                    sql, params = self.as_sql()

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/sql/compiler.py" in as_sql
                    376.
                    where, w_params = self.compile(
                        self.where) if self.where is not None else (
                        & quot; & quot;, [])

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/sql/compiler.py" in compile
                    353.
                    sql, params = node.as_sql(self, self.connection)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/sql/where.py" in as_sql
                    79.
                    sql, params = compiler.compile(child)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/sql/compiler.py" in compile
                    353.
                    sql, params = node.as_sql(self, self.connection)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/lookups.py" in as_sql
                    155.
                    lhs_sql, params = self.process_lhs(compiler,
                                                       connection)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/lookups.py" in process_lhs
                    148.
                    db_type = self.lhs.output_field.db_type(
                        connection=connection)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/models/fields/__init__.py" in db_type
                    629.
                    return connection.data_types[
                               self.get_internal_type()] % data

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/utils/functional.py" in __get__
                    35.
                    res = instance.__dict__[self.name] = self.func(
                        instance)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/mysql/base.py" in data_types
                    185.
                    if self.features.supports_microsecond_precision:

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/utils/functional.py" in __get__
                    35.
                    res = instance.__dict__[self.name] = self.func(
                        instance)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/mysql/features.py" in supports_microsecond_precision
                    54.
                    return self.connection.mysql_version & gt;= (5,
                                                                 6,
                                                                 4) and Database.version_info & gt;= (
                        1, 2, 5)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/utils/functional.py" in __get__
                    35.
                    res = instance.__dict__[self.name] = self.func(
                        instance)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/mysql/base.py" in mysql_version
                    369.
                    with self.temporary_connection() as cursor:

                    File
                    "/usr/local/anaconda3/lib/python3.6/contextlib.py" in __enter__
                    81.
                    return next(self.gen)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in temporary_connection
                    564.
                    cursor = self.cursor()

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in cursor
                    231.
                    cursor = self.make_debug_cursor(self._cursor())

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in _cursor
                    204.
                    self.ensure_connection()

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in ensure_connection
                    199.
                    self.connect()

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/utils.py" in __exit__
                    94.
                    six.reraise(dj_exc_type, dj_exc_value,
                                traceback)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/utils/six.py" in reraise
                    685.
                    raise value.with_traceback(tb)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in ensure_connection
                    199.
                    self.connect()

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/base/base.py" in connect
                    171.
                    self.connection = self.get_new_connection(
                        conn_params)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/django/db/backends/mysql/base.py" in get_new_connection
                    265.
                    conn = Database.connect(**conn_params)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/__init__.py" in Connect
                    94.
                    return Connection(*args, **kwargs)

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/connections.py" in __init__
                    325.
                    self.connect()

                    File
                    "/usr/local/anaconda3/lib/python3.6/site-packages/pymysql/connections.py" in connect
                    630.
                    raise exc

                    Exception
                    Type: OperationalError
                    at / api / user / add_stu
                    Exception
                    Value: (2003,
                            & quot;Can &  # 39;t connect to MySQL server on &#39;127.0.0.1&#39; ([Errno 111] Connection refused)&quot;)
                            < / textarea >
                            < br > < br >
                            < input type="submit" value="Share this traceback on a public website" >
                            < / div >
                            < / form >
                            < / div >

                            < div id="requestinfo" >
                            < h2 > Request information < / h2 >

                            < h3 id="user-info" > USER < / h3 >
                            < p > AnonymousUser < / p >

                            < h3 id="get-info" > GET < / h3 >

                            < p > No GET data < / p >

                            < h3 id="post-info" > POST < / h3 >

                            < p > No POST data < / p >

                            < h3 id="files-info" > FILES < / h3 >

                            < p > No FILES data < / p >

                            < h3 id="cookie-info" > COOKIES < / h3 >

                            < p > No cookie data < / p >

                            < h3 id="meta-info" > META < / h3 >
                            < table

                    class ="req" >

                    < thead >
                    < tr >
                    < th > Variable < / th >
                    < th > Value < / th >
                    < / tr >
                    < / thead >
                    < tbody >

                    < tr >
                    < td > CONTENT_LENGTH < / td >
                    < td

                    class ="code" > < pre > &  # 39;73&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > CONTENT_TYPE < / td >
                    < td

                    class ="code" > < pre > &  # 39;text/plain&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DJANGO_SETTINGS_MODULE < / td >
                    < td

                    class ="code" > < pre > &  # 39;choujiang.settings&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > GATEWAY_INTERFACE < / td >
                    < td

                    class ="code" > < pre > &  # 39;CGI/1.1&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > G_BROKEN_FILENAMES < / td >
                    < td

                    class ="code" > < pre > &  # 39;1&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HISTCONTROL < / td >
                    < td

                    class ="code" > < pre > &  # 39;ignoredups&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HISTSIZE < / td >
                    < td

                    class ="code" > < pre > &  # 39;3000&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HISTTIMEFORMAT < / td >
                    < td

                    class ="code" > < pre > &  # 39;%F %T &#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HOME < / td >
                    < td

                    class ="code" > < pre > &  # 39;/root&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HOSTNAME < / td >
                    < td

                    class ="code" > < pre > &  # 39;VM_152_28_centos&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HTTP_ACCEPT < / td >
                    < td

                    class ="code" > < pre > &  # 39;*/*&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HTTP_ACCEPT_ENCODING < / td >
                    < td

                    class ="code" > < pre > &  # 39;gzip, deflate&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HTTP_CONNECTION < / td >
                    < td

                    class ="code" > < pre > &  # 39;close&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HTTP_HOST < / td >
                    < td

                    class ="code" > < pre > &  # 39;api.nnzhp.cn:80&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HTTP_USER_AGENT < / td >
                    < td

                    class ="code" > < pre > &  # 39;python-requests/2.21.0&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HTTP_VIA < / td >
                    < td

                    class ="code" > < pre > &  # 39;nginx&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HTTP_X_FORWARDED_FOR < / td >
                    < td

                    class ="code" > < pre > &  # 39;117.75.179.13&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > HTTP_X_REAL_IP < / td >
                    < td

                    class ="code" > < pre > &  # 39;117.75.179.13&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > LANG < / td >
                    < td

                    class ="code" > < pre > &  # 39;zh_CN.UTF-8&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > LESSOPEN < / td >
                    < td

                    class ="code" > < pre > &  # 39;||/usr/bin/lesspipe.sh %s&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > LOGNAME < / td >
                    < td

                    class ="code" > < pre > &  # 39;root&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > LS_COLORS < / td >
                    < td

                    class ="code" > < pre > &  # 39;rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lz=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.bz=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.rar=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > MAIL < / td >
                    < td

                    class ="code" > < pre > &  # 39;/var/spool/mail/root&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > PATH < / td >
                    < td

                    class ="code" > < pre > &  # 39;/usr/local/anaconda3/bin:/usr/local/anaconda3/bin:/usr/local/anaconda3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/opt/lampp/bin:/usr/local/jdk1.8.0_131/bin:/root/bin:/opt/lampp/bin:/usr/local/jdk1.8.0_131/bin:/usr/local/node/bin&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > PATH_INFO < / td >
                    < td

                    class ="code" > < pre > &  # 39;/api/user/add_stu&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > PROMPT_COMMAND < / td >
                    < td

                    class ="code" > < pre > ( &  # 39;history -a; printf &quot;\\033]0;%s@%s:%s\\007&quot; &quot;${USER}&quot; &quot;${HOSTNAME%%.*}&quot; &#39;
                    &  # 39;&quot;${PWD/#$HOME/~}&quot;&#39;)</pre></td>
                    < / tr >

                    < tr >
                    < td > PWD < / td >
                    < td

                    class ="code" > < pre > &  # 39;/usr/local/choujiang/bin&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > QUERY_STRING < / td >
                    < td

                    class ="code" > < pre > &  # 39;&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > REMOTE_ADDR < / td >
                    < td

                    class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > REMOTE_HOST < / td >
                    < td

                    class ="code" > < pre > &  # 39;&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > REQUEST_METHOD < / td >
                    < td

                    class ="code" > < pre > &  # 39;POST&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > RUN_MAIN < / td >
                    < td

                    class ="code" > < pre > &  # 39;true&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SCRIPT_NAME < / td >
                    < td

                    class ="code" > < pre > &  # 39;&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SERVER_NAME < / td >
                    < td

                    class ="code" > < pre > &  # 39;localhost.localdomain&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SERVER_PORT < / td >
                    < td

                    class ="code" > < pre > &  # 39;8000&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SERVER_PROTOCOL < / td >
                    < td

                    class ="code" > < pre > &  # 39;HTTP/1.0&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SERVER_SOFTWARE < / td >
                    < td

                    class ="code" > < pre > &  # 39;WSGIServer/0.2&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SHELL < / td >
                    < td

                    class ="code" > < pre > &  # 39;/bin/bash&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SHLVL < / td >
                    < td

                    class ="code" > < pre > &  # 39;2&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SSH_CLIENT < / td >
                    < td

                    class ="code" > < pre > &  # 39;111.199.93.183 64257 22333&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SSH_CONNECTION < / td >
                    < td

                    class ="code" > < pre > &  # 39;111.199.93.183 64257 10.139.152.28 22333&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SSH_TTY < / td >
                    < td

                    class ="code" > < pre > &  # 39;/dev/pts/1&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > TERM < / td >
                    < td

                    class ="code" > < pre > &  # 39;xterm-256color&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > TZ < / td >
                    < td

                    class ="code" > < pre > &  # 39;Asia/Shanghai&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > USER < / td >
                    < td

                    class ="code" > < pre > &  # 39;root&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > VIRTUALENVWRAPPER_HOOK_DIR < / td >
                    < td

                    class ="code" > < pre > &  # 39;/root/.virtualenvs&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > VIRTUALENVWRAPPER_PROJECT_FILENAME < / td >
                    < td

                    class ="code" > < pre > &  # 39;.project&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > VIRTUALENVWRAPPER_SCRIPT < / td >
                    < td

                    class ="code" > < pre > &  # 39;/usr/local/anaconda3/bin/virtualenvwrapper.sh&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > VIRTUALENVWRAPPER_WORKON_CD < / td >
                    < td

                    class ="code" > < pre > &  # 39;1&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > WORKON_HOME < / td >
                    < td

                    class ="code" > < pre > &  # 39;/root/.virtualenvs&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > _ < / td >
                    < td

                    class ="code" > < pre > &  # 39;/usr/bin/nohup&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > wsgi.errors < / td >
                    < td

                    class ="code" > < pre > & lt;_io.TextIOWrapper name= &  # 39;&lt;stderr&gt;&#39; mode=&#39;w&#39; encoding=&#39;UTF-8&#39;&gt;</pre></td>

                    < / tr >

                    < tr >
                    < td > wsgi.file_wrapper < / td >
                    < td

                    class ="code" > < pre > &  # 39;&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > wsgi.input < / td >
                    < td

                    class ="code" > < pre > & lt;_io.BufferedReader name=6 & gt; < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > wsgi.multiprocess < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > wsgi.multithread < / td >
                    < td

                    class ="code" > < pre > True < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > wsgi.run_once < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > wsgi.url_scheme < / td >
                    < td

                    class ="code" > < pre > &  # 39;http&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > wsgi.version < / td >
                    < td

                    class ="code" > < pre > (1, 0) < / pre > < / td >

                    < / tr >

                    < / tbody >
                    < / table >

                    < h3
                    id = "settings-info" > Settings < / h3 >
                    < h4 > Using
                    settings
                    module < code > choujiang.settings < / code > < / h4 >
                    < table

                    class ="req" >

                    < thead >
                    < tr >
                    < th > Setting < / th >
                    < th > Value < / th >
                    < / tr >
                    < / thead >
                    < tbody >

                    < tr >
                    < td > ABSOLUTE_URL_OVERRIDES < / td >
                    < td

                    class ="code" > < pre > {} < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > ADMINS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > ALLOWED_HOSTS < / td >
                    < td

                    class ="code" > < pre >[&  # 39;*&#39;]</pre></td>
                    < / tr >

                    < tr >
                    < td > APPEND_SLASH < / td >
                    < td

                    class ="code" > < pre > True < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > AUTHENTICATION_BACKENDS < / td >
                    < td

                    class ="code" > < pre >[&  # 39;django.contrib.auth.backends.ModelBackend&#39;]</pre></td>
                    < / tr >

                    < tr >
                    < td > AUTH_PASSWORD_VALIDATORS < / td >
                    < td

                    class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > AUTH_USER_MODEL < / td >
                    < td

                    class ="code" > < pre > &  # 39;auth.User&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > BASE_DIR < / td >
                    < td

                    class ="code" > < pre > &  # 39;/usr/local/choujiang&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > CACHES < / td >
                    < td

                    class ="code" > < pre > {&  # 39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>
                    < / tr >

                    < tr >
                    < td > CACHE_MIDDLEWARE_ALIAS < / td >
                    < td

                    class ="code" > < pre > &  # 39;default&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > CACHE_MIDDLEWARE_KEY_PREFIX < / td >
                    < td

                    class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > CACHE_MIDDLEWARE_SECONDS < / td >
                    < td

                    class ="code" > < pre > 600 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > CSRF_COOKIE_AGE < / td >
                    < td

                    class ="code" > < pre > 31449600 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > CSRF_COOKIE_DOMAIN < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > CSRF_COOKIE_HTTPONLY < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > CSRF_COOKIE_NAME < / td >
                    < td

                    class ="code" > < pre > &  # 39;csrftoken&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > CSRF_COOKIE_PATH < / td >
                    < td

                    class ="code" > < pre > &  # 39;/&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > CSRF_COOKIE_SECURE < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > CSRF_FAILURE_VIEW < / td >
                    < td

                    class ="code" > < pre > &  # 39;django.views.csrf.csrf_failure&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > CSRF_HEADER_NAME < / td >
                    < td

                    class ="code" > < pre > &  # 39;HTTP_X_CSRFTOKEN&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > CSRF_TRUSTED_ORIGINS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > DATABASES < / td >
                    < td

                    class ="code" > < pre > {&  # 39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,
                    &  # 39;AUTOCOMMIT&#39;: True,
                    &  # 39;CONN_MAX_AGE&#39;: 0,
                    &  # 39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;,
                    &  # 39;HOST&#39;: &#39;127.0.0.1&#39;,
                    &  # 39;NAME&#39;: &#39;main&#39;,
                    &  # 39;OPTIONS&#39;: {},
                    &  # 39;PASSWORD&#39;: &#39;********************&#39;,
                    &  # 39;PORT&#39;: &#39;3306&#39;,
                    &  # 39;TEST&#39;: {&#39;CHARSET&#39;: None,
                    &  # 39;COLLATION&#39;: None,
                    &  # 39;MIRROR&#39;: None,
                    &  # 39;NAME&#39;: None},
                    &  # 39;TIME_ZONE&#39;: None,
                    &  # 39;USER&#39;: &#39;besttest&#39;}}</pre></td>
                    < / tr >

                    < tr >
                    < td > DATABASE_ROUTERS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > DATA_UPLOAD_MAX_MEMORY_SIZE < / td >
                    < td

                    class ="code" > < pre > 2621440 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > DATA_UPLOAD_MAX_NUMBER_FIELDS < / td >
                    < td

                    class ="code" > < pre > 1000 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > DATETIME_FORMAT < / td >
                    < td

                    class ="code" > < pre > &  # 39;N j, Y, P&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DATETIME_INPUT_FORMATS < / td >
                    < td

                    class ="code" > < pre >[&  # 39;%Y-%m-%d %H:%M:%S&#39;,
                    &  # 39;%Y-%m-%d %H:%M:%S.%f&#39;,
                    &  # 39;%Y-%m-%d %H:%M&#39;,
                    &  # 39;%Y-%m-%d&#39;,
                    &  # 39;%m/%d/%Y %H:%M:%S&#39;,
                    &  # 39;%m/%d/%Y %H:%M:%S.%f&#39;,
                    &  # 39;%m/%d/%Y %H:%M&#39;,
                    &  # 39;%m/%d/%Y&#39;,
                    &  # 39;%m/%d/%y %H:%M:%S&#39;,
                    &  # 39;%m/%d/%y %H:%M:%S.%f&#39;,
                    &  # 39;%m/%d/%y %H:%M&#39;,
                    &  # 39;%m/%d/%y&#39;]</pre></td>
                    < / tr >

                    < tr >
                    < td > DATE_FORMAT < / td >
                    < td

                    class ="code" > < pre > &  # 39;N j, Y&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DATE_INPUT_FORMATS < / td >
                    < td

                    class ="code" > < pre >[&  # 39;%Y-%m-%d&#39;,
                    &  # 39;%m/%d/%Y&#39;,
                    &  # 39;%m/%d/%y&#39;,
                    &  # 39;%b %d %Y&#39;,
                    &  # 39;%b %d, %Y&#39;,
                    &  # 39;%d %b %Y&#39;,
                    &  # 39;%d %b, %Y&#39;,
                    &  # 39;%B %d %Y&#39;,
                    &  # 39;%B %d, %Y&#39;,
                    &  # 39;%d %B %Y&#39;,
                    &  # 39;%d %B, %Y&#39;]</pre></td>
                    < / tr >

                    < tr >
                    < td > DEBUG < / td >
                    < td

                    class ="code" > < pre > True < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > DEBUG_PROPAGATE_EXCEPTIONS < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > DECIMAL_SEPARATOR < / td >
                    < td

                    class ="code" > < pre > &  # 39;.&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DEFAULT_CHARSET < / td >
                    < td

                    class ="code" > < pre > &  # 39;utf-8&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DEFAULT_CONTENT_TYPE < / td >
                    < td

                    class ="code" > < pre > &  # 39;text/html&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DEFAULT_EXCEPTION_REPORTER_FILTER < / td >
                    < td

                    class ="code" > < pre > &  # 39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DEFAULT_FILE_STORAGE < / td >
                    < td

                    class ="code" > < pre > &  # 39;django.core.files.storage.FileSystemStorage&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DEFAULT_FROM_EMAIL < / td >
                    < td

                    class ="code" > < pre > &  # 39;webmaster@localhost&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DEFAULT_INDEX_TABLESPACE < / td >
                    < td

                    class ="code" > < pre > &  # 39;&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DEFAULT_TABLESPACE < / td >
                    < td

                    class ="code" > < pre > &  # 39;&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > DISALLOWED_USER_AGENTS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > EMAIL_BACKEND < / td >
                    < td

                    class ="code" > < pre > &  # 39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > EMAIL_HOST < / td >
                    < td

                    class ="code" > < pre > &  # 39;localhost&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > EMAIL_HOST_PASSWORD < / td >
                    < td

                    class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > EMAIL_HOST_USER < / td >
                    < td

                    class ="code" > < pre > &  # 39;&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > EMAIL_PORT < / td >
                    < td

                    class ="code" > < pre > 25 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > EMAIL_SSL_CERTFILE < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > EMAIL_SSL_KEYFILE < / td >
                    < td

                    class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > EMAIL_SUBJECT_PREFIX < / td >
                    < td

                    class ="code" > < pre > &  # 39;[Django] &#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > EMAIL_TIMEOUT < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > EMAIL_USE_SSL < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > EMAIL_USE_TLS < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > EX_TIME < / td >
                    < td

                    class ="code" > < pre > 60000 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > FILE_CHARSET < / td >
                    < td

                    class ="code" > < pre > &  # 39;utf-8&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > FILE_UPLOAD_DIRECTORY_PERMISSIONS < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > FILE_UPLOAD_HANDLERS < / td >
                    < td

                    class ="code" > < pre >[&  # 39;django.core.files.uploadhandler.MemoryFileUploadHandler&#39;,
                    &  # 39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;]</pre></td>
                    < / tr >

                    < tr >
                    < td > FILE_UPLOAD_MAX_MEMORY_SIZE < / td >
                    < td

                    class ="code" > < pre > 2621440 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > FILE_UPLOAD_PERMISSIONS < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > FILE_UPLOAD_TEMP_DIR < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > FIRST_DAY_OF_WEEK < / td >
                    < td

                    class ="code" > < pre > 0 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > FIXTURE_DIRS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > FORCE_SCRIPT_NAME < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > FORMAT_MODULE_PATH < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > IGNORABLE_404_URLS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > INSTALLED_APPS < / td >
                    < td

                    class ="code" > < pre >[&  # 39;django.contrib.admin&#39;,
                    &  # 39;django.contrib.auth&#39;,
                    &  # 39;django.contrib.contenttypes&#39;,
                    &  # 39;django.contrib.sessions&#39;,
                    &  # 39;django.contrib.messages&#39;,
                    &  # 39;django.contrib.staticfiles&#39;,
                    &  # 39;app.apps.AppConfig&#39;]</pre></td>
                    < / tr >

                    < tr >
                    < td > INTERNAL_IPS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > LANGUAGES < / td >
                    < td

                    class ="code" > < pre >[( &  # 39;af&#39;, &#39;Afrikaans&#39;),
                    ( &  # 39;ar&#39;, &#39;Arabic&#39;),
                    ( &  # 39;ast&#39;, &#39;Asturian&#39;),
                    ( &  # 39;az&#39;, &#39;Azerbaijani&#39;),
                    ( &  # 39;bg&#39;, &#39;Bulgarian&#39;),
                    ( &  # 39;be&#39;, &#39;Belarusian&#39;),
                    ( &  # 39;bn&#39;, &#39;Bengali&#39;),
                    ( &  # 39;br&#39;, &#39;Breton&#39;),
                    ( &  # 39;bs&#39;, &#39;Bosnian&#39;),
                    ( &  # 39;ca&#39;, &#39;Catalan&#39;),
                    ( &  # 39;cs&#39;, &#39;Czech&#39;),
                    ( &  # 39;cy&#39;, &#39;Welsh&#39;),
                    ( &  # 39;da&#39;, &#39;Danish&#39;),
                    ( &  # 39;de&#39;, &#39;German&#39;),
                    ( &  # 39;dsb&#39;, &#39;Lower Sorbian&#39;),
                    ( &  # 39;el&#39;, &#39;Greek&#39;),
                    ( &  # 39;en&#39;, &#39;English&#39;),
                    ( &  # 39;en-au&#39;, &#39;Australian English&#39;),
                    ( &  # 39;en-gb&#39;, &#39;British English&#39;),
                    ( &  # 39;eo&#39;, &#39;Esperanto&#39;),
                    ( &  # 39;es&#39;, &#39;Spanish&#39;),
                    ( &  # 39;es-ar&#39;, &#39;Argentinian Spanish&#39;),
                    ( &  # 39;es-co&#39;, &#39;Colombian Spanish&#39;),
                    ( &  # 39;es-mx&#39;, &#39;Mexican Spanish&#39;),
                    ( &  # 39;es-ni&#39;, &#39;Nicaraguan Spanish&#39;),
                    ( &  # 39;es-ve&#39;, &#39;Venezuelan Spanish&#39;),
                    ( &  # 39;et&#39;, &#39;Estonian&#39;),
                    ( &  # 39;eu&#39;, &#39;Basque&#39;),
                    ( &  # 39;fa&#39;, &#39;Persian&#39;),
                    ( &  # 39;fi&#39;, &#39;Finnish&#39;),
                    ( &  # 39;fr&#39;, &#39;French&#39;),
                    ( &  # 39;fy&#39;, &#39;Frisian&#39;),
                    ( &  # 39;ga&#39;, &#39;Irish&#39;),
                    ( &  # 39;gd&#39;, &#39;Scottish Gaelic&#39;),
                    ( &  # 39;gl&#39;, &#39;Galician&#39;),
                    ( &  # 39;he&#39;, &#39;Hebrew&#39;),
                    ( &  # 39;hi&#39;, &#39;Hindi&#39;),
                    ( &  # 39;hr&#39;, &#39;Croatian&#39;),
                    ( &  # 39;hsb&#39;, &#39;Upper Sorbian&#39;),
                    ( &  # 39;hu&#39;, &#39;Hungarian&#39;),
                    ( &  # 39;ia&#39;, &#39;Interlingua&#39;),
                    ( &  # 39;id&#39;, &#39;Indonesian&#39;),
                    ( &  # 39;io&#39;, &#39;Ido&#39;),
                    ( &  # 39;is&#39;, &#39;Icelandic&#39;),
                    ( &  # 39;it&#39;, &#39;Italian&#39;),
                    ( &  # 39;ja&#39;, &#39;Japanese&#39;),
                    ( &  # 39;ka&#39;, &#39;Georgian&#39;),
                    ( &  # 39;kk&#39;, &#39;Kazakh&#39;),
                    ( &  # 39;km&#39;, &#39;Khmer&#39;),
                    ( &  # 39;kn&#39;, &#39;Kannada&#39;),
                    ( &  # 39;ko&#39;, &#39;Korean&#39;),
                    ( &  # 39;lb&#39;, &#39;Luxembourgish&#39;),
                    ( &  # 39;lt&#39;, &#39;Lithuanian&#39;),
                    ( &  # 39;lv&#39;, &#39;Latvian&#39;),
                    ( &  # 39;mk&#39;, &#39;Macedonian&#39;),
                    ( &  # 39;ml&#39;, &#39;Malayalam&#39;),
                    ( &  # 39;mn&#39;, &#39;Mongolian&#39;),
                    ( &  # 39;mr&#39;, &#39;Marathi&#39;),
                    ( &  # 39;my&#39;, &#39;Burmese&#39;),
                    ( &  # 39;nb&#39;, &#39;Norwegian BokmÃ¥l&#39;),
                    ( &  # 39;ne&#39;, &#39;Nepali&#39;),
                    ( &  # 39;nl&#39;, &#39;Dutch&#39;),
                    ( &  # 39;nn&#39;, &#39;Norwegian Nynorsk&#39;),
                    ( &  # 39;os&#39;, &#39;Ossetic&#39;),
                    ( &  # 39;pa&#39;, &#39;Punjabi&#39;),
                    ( &  # 39;pl&#39;, &#39;Polish&#39;),
                    ( &  # 39;pt&#39;, &#39;Portuguese&#39;),
                    ( &  # 39;pt-br&#39;, &#39;Brazilian Portuguese&#39;),
                    ( &  # 39;ro&#39;, &#39;Romanian&#39;),
                    ( &  # 39;ru&#39;, &#39;Russian&#39;),
                    ( &  # 39;sk&#39;, &#39;Slovak&#39;),
                    ( &  # 39;sl&#39;, &#39;Slovenian&#39;),
                    ( &  # 39;sq&#39;, &#39;Albanian&#39;),
                    ( &  # 39;sr&#39;, &#39;Serbian&#39;),
                    ( &  # 39;sr-latn&#39;, &#39;Serbian Latin&#39;),
                    ( &  # 39;sv&#39;, &#39;Swedish&#39;),
                    ( &  # 39;sw&#39;, &#39;Swahili&#39;),
                    ( &  # 39;ta&#39;, &#39;Tamil&#39;),
                    ( &  # 39;te&#39;, &#39;Telugu&#39;),
                    ( &  # 39;th&#39;, &#39;Thai&#39;),
                    ( &  # 39;tr&#39;, &#39;Turkish&#39;),
                    ( &  # 39;tt&#39;, &#39;Tatar&#39;),
                    ( &  # 39;udm&#39;, &#39;Udmurt&#39;),
                    ( &  # 39;uk&#39;, &#39;Ukrainian&#39;),
                    ( &  # 39;ur&#39;, &#39;Urdu&#39;),
                    ( &  # 39;vi&#39;, &#39;Vietnamese&#39;),
                    ( &  # 39;zh-hans&#39;, &#39;Simplified Chinese&#39;),
                    ( &  # 39;zh-hant&#39;, &#39;Traditional Chinese&#39;)]</pre></td>
                    < / tr >

                    < tr >
                    < td > LANGUAGES_BIDI < / td >
                    < td

                    class ="code" > < pre >[&  # 39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>
                    < / tr >

                    < tr >
                    < td > LANGUAGE_CODE < / td >
                    < td

                    class ="code" > < pre > &  # 39;zh-Hans&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > LANGUAGE_COOKIE_AGE < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > LANGUAGE_COOKIE_DOMAIN < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > LANGUAGE_COOKIE_NAME < / td >
                    < td

                    class ="code" > < pre > &  # 39;django_language&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > LANGUAGE_COOKIE_PATH < / td >
                    < td

                    class ="code" > < pre > &  # 39;/&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > LOCALE_PATHS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > LOGGING < / td >
                    < td

                    class ="code" > < pre > {} < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > LOGGING_CONFIG < / td >
                    < td

                    class ="code" > < pre > &  # 39;logging.config.dictConfig&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > LOGIN_REDIRECT_URL < / td >
                    < td

                    class ="code" > < pre > &  # 39;/accounts/profile/&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > LOGIN_URL < / td >
                    < td

                    class ="code" > < pre > &  # 39;/accounts/login/&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > LOGOUT_REDIRECT_URL < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > MANAGERS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > MEDIA_ROOT < / td >
                    < td

                    class ="code" > < pre > &  # 39;/usr/local/choujiang/static/img&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > MEDIA_URL < / td >
                    < td

                    class ="code" > < pre > &  # 39;/static/img/&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > MESSAGE_STORAGE < / td >
                    < td

                    class ="code" > < pre > &  # 39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > MIDDLEWARE < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > MIDDLEWARE_CLASSES < / td >
                    < td

                    class ="code" > < pre >[&  # 39;django.middleware.security.SecurityMiddleware&#39;,
                    &  # 39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
                    &  # 39;django.middleware.common.CommonMiddleware&#39;,
                    &  # 39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
                    &  # 39;django.contrib.auth.middleware.SessionAuthenticationMiddleware&#39;,
                    &  # 39;django.contrib.messages.middleware.MessageMiddleware&#39;,
                    &  # 39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]</pre></td>
                    < / tr >

                    < tr >
                    < td > MIGRATION_MODULES < / td >
                    < td

                    class ="code" > < pre > {} < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > MONTH_DAY_FORMAT < / td >
                    < td

                    class ="code" > < pre > &  # 39;F j&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > NUMBER_GROUPING < / td >
                    < td

                    class ="code" > < pre > 0 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > PASSWORD_HASHERS < / td >
                    < td

                    class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > PASSWORD_RESET_TIMEOUT_DAYS < / td >
                    < td

                    class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > PREPEND_WWW < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > REDIS_HOST < / td >
                    < td

                    class ="code" > < pre > &  # 39;127.0.0.1&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > REDIS_PASSWD < / td >
                    < td

                    class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > REDIS_PORT < / td >
                    < td

                    class ="code" > < pre > &  # 39;6379&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > ROOT_URLCONF < / td >
                    < td

                    class ="code" > < pre > &  # 39;choujiang.urls&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SECRET_KEY < / td >
                    < td

                    class ="code" > < pre > &  # 39;********************&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SECURE_BROWSER_XSS_FILTER < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SECURE_CONTENT_TYPE_NOSNIFF < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SECURE_HSTS_INCLUDE_SUBDOMAINS < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SECURE_HSTS_SECONDS < / td >
                    < td

                    class ="code" > < pre > 0 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SECURE_PROXY_SSL_HEADER < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SECURE_REDIRECT_EXEMPT < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SECURE_SSL_HOST < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SECURE_SSL_REDIRECT < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SERVER_EMAIL < / td >
                    < td

                    class ="code" > < pre > &  # 39;root@localhost&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SESSION_CACHE_ALIAS < / td >
                    < td

                    class ="code" > < pre > &  # 39;default&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SESSION_COOKIE_AGE < / td >
                    < td

                    class ="code" > < pre > 1209600 < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SESSION_COOKIE_DOMAIN < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SESSION_COOKIE_HTTPONLY < / td >
                    < td

                    class ="code" > < pre > True < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SESSION_COOKIE_NAME < / td >
                    < td

                    class ="code" > < pre > &  # 39;sessionid&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SESSION_COOKIE_PATH < / td >
                    < td

                    class ="code" > < pre > &  # 39;/&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SESSION_COOKIE_SECURE < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SESSION_ENGINE < / td >
                    < td

                    class ="code" > < pre > &  # 39;django.contrib.sessions.backends.db&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SESSION_EXPIRE_AT_BROWSER_CLOSE < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SESSION_FILE_PATH < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SESSION_SAVE_EVERY_REQUEST < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > SESSION_SERIALIZER < / td >
                    < td

                    class ="code" > < pre > &  # 39;django.contrib.sessions.serializers.JSONSerializer&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SETTINGS_MODULE < / td >
                    < td

                    class ="code" > < pre > &  # 39;choujiang.settings&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SHORT_DATETIME_FORMAT < / td >
                    < td

                    class ="code" > < pre > &  # 39;m/d/Y P&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SHORT_DATE_FORMAT < / td >
                    < td

                    class ="code" > < pre > &  # 39;m/d/Y&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SIGNING_BACKEND < / td >
                    < td

                    class ="code" > < pre > &  # 39;django.core.signing.TimestampSigner&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > SILENCED_SYSTEM_CHECKS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > STATICFILES_DIRS < / td >
                    < td

                    class ="code" > < pre > ( &  # 39;/usr/local/choujiang/static&#39;,)</pre></td>
                    < / tr >

                    < tr >
                    < td > STATICFILES_FINDERS < / td >
                    < td

                    class ="code" > < pre >[&  # 39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,
                    &  # 39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>
                    < / tr >

                    < tr >
                    < td > STATICFILES_STORAGE < / td >
                    < td

                    class ="code" > < pre > &  # 39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > STATIC_ROOT < / td >
                    < td

                    class ="code" > < pre > None < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > STATIC_URL < / td >
                    < td

                    class ="code" > < pre > &  # 39;/static/&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > TEMPLATES < / td >
                    < td

                    class ="code" > < pre >[{&  # 39;APP_DIRS&#39;: True,
                    &  # 39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,
                    &  # 39;DIRS&#39;: [&#39;/usr/local/choujiang/templates&#39;],
                    &  # 39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.template.context_processors.debug&#39;,
                    &  # 39;django.template.context_processors.request&#39;,
                    &  # 39;django.contrib.auth.context_processors.auth&#39;,
                    &  # 39;django.contrib.messages.context_processors.messages&#39;]}}]</pre></td>
                    < / tr >

                    < tr >
                    < td > TEST_NON_SERIALIZED_APPS < / td >
                    < td

                    class ="code" > < pre >[] < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > TEST_RUNNER < / td >
                    < td

                    class ="code" > < pre > &  # 39;django.test.runner.DiscoverRunner&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > THOUSAND_SEPARATOR < / td >
                    < td

                    class ="code" > < pre > &  # 39;,&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > TIME_FORMAT < / td >
                    < td

                    class ="code" > < pre > &  # 39;P&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > TIME_INPUT_FORMATS < / td >
                    < td

                    class ="code" > < pre >[&  # 39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>
                    < / tr >

                    < tr >
                    < td > TIME_ZONE < / td >
                    < td

                    class ="code" > < pre > &  # 39;Asia/Shanghai&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > USE_ETAGS < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > USE_I18N < / td >
                    < td

                    class ="code" > < pre > True < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > USE_L10N < / td >
                    < td

                    class ="code" > < pre > True < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > USE_THOUSAND_SEPARATOR < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > USE_TZ < / td >
                    < td

                    class ="code" > < pre > True < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > USE_X_FORWARDED_HOST < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > USE_X_FORWARDED_PORT < / td >
                    < td

                    class ="code" > < pre > False < / pre > < / td >

                    < / tr >

                    < tr >
                    < td > WSGI_APPLICATION < / td >
                    < td

                    class ="code" > < pre > &  # 39;choujiang.wsgi.application&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > X_FRAME_OPTIONS < / td >
                    < td

                    class ="code" > < pre > &  # 39;SAMEORIGIN&#39;</pre></td>

                    < / tr >

                    < tr >
                    < td > YEAR_MONTH_FORMAT < / td >
                    < td

                    class ="code" > < pre > &  # 39;F Y&#39;</pre></td>

                    < / tr >

                    < / tbody >
                    < / table >

                    < / div >

                    < div
                    id = "explanation" >
                    < p >
                    You
                    're seeing this error because you have <code>DEBUG = True</code> in your
                    Django
                    settings
                    file.Change
                    that
                    to < code > False < / code >, and Django
                    will
                    display
                    a
                    standard
                    page
                    generated
                    by
                    the
                    handler
                    for this status code.
                    < / p >
                    < / div >

                    < / body >
                    < / html >

                    Process
                    finished
                    with exit code 0
                    for this status code.
                    < / p >
                    < / div >

                    < / body >
                    < / html >

                    Process
                    finished
                    with exit code 0
                    the
                                                                        handler
                                                                        for this status code.
                                                                        < / p >
                                                                        < / div >

                                                                        < / body >
                                                                        < / html >

                                                                        Process
                                                                        finished
                                                                        with exit code 0
                                                                        for this status code.
                                                                        < / p >
                                                                        < / div >

                                                                        < / body >
                                                                        < / html >

                                                                        Process
                                                                        finished
                                                                        with exit code 0
